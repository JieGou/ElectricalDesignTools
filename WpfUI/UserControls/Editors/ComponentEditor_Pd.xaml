<UserControl x:Class="WpfUI.UserControls.Editors.ComponentEditor_Pd"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WpfUI.UserControls.Editors"
             
             xmlns:iconControls="clr-namespace:WpfUI.UserControls.NotificationIcons"
             
             
             mc:Ignorable="d" 
             d:DesignHeight="250" d:DesignWidth="300"
             d:Background="AliceBlue"
             Background="Transparent">

    <UserControl.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../Stores/ToolTips.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Border BorderBrush="LightGray" BorderThickness="0 1 0 0"
            Margin="0 5 0 0">

        <Grid Margin="0 5 5 10"
            ShowGridLines="False">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="30"/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="15"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>


            <TextBlock Text="Protection Device / Starter"
                       Grid.Row="0" 
                       Grid.Column="0" Grid.ColumnSpan="5"
                       FontWeight="SemiBold"
                       Margin="0 0 0 5"
                       TextAlignment="Left"/>

            <Viewbox Width="17" Height="17"
                     Grid.Row="1" Grid.RowSpan="3"
                     Grid.Column="0" Grid.ColumnSpan="2"
                     Margin="20 0 0 30"
                     VerticalAlignment="Top"
                     HorizontalAlignment="Left">
                <Grid>
                    <!--Locked-->
                    <Canvas Width="24" Height="24"
                            Visibility="Collapsed">
                        <Path Fill="{StaticResource TextColorLightTheme_Black}" Data="M12,17C10.89,17 10,16.1 10,15C10,13.89 10.89,13 12,13A2,2 0 0,1 14,15A2,2 0 0,1 12,17M18,20V10H6V20H18M18,8A2,2 0 0,1 20,10V20A2,2 0 0,1 18,22H6C4.89,22 4,21.1 4,20V10C4,8.89 4.89,8 6,8H7V6A5,5 0 0,1 12,1A5,5 0 0,1 17,6V8H18M12,3A3,3 0 0,0 9,6V8H15V6A3,3 0 0,0 12,3Z" />
                    </Canvas>
                    <!--Unlocked-->
                    <Canvas Width="24" Height="24">
                        <Path Fill="{StaticResource TextColorLightTheme_Black}" Data="M10 13C11.1 13 12 13.89 12 15C12 16.11 11.11 17 10 17S8 16.11 8 15 8.9 13 10 13M18 1C15.24 1 13 3.24 13 6V8H4C2.9 8 2 8.9 2 10V20C2 21.1 2.9 22 4 22H16C17.1 22 18 21.1 18 20V10C18 8.9 17.1 8 16 8H15V6C15 4.34 16.34 3 18 3S21 4.34 21 6V8H23V6C23 3.24 20.76 1 18 1M16 10V20H4V10H16Z" />
                    </Canvas>
                </Grid>
            </Viewbox>

            <!--Trip-->
            <TextBlock Text="Trip"
                       Grid.Row="2" Grid.Column="1"
                                              Margin="0 3 0 0"

                        FontWeight="Normal"
                        TextAlignment="Right"/>
            <ComboBox Template="{DynamicResource ComboBoxBase}" 
                      Grid.Row="2" Grid.Column="3"
                      ItemsSource="{Binding Path=DataContext.TypeManager.BreakerTripSizes, 
                                          Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                          RelativeSource={RelativeSource Mode=FindAncestor, 
                                          AncestorType={x:Type Window}}}"
                      ItemStringFormat="{}{0} A"
                      SelectedValue="{Binding TripAmps}"
                      DisplayMemberPath="TripAmps"
                      SelectedValuePath="TripAmps"                  
                    
                  Text ="{Binding TripAmps,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    
                  IsSynchronizedWithCurrentItem="False" 
                        />

            <!--Frame-->
            <TextBlock Text="Frame"
                       Grid.Row="3" Grid.Column="1"
                                              Margin="0 3 0 0"

                        FontWeight="Normal"
                        TextAlignment="Right"/>

            <!--AIC-->
            <TextBlock Text="AIC Rating"
                       Grid.Row="4" Grid.Column="1"
                       Margin="0 3 0 0"
                       FontWeight="Normal"
                       TextAlignment="Right"/>
            <ComboBox Template="{DynamicResource ComboBoxBase}" 
                      Grid.Row="4" Grid.Column="3"
                      ItemsSource="{Binding Path=DataContext.TypeManager.BreakerAicRatings, 
                                          Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                          RelativeSource={RelativeSource Mode=FindAncestor, 
                                          AncestorType={x:Type Window}}}"
                      SelectedValue="{Binding AIC}"
                      DisplayMemberPath="kAicRating"
                      SelectedValuePath="kAicRating"
                      ItemStringFormat="{}{0} kA"
                      
                    
                      IsSynchronizedWithCurrentItem="False" 
                            />


            <!--Starter / Breaker-->
            <ComboBox Template="{DynamicResource ComboBoxBase}" 
                  Grid.Row="3" Grid.Column="3" 
                  Margin="0"
                  ItemsSource="{Binding Path=DataContext.TypeManager.BreakerFrameSizes, 
                                        Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                        RelativeSource={RelativeSource Mode=FindAncestor, 
                                        AncestorType={x:Type Window}}}"
                  ItemStringFormat="{}{0} A"
                  SelectedValue="{Binding FrameAmps}"
                  Text="{Binding FrameAmps, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  d:Text="100"
                  IsSynchronizedWithCurrentItem="False"  >
                <ComboBox.Style>
                    <Style TargetType="ComboBox">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Type}" Value="FDS">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>

            <!--Fused Disconnect-->
            <ComboBox Template="{DynamicResource ComboBoxBase}" 
                  Grid.Row="3" Grid.Column="3" 
                  Margin="0"
                  ItemsSource="{Binding Path=DataContext.TypeManager.DisconnectSizes, 
                                        Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                        RelativeSource={RelativeSource Mode=FindAncestor, 
                                        AncestorType={x:Type Window}}}"
                  ItemStringFormat="{}{0} A"
                  SelectedValue="{Binding FrameAmps}"
                      DisplayMemberPath="Amps"
                      SelectedValuePath="Amps"
                  Text="{Binding FrameAmps, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  d:Text="100"
                  IsSynchronizedWithCurrentItem="False" >
                <ComboBox.Style>
                    <Style TargetType="ComboBox">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Type}" Value="FDS">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>

            <!--Type-->
            <TextBlock Text="Type"
                        Grid.Row="6" Grid.Column="1"
                                              Margin="0 3 0 0"

                        FontWeight="Normal"
                        TextAlignment="Right"/>

            <ComboBox Grid.Row="6" Grid.Column="3" 
                      Template="{DynamicResource ComboBoxBase}"
                      HorizontalAlignment="Stretch"
                      Margin="0"
                      ItemsSource="{Binding TypeList, UpdateSourceTrigger=PropertyChanged}"
                      SelectedValue="{Binding Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      IsSynchronizedWithCurrentItem="False"
                      >
                <ComboBox.Style>
                    <Style TargetType="ComboBox">
                        <Setter Property="IsEnabled" Value="false"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Owner.Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                         Value="MOTOR">
                                <Setter Property="IsEnabled"  Value="True"/>
                            </DataTrigger>

                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>

            </ComboBox>

            <!--Starter-->
            <TextBlock Text="Starter"
                       Grid.Row="7" Grid.Column="1"
                       Margin="0 3 0 0"
                       
                        FontWeight="Normal"
                        TextAlignment="Right"/>
            <ComboBox Grid.Row="7" Grid.Column="3" 
                      Template="{DynamicResource ComboBoxBase}" 
                      Margin="0"
                      ItemsSource="{Binding Path=DataContext.TypeManager.StarterSizes, 
                                            RelativeSource={RelativeSource Mode=FindAncestor, 
                                            AncestorType={x:Type Window}}}"
                      DisplayMemberPath="Size"
                      Text ="{Binding StarterSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      IsSynchronizedWithCurrentItem="False" >

                <ComboBox.Style>
                    <Style TargetType="ComboBox">
                        <Setter Property="IsEnabled" Value="False"/>
                        <Setter Property="Text" Value="n/a"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                         Value="DOL">
                                <Setter Property="IsEnabled"  Value="True"/>
                                <Setter Property="Text" Value="{Binding StarterSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            </DataTrigger>
                            <DataTrigger Binding="{Binding Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                         Value="MCP_FVNR">
                                <Setter Property="IsEnabled"  Value="True"/>
                                <Setter Property="Text" Value="{Binding StarterSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            </DataTrigger>
                            <DataTrigger Binding="{Binding Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                         Value="MCP_FVR">
                                <Setter Property="IsEnabled"  Value="True"/>
                                <Setter Property="Text" Value="{Binding StarterSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>

            <!--Starter-->

            <iconControls:InfoIcon InformationText="{StaticResource MainLugsOnly}"
                                   Grid.Row="8" Grid.Column="1"
                                   
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Bottom"/>
            
            <CheckBox Content="Main Lugs Only"
                      Grid.Row="8" Grid.Column="2"  Grid.ColumnSpan="3"
                      Margin="0 10 0 0"
                      IsChecked="{Binding Owner.IsMainLugsOnly}"
                      >
                <CheckBox.Style>
                    <Style TargetType="CheckBox">
                        <Setter Property="IsEnabled" Value="False"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Owner.Type}" Value="SWG">
                                <Setter Property="IsEnabled"  Value="True"/>

                            </DataTrigger>
                            <DataTrigger Binding="{Binding Owner.Type}" Value="MCC">
                                <Setter Property="IsEnabled"  Value="True"/>

                            </DataTrigger>
                            <DataTrigger Binding="{Binding Owner.Type}" Value="CDP">
                                <Setter Property="IsEnabled"  Value="True"/>

                            </DataTrigger>
                            <DataTrigger Binding="{Binding Owner.Type}" Value="DPN">
                                <Setter Property="IsEnabled"  Value="True"/>

                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </CheckBox.Style>
            </CheckBox>

            

        </Grid>
    </Border>
</UserControl>
