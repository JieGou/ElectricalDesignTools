<UserControl x:Class="WpfUI.UserControls.Editors.CompEditor_Pd_Compact"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WpfUI.UserControls.Editors"
             
             xmlns:controls="clr-namespace:WpfUI.Controls"
             
             xmlns:iconControls="clr-namespace:WpfUI.UserControls.NotificationIcons"
             
             
             mc:Ignorable="d" 
             d:DesignHeight="500" d:DesignWidth="300"
             d:Background="AliceBlue"
             Background="Transparent">

    <UserControl.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../Stores/ToolTips.xaml"/>
                <ResourceDictionary Source="../../Styles/EdtStyle_Base.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <controls:EdtGroupBox  Margin="1">
        <controls:EdtGroupBox.Style>
            <Style TargetType="controls:EdtGroupBox" BasedOn="{StaticResource {x:Type controls:EdtGroupBox}}">
                <Setter Property="Header" Value="Protection Device / Starter"/>

                <Style.Triggers>

                    <DataTrigger Binding="{Binding Category}" Value="CctComponent">
                        <Setter Property="Header" Value="Circuit Component"/>
                    </DataTrigger>



                    <DataTrigger Binding="{Binding SubCategory}" Value="ProtectionDevice">
                        <Setter Property="Header" Value="Protection Device / Starter"/>
                    </DataTrigger>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Category}" Value="CctComponent" />
                            <Condition Binding="{Binding SubCategory}" Value="Disconnect" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Header" Value="Disconnect"/>
                    </MultiDataTrigger>

                </Style.Triggers>
            </Style>
        </controls:EdtGroupBox.Style>


        <Border BorderBrush="LightGray" BorderThickness="0 0 0 0"
            Margin="0 5 0 0">

            <Grid Margin="0"
            ShowGridLines="false">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="100" SharedSizeGroup="Label"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="15"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="15"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="10"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>


                <Border BorderBrush="Black" BorderThickness="0 1 0 1"
                        Grid.Row="0" 
                        Grid.Column="0" Grid.ColumnSpan="5"
                        Margin="-5 -5 -10 5"
                        Visibility="Collapsed">
                    <TextBlock Text="Protection Device / Starter"
                           Grid.Row="0" 
                           Grid.Column="0" Grid.ColumnSpan="5"
                           FontWeight="SemiBold"
                           Margin="10 0 0 5"
                           TextAlignment="Left"
                           Visibility="Visible"/>
                </Border>


                <!--Lock-->
                <CheckBox  Grid.Row="2" Grid.RowSpan="2"
                       Grid.Column="0"
                       Width="25"
                       HorizontalAlignment="Left"
                       Panel.ZIndex="1"
                       Template="{DynamicResource CheckBoxTemplate_LockIcon}"
                       IsChecked="{Binding IsCalculationLocked}"
                       Visibility="Visible"
                       ToolTipService.InitialShowDelay="250">
                    <CheckBox.Content>
                        <StackPanel Orientation="Vertical" Background="Transparent" Visibility="Collapsed">
                            <TextBlock Text="Calculation" />
                            <TextBlock Text="Lock"/>
                        </StackPanel>
                    </CheckBox.Content>
                    <CheckBox.ToolTip>
                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="Calculation Lock" FontWeight="SemiBold" Foreground="{StaticResource ToolTipTextBrush}"/>
                            <TextBlock Text="{StaticResource CalulationLock}" Foreground="{StaticResource ToolTipTextBrush}"/>
                        </StackPanel>
                    </CheckBox.ToolTip>
                </CheckBox>

                <!--AutoCalc-->
                <Button Style="{StaticResource IconButton}"
                    Command="{Binding AutoCalculateCommand}"
                    Grid.Row="2" Grid.RowSpan="2"
                    Grid.Column="1"
                    HorizontalAlignment="Left"                    
                    Panel.ZIndex="11"
                    >
                    <iconControls:CalculateIcon
                    Margin="1 1 0 0"/>
                </Button>


                <!--Type-->
                <TextBlock Text="Type"
                        Grid.Row="2" Grid.Column="1"
                                              Margin="0 3 0 0"

                        FontWeight="Normal"
                        TextAlignment="Right"/>


                <!--Type - Enabled if Motor-->
                <ComboBox Grid.Row="2" Grid.Column="3" 
                      Template="{DynamicResource ComboBoxBase}"
                      HorizontalAlignment="Stretch"
                      Margin="0"
                      ItemsSource="{Binding TypeList, UpdateSourceTrigger=PropertyChanged}"
                      SelectedValue="{Binding Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      IsSynchronizedWithCurrentItem="False"
                      >
                    <ComboBox.Style>
                        <Style TargetType="ComboBox">
                            <Setter Property="IsEnabled" Value="false"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Owner.Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                         Value="MOTOR">
                                    <Setter Property="IsEnabled"  Value="True"/>
                                </DataTrigger>

                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                </ComboBox>


                <!--Trip-->
                <!--*********************************-->
                <TextBlock Text="Trip"
                       Grid.Row="4" Grid.Column="1"
                                              Margin="0 3 0 0"

                        FontWeight="Normal"
                        TextAlignment="Right"/>

                <!--Trip - BREAKER-->
                <ComboBox Template="{DynamicResource ComboBoxBase}" 
                      Grid.Row="4" Grid.Column="3"
                      ItemsSource="{Binding Path=DataContext.TypeManager.BreakerTripSizes, 
                                          Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                          RelativeSource={RelativeSource Mode=FindAncestor, 
                                          AncestorType={x:Type Window}}}"
                      
                      SelectedValue="{Binding TripAmps}"
                      ItemStringFormat="{}{0} A"
                      DisplayMemberPath="TripAmps"
                      SelectedValuePath="TripAmps" 
                      Text="{Binding TripAmps,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      
                      IsSynchronizedWithCurrentItem="False" 
                        >
                    <ComboBox.Style>
                        <Style TargetType="ComboBox">
                            <Setter Property="IsEnabled" Value="True"/>

                            <Style.Triggers>

                                <DataTrigger Binding="{Binding Type}" Value="BKR">
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>

                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                </ComboBox>

                <!--Trip - DOL-->
                <ComboBox Template="{DynamicResource ComboBoxBase}" 
                      Grid.Row="4" Grid.Column="3"
                      ItemsSource="{Binding Path=DataContext.TypeManager.BreakerTripSizes, 
                                          Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                          RelativeSource={RelativeSource Mode=FindAncestor, 
                                          AncestorType={x:Type Window}}}"
                      
                      SelectedValue="{Binding TripAmps}"
                      ItemStringFormat="{}{0} A"
                      DisplayMemberPath="TripAmps"
                      SelectedValuePath="TripAmps" 
                      Text="{Binding TripAmps,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      
                      IsSynchronizedWithCurrentItem="False" 
                        >
                    <ComboBox.Style>
                        <Style TargetType="ComboBox">
                            <Setter Property="Visibility" Value="Collapsed"/>

                            <Style.Triggers>

                                <DataTrigger Binding="{Binding Type}" Value="MCP_FVR">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding Type}" Value="MCP_FVNR">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>

                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                </ComboBox>

                <!--Trip - Disconnect-->
                <ComboBox Template="{DynamicResource ComboBoxBase}" 
                      Grid.Row="4" Grid.Column="3"
                      ItemsSource="{Binding Path=DataContext.TypeManager.BreakerTripSizes, 
                                          Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                          RelativeSource={RelativeSource Mode=FindAncestor, 
                                          AncestorType={x:Type Window}}}"
                      
                      SelectedValue="{Binding TripAmps}"
                      ItemStringFormat="{}{0} A"
                      DisplayMemberPath="TripAmps"
                      SelectedValuePath="TripAmps" 
                      Text="{Binding TripAmps,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      
                      IsSynchronizedWithCurrentItem="False" 
                        >
                    <ComboBox.Style>
                        <Style TargetType="ComboBox">
                            <Setter Property="IsEnabled" Value="false"/>
                            <Setter Property="Visibility" Value="Collapsed"/>

                            <Style.Triggers>

                                <DataTrigger Binding="{Binding Type}" Value="FDS">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>

                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                </ComboBox>

                <!--Trip - DRIVE-->
                <ComboBox Template="{DynamicResource ComboBoxBase}" 
                      Grid.Row="4" Grid.Column="3"
                      ItemsSource="{Binding Path=DataContext.TypeManager.BreakerTripSizes, 
                                          Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                          RelativeSource={RelativeSource Mode=FindAncestor, 
                                          AncestorType={x:Type Window}}}"
                      
                      SelectedValue="{Binding TripAmps}"
                      ItemStringFormat="{}{0} A"
                      DisplayMemberPath="TripAmps"
                      SelectedValuePath="TripAmps" 
                      Text="{Binding TripAmps,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      
                      IsSynchronizedWithCurrentItem="False" 
                        >
                    <ComboBox.Style>
                        <Style TargetType="ComboBox">
                            <Setter Property="IsEnabled" Value="false"/>
                            <Setter Property="Visibility" Value="Collapsed"/>

                            <Style.Triggers>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Owner.FedFrom.Type}" Value="Splitter" />
                                        <Condition Binding="{Binding Type}" Value="VSD" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Setter Property="IsEnabled" Value="True"/>
                                </MultiDataTrigger>





                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                </ComboBox>





                <!--Frame-->
                <!--*********************************-->
                <TextBlock Text="Frame"
                       Grid.Row="5" Grid.Column="1"
                                              Margin="0 3 0 0"

                        FontWeight="Normal"
                        TextAlignment="Right"/>

                <!--FDS - Frame -->
                <ComboBox Template="{DynamicResource ComboBoxBase}" 
                  Grid.Row="5" Grid.Column="3" 
                  Margin="0"
                  ItemsSource="{Binding Path=DataContext.TypeManager.DisconnectSizes, 
                                        Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                        RelativeSource={RelativeSource Mode=FindAncestor, 
                                        AncestorType={x:Type Window}}}"
                  ItemStringFormat="{}{0} A"
                  SelectedValue="{Binding FrameAmps}"
                      DisplayMemberPath="Amps"
                      SelectedValuePath="Amps"
                  Text="{Binding FrameAmps, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  d:Text="100"
                  IsSynchronizedWithCurrentItem="False" >
                    <ComboBox.Style>
                        <Style TargetType="ComboBox">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Type}" Value="UDS">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Type}" Value="FDS">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                </ComboBox>

                <!--DOL / MCP FRAME -->
                <ComboBox Template="{DynamicResource ComboBoxBase}" 
                  Grid.Row="5" Grid.Column="3" 
                  Margin="0"
                  ItemsSource="{Binding Path=DataContext.TypeManager.BreakerFrameSizes, 
                                        Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                        RelativeSource={RelativeSource Mode=FindAncestor, 
                                        AncestorType={x:Type Window}}}"
                  ItemStringFormat="{}{0} A"
                  SelectedValue="{Binding FrameAmps}"
                  Text="{Binding FrameAmps, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  d:Text="100"
                  IsSynchronizedWithCurrentItem="False"  >
                    <ComboBox.Style>
                        <Style TargetType="ComboBox">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Type}" Value="UDS">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Type}" Value="FDS">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                </ComboBox>

                <!--Breaker - FRAME-->
                <ComboBox Template="{DynamicResource ComboBoxBase}" 
                  Grid.Row="5" Grid.Column="3" 
                  Margin="0"
                  ItemsSource="{Binding Path=DataContext.TypeManager.BreakerFrameSizes, 
                                        Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                        RelativeSource={RelativeSource Mode=FindAncestor, 
                                        AncestorType={x:Type Window}}}"
                  ItemStringFormat="{}{0} A"
                  SelectedValue="{Binding FrameAmps}"
                  Text="{Binding FrameAmps, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  d:Text="100"
                  IsSynchronizedWithCurrentItem="False"  >
                    <ComboBox.Style>
                        <Style TargetType="ComboBox">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Type}" Value="BKR">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                </ComboBox>


                <!--AIC-->
                <!--*********************************-->
                <TextBlock Text="AIC Rating"
                       Grid.Row="6" Grid.Column="1"
                       Margin="0 3 0 0"
                       FontWeight="Normal"
                       TextAlignment="Right"/>
                <ComboBox Template="{DynamicResource ComboBoxBase}" 
                      Grid.Row="6" Grid.Column="3"
                      ItemsSource="{Binding Path=DataContext.TypeManager.BreakerAicRatings, 
                                          Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                          RelativeSource={RelativeSource Mode=FindAncestor, 
                                          AncestorType={x:Type Window}}}"
                      SelectedValue="{Binding AIC}"
                      DisplayMemberPath="kAicRating"
                      SelectedValuePath="kAicRating"
                      ItemStringFormat="{}{0} kA"
                      
                    
                      IsSynchronizedWithCurrentItem="False" 
                            />


                <!--Starter-->
                <!--*********************************-->
                <TextBlock Text="Starter Size"
                       Grid.Row="8" Grid.Column="1"
                       Margin="0 3 0 0"
                       
                        FontWeight="Normal"
                        TextAlignment="Right"/>
                <ComboBox Grid.Row="8" Grid.Column="3" 
                      Template="{DynamicResource ComboBoxBase}" 
                      Margin="0"
                      ItemsSource="{Binding Path=DataContext.TypeManager.StarterSizes, 
                                            RelativeSource={RelativeSource Mode=FindAncestor, 
                                            AncestorType={x:Type Window}}}"
                      DisplayMemberPath="Size"
                      Text ="{Binding StarterSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      IsSynchronizedWithCurrentItem="False" >

                    <ComboBox.Style>
                        <Style TargetType="ComboBox">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Setter Property="Text" Value="n/a"/>
                            <Style.Triggers>

                                <DataTrigger Binding="{Binding Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                         Value="DOL">
                                    <Setter Property="IsEnabled"  Value="True"/>
                                    <Setter Property="Text" Value="{Binding StarterSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                </DataTrigger>

                                <DataTrigger Binding="{Binding Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                         Value="MCP_FVNR">
                                    <Setter Property="IsEnabled"  Value="True"/>
                                    <Setter Property="Text" Value="{Binding StarterSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                </DataTrigger>

                                <DataTrigger Binding="{Binding Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                         Value="MCP_FVR">
                                    <Setter Property="IsEnabled"  Value="True"/>
                                    <Setter Property="Text" Value="{Binding StarterSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                </ComboBox>

                <!--MLO-->
                <!--*********************************-->
                <iconControls:InfoIcon InformationText="{StaticResource MainLugsOnly}"
                                   Grid.Row="9" Grid.Column="1"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Bottom"/>

                <CheckBox Content="Main Lugs Only"
                      Grid.Row="9" Grid.Column="2"  Grid.ColumnSpan="3"
                      Margin="0 10 0 0"
                      IsChecked="{Binding Owner.IsMainLugsOnly}"
                      >
                    <CheckBox.Style>
                        <Style TargetType="CheckBox">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Owner.Type}" Value="SWG">
                                    <Setter Property="IsEnabled"  Value="True"/>

                                </DataTrigger>
                                <DataTrigger Binding="{Binding Owner.Type}" Value="MCC">
                                    <Setter Property="IsEnabled"  Value="True"/>

                                </DataTrigger>
                                <DataTrigger Binding="{Binding Owner.Type}" Value="CDP">
                                    <Setter Property="IsEnabled"  Value="True"/>

                                </DataTrigger>
                                <DataTrigger Binding="{Binding Owner.Type}" Value="DPN">
                                    <Setter Property="IsEnabled"  Value="True"/>

                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </CheckBox.Style>
                </CheckBox>


                <local:DisconnectPropterties Grid.Row="11"
                                             Grid.Column="0" Grid.ColumnSpan="4"/>


            </Grid>
        </Border>
    </controls:EdtGroupBox>
</UserControl>
