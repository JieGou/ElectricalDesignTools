<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <!--Base Button Style-->
    <Style x:Key="BaseButtonStyle"  TargetType="{x:Type Button}" >
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="Margin" Value="10 5"/>
       
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="{StaticResource ControlCornerRadius}" 
                        Background="{TemplateBinding Background}" 
                        BorderBrush="Black" 
                        BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="AliceBlue"/>
                <Setter Property="Foreground" Value="black"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="DarkGray"/>
                <Setter Property="Foreground" Value="LightGray"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--default button-->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButtonStyle}">

    </Style>

    <!--Icon button-->
    <Style x:Key="IconButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="20" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="Black" 
                            BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ButtonColor}"/>
                <Setter Property="Foreground" Value="black"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="DarkGray"/>
                <Setter Property="Foreground" Value="LightGray"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="RoundButtonBase" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="3" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="Black" 
                            BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="AliceBlue"/>
                <Setter Property="Foreground" Value="black"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="DarkGray"/>
                <Setter Property="Foreground" Value="LightGray"/>

            </Trigger>
        </Style.Triggers>
    </Style>

    <!--default button large-->
    <Style x:Key="BaseButtonLarge" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Width" Value="125"/>
        <Setter Property="Height" Value="27"/>
    </Style>

    <!--default button small-->
    <Style x:Key="BaseButtonSmall" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="20"/>
    </Style>

    <!--Red Button Style-->
    <Style x:Key="RedButton"  TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="#FFF7C1C1"/>
    </Style>

    <!--Green Button Style-->
    <Style x:Key="GreenButton"  TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="#FA7FCA6B"/>
    </Style>

    <!--DataGrid Filter Button Style-->
    <Style x:Key="FilterButton"  TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Content" Value="\/"/>
        <Setter Property="FontSize" Value="8"/>
        <Setter Property="Grid.Row" Value="0"/>
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Width" Value="15"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="Margin" Value="0 0 5 0"/>
    </Style>

    <!--Tool Bar / Sub-Menu Button-->
    <Style x:Key="ToolBarButtonBase" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="MinHeight" Value="{StaticResource SubMenuButtonHeight}"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Padding" Value="10 0"/>
    </Style>

    <!--Main Menu Button Dark-->
    <Style x:Key="MainMenuButton" TargetType="ToggleButton" >
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="Gray"/>
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Padding" Value="10 0"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="Transparent" 
                            BorderThickness="1 0"
                            BorderBrush="Transparent"
                            Padding="0">
                        <!-- define your not selected template here...-->
                        <TextBlock Text="{Binding Path=Content,
                                                    RelativeSource={RelativeSource TemplatedParent}, 
                                                    Mode=TwoWay,
                                                    UpdateSourceTrigger=PropertyChanged}"
                                   TextAlignment="Center"
                                   VerticalAlignment="Center"
                                   Margin="5 0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border Background="Transparent"
                                    BorderBrush="Transparent"
                                    BorderThickness="1 0"
                                    Padding="0">
                                <!--<Border Background="{StaticResource ComboBox.MouseOver.Background}">-->
                                <TextBlock Text="{Binding Path=Content,
                                                    RelativeSource={RelativeSource TemplatedParent}, 
                                                    Mode=TwoWay,
                                                    UpdateSourceTrigger=PropertyChanged}"
                                       TextAlignment="Center"
                                       VerticalAlignment="Center"
                                       Margin="5 0"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="White"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border Background="Transparent"
                                    BorderBrush="Black"
                                    BorderThickness="1 0"
                                    Padding="0">
                                <!--<Border Background="{StaticResource ComboBox.MouseOver.Background}">-->
                                <TextBlock Text="{Binding Path=Content,
                                                    RelativeSource={RelativeSource TemplatedParent}, 
                                                    Mode=TwoWay,
                                                    UpdateSourceTrigger=PropertyChanged}"
                                       TextAlignment="Center"
                                       VerticalAlignment="Center"
                                       Margin="5 0"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>

        </Style.Triggers>
    </Style>

    <!--Main Menu Button Light-->
    <Style x:Key="MainMenuButtonLight" TargetType="ToggleButton" >
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Padding" Value="10 0"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="Transparent" 
                            BorderThickness="1 0"
                            BorderBrush="Transparent"
                            Padding="0">
                        <!-- define your not selected template here...-->
                        <TextBlock Text="{Binding Path=Content,
                                                    RelativeSource={RelativeSource TemplatedParent}, 
                                                    Mode=TwoWay,
                                                    UpdateSourceTrigger=PropertyChanged}"
                                   TextAlignment="Center"
                                   VerticalAlignment="Center"
                                   Margin="5 0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border Background="{DynamicResource ComboBox.MouseOver.Background}"
                                    BorderBrush="Transparent"
                                    BorderThickness="1 0"
                                    Padding="0">
                                <!--<Border Background="{StaticResource ComboBox.MouseOver.Background}">-->
                                <TextBlock Text="{Binding Path=Content,
                                                    RelativeSource={RelativeSource TemplatedParent}, 
                                                    Mode=TwoWay,
                                                    UpdateSourceTrigger=PropertyChanged}"
                                       TextAlignment="Center"
                                       VerticalAlignment="Center"
                                       Margin="5 0"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border Background="{DynamicResource ComboBox.MouseOver.Background}"
                                    BorderBrush="Black"
                                    BorderThickness="1 0"
                                    Padding="0">
                                <!--<Border Background="{StaticResource ComboBox.MouseOver.Background}">-->
                                <TextBlock Text="{Binding Path=Content,
                                                    RelativeSource={RelativeSource TemplatedParent}, 
                                                    Mode=TwoWay,
                                                    UpdateSourceTrigger=PropertyChanged}"
                                       TextAlignment="Center"
                                       VerticalAlignment="Center"
                                       Margin="5 0"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="DarkGray"/>
                <Setter Property="Foreground" Value="LightGray"/>
            </Trigger>

        </Style.Triggers>
    </Style>

</ResourceDictionary>