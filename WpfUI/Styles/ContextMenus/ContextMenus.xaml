<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    
    <ContextMenu  x:Key="LoadContextMenu">
        
        <MenuItem Header="Move to Area" Command="{Binding SetAreaCommand}"  />
        
        <MenuItem Header="Set FedFrom" Command="{Binding SetFedFromCommand}"  >
            <MenuItem.Icon>
                <Image Source="../../ResourceFiles/MenuIcons/set48.png"
                       Height="10"
                       RenderOptions.BitmapScalingMode="HighQuality"/>
            </MenuItem.Icon>
        </MenuItem>
        
        <MenuItem Header="Add"  >
            <MenuItem.Icon>
                <Image Source="../../ResourceFiles/MenuIcons/plus24.png"
                       Height="10"
                       RenderOptions.BitmapScalingMode="HighQuality"/>
            </MenuItem.Icon>
            <MenuItem Header="Add Disconnect"   Command="{Binding AddDisconnectCommand}" />
            <MenuItem Header="Add Drive"  Command="{Binding AddDriveCommand}" />
            <MenuItem Header="Add LCS"   Command="{Binding AddLcsCommand}"/>
        </MenuItem>
        
        <MenuItem Header="Remove">
            <MenuItem.Icon>
                <Image Source="../../ResourceFiles/MenuIcons/minus24.png"
                                                       Height="10"
                                                       RenderOptions.BitmapScalingMode="HighQuality"/>
            </MenuItem.Icon>
            <MenuItem Header="Remove Disconnect" Command="{Binding RemoveDisconnectCommand}" />
            <MenuItem Header="Remove Drive" Command="{Binding RemoveDriveCommand}" />
            <MenuItem Header="Remove LCS"  Command="{Binding RemoveLcsCommand}" />
        </MenuItem>
        
        <Separator/>
        
        <MenuItem Header="Delete"  Command="{Binding DeleteLoadCommand}"  CommandParameter="{Binding SelectedLoad}"/>
    </ContextMenu>

    
    

    <!-- Separator -->
    <Style TargetType="{x:Type Separator}" x:Key="SeparatorStyle">
        <Setter Property="Height" Value="1" />
        <Setter Property="Background" Value="{DynamicResource Dark}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Rectangle Height="{TemplateBinding Height}"
                               Fill="White" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    
    <!-- Main Menu -->
    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">

                    <Border x:Name="Border"
                            BorderThickness="1" BorderBrush="Black"
                            Background="{DynamicResource Background}"
                            CornerRadius="{StaticResource ControlCornerRadius}">
                        
                        <StackPanel ClipToBounds="True"
                                    Orientation="Vertical"
                                    IsItemsHost="True" />
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource Background}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <!--Menu items-->
    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Height" Value="27"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource Background}"></Setter>
        <Setter Property="Foreground" Value="{StaticResource TextColorLightTheme_Black}"></Setter>

        <Style.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" Value="{DynamicResource Medium}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Dark}" />
            </Trigger>

            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{DynamicResource Medium}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Dark}" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="LightGray"></Setter>
            </Trigger>


        </Style.Triggers>
    </Style>

    <!-- Submenu Item -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border" CornerRadius="{StaticResource ControlCornerRadius}"
                >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"  />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto"  />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                
                <ContentPresenter Name="Icon"
                                  Margin="10,0,20,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon" />
                <Border Name="Check"
                        Width="13"
                        Height="13"
                        Visibility="Collapsed"
                        Margin="6,0,6,0"
                        Background="{StaticResource Background}"
                        BorderThickness="1"
                        BorderBrush="{StaticResource ControlBorder}"
                        CornerRadius="{StaticResource ControlCornerRadius}">
                    <Path Name="CheckMark"
                          Width="7"
                          Height="7"
                          Visibility="Hidden"
                          SnapsToDevicePixels="False"
                          Stroke="#5082a4"
                          StrokeThickness="2"
                          Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                </Border>
                
                <ContentPresenter Name="HeaderHost"
                                  Grid.Column="1"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True" 
                                  Width="150"
                                  VerticalAlignment="Center"/>
                
                <TextBlock x:Name="InputGestureText"
                           Grid.Column="2"
                           Text="{TemplateBinding InputGestureText}"
                           Margin="5,2,0,2"
                           DockPanel.Dock="Right" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon"  Property="Visibility" Value="Hidden" />
            </Trigger>
            
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
            </Trigger>
            
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Check" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>
            
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource Medium}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Dark}" />
            </Trigger>
            
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#0f3c5a" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    
    
    <!-- Submenu Header -->
    
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border"
                CornerRadius="{StaticResource ControlCornerRadius}"
                >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                
                <ContentPresenter Name="Icon"
                                  Margin="10,0,20,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon" />
                
                <ContentPresenter Name="HeaderHost"
                                  Grid.Column="1"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True"  
                                  VerticalAlignment="Center"/>
                
                <TextBlock x:Name="InputGestureText"
                           Grid.Column="2"
                           Text="{TemplateBinding InputGestureText}"
                           Margin="5"
                           DockPanel.Dock="Right" />
                
                <Path Grid.Column="3"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="M 0 0 L 0 7 L 4 3.5 Z"
                      Fill="Black" />
                <Popup Name="Popup"
                       Placement="Right"
                       HorizontalOffset="-4"
                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                       AllowsTransparency="True"
                       Focusable="False"
                       PopupAnimation="Fade">
                    <Border Name="SubmenuBorder"
                            SnapsToDevicePixels="True"
                            Background="{DynamicResource Background}"
                            BorderBrush="Black"
                            BorderThickness="1">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </Popup>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource Medium}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Dark}" />
            </Trigger>
            
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="{StaticResource ControlCornerRadius}" />
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,0" />
            </Trigger>
            
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource TextColorLightTheme_Black}" />
            </Trigger>
            
        </ControlTemplate.Triggers>
    </ControlTemplate>






</ResourceDictionary>