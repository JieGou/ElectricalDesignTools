<UserControl x:Class="WpfUI.Views.EquipmentView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfUI.Views"
        xmlns:root="clr-namespace:WpfUI"
        xmlns:rules="clr-namespace:WpfUI.ValidationRules"
        xmlns:converters="clr-namespace:WpfUI.Converters"
              xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:h="clr-namespace:WpfUI.Helpers"
        xmlns:commands="clr-namespace:WpfUI.Commands"
        xmlns:viewModifiers="clr-namespace:WpfUI.ViewModifiers"
        xmlns:views="clr-namespace:WpfUI.Views"
        xmlns:viewComponents="clr-namespace:WpfUI.ViewComponents"
        xmlns:edt="clr-namespace:EDTLibrary;assembly=EDTLibrary"
              xmlns:edtDteqModels="clr-namespace:EDTLibrary.Models.DistributionEquipment;assembly=EDTLibrary"
              xmlns:edtLoadModels="clr-namespace:EDTLibrary.Models.Loads;assembly=EDTLibrary"
        mc:Ignorable="d"
        d:Width="1980" d:Height="1000"
             Background="#FFDAEEF3">
    <UserControl.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Styles/EdtTealStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <converters:PercentLoadedToColorConverter x:Key="PercentLoadedToColor"/>
            <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>

            <CollectionViewSource x:Key="dteqList" Source="{Binding ListManager.DteqList}"/>


            <Style x:Key="ColumnElementStyle" TargetType="TextBlock">
                <Setter Property="Margin" Value="10,0,10,0" />
            </Style>



            <sys:Int32 x:Key="dteqViewButtons">1</sys:Int32>
            <sys:Int32 x:Key="dteq">2</sys:Int32>
            <sys:Int32 x:Key="adding">3</sys:Int32>

            <sys:Int32 x:Key="loadViewButtons">4</sys:Int32>
            <sys:Int32 x:Key="load">5</sys:Int32>
            <sys:Int32 x:Key="bottom">6</sys:Int32>

            <!--ADD-->
            <sys:Int32 x:Key="Tag">1</sys:Int32>
            <sys:Int32 x:Key="Type">2</sys:Int32>
            <sys:Int32 x:Key="FedFrom">4</sys:Int32>
            <sys:Int32 x:Key="Voltage">7</sys:Int32>
            <sys:Int32 x:Key="Size">5</sys:Int32>
            <sys:Int32 x:Key="Unit">6</sys:Int32>
            <sys:Int32 x:Key="Description">3</sys:Int32>
            <sys:Int32 x:Key="LoadFactor">8</sys:Int32>

        </ResourceDictionary>
    </UserControl.Resources>



    <!--TOP-->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Label Content="DISTRIBUTION EQUIPMENT AND LOADING"
               Style="{StaticResource TitleLabelStyle}"/>


        <!--Main Grid-->
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="30"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="20"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="{Binding DteqGridBottom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" d:Height="400"/>
                <RowDefinition Height="{Binding LoadGridTop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" d:Height="200"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!--Below Below Dteq-->
            <GridSplitter  Grid.Row="2" Grid.ColumnSpan="4" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"   
                               Height="5" Background="AliceBlue" BorderBrush="DarkGray" BorderThickness="0"
                               Margin="3 0 3 0"/>

            <!--Below Load Grid-->
            <GridSplitter  Grid.Row="3" Grid.ColumnSpan="4" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"   
                               Height="5" Background="AliceBlue" BorderBrush="DarkGray" BorderThickness="0"
                               Margin="3 0 3 0"/>
            <!--MENU BUTTONS-->
            <!--DTEQ Buttons-->
            <StackPanel Orientation="Vertical"
                Grid.Column="1" Grid.Row="{StaticResource dteq}"
                Margin="0,50,0,0">


                <Button Name ="btnGetAll" Content="Get All" 
                Command="{Binding GetAllCommand}"/>

                <Button Name ="btnSaveAll" Content="Save All"
                Command="{Binding SaveAllCommand}"/>

                <Button Name ="btnSizeCables" Content="Size Cables"
                Command="{Binding SizeCablesCommand}"/>

                <Button Name ="btnCalcCableAmps" Content="Cable Amps"
                Command="{Binding CalculateAllCableAmpsCommand}"/>

                <Button Name ="btnDeleteDteq" Content="Delete Selected"
                Command="{Binding DeleteDteqCommand}"
                        Background="#FFF7C1C1"/>
            </StackPanel>

            <!--Dteq View Buttons-->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left"
                Grid.Row="{StaticResource dteqViewButtons}" Grid.Column="3">

                <Button Content="Toggle Row View"
                Command="{Binding Path=ToggleRowViewDteqCommand}"/>

                <Button Content="Loading Data"
                        Command="{Binding Path=ToggleLoadingViewDteqCommand}"/>

                <Button Content="OCDP Data"
                Command="{Binding Path=ToggleOcpdViewDteqCommand}"/>

                <Button Content="Cable Data"
                Command="{Binding Path=ToggleCableViewDteqCommand}"/>

            </StackPanel>
            <!--ADD Buttons-->
            <StackPanel Orientation="Vertical"
                Grid.Column="1" Grid.Row="{StaticResource adding}"
                Margin="0,10,0,10">

                <Button Name ="btnAddDteq" Content="Add Dist. Eq." 
                Command="{Binding Path=AddDteqCommand}"
                Margin="10,15,10,30" Background="#FF68BF51"/>

                <Button Name ="btnAddLoad" Content="Add Load" 
                Command="{Binding Path=AddLoadCommand}"
                Margin="10,15,10,10" Background="#FF68BF51"/>

            </StackPanel>

            <!--LOAD Buttons-->
       
            <StackPanel Orientation="Vertical" 
                Grid.Column="1" Grid.Row="{StaticResource load}"
                Margin="0,50,0,50">

                <Button x:Name ="btnLoadList" Content="Load List" Height="27" Width="125"
            Command="{Binding ShowAllLoadsCommand}"/>

                <Button x:Name ="btnSaveLoadList" Content="Save Load List" Height="27" Width="125"
            Command="{Binding SaveLoadListCommand}"/>

                <Button x:Name ="btnDeleteLoadList" Content="Delete Load" Height="27" Width="125"
            Command="{Binding DeleteLoadCommand}" Background="#FFF7C1C1"/>


                <Button Name ="btnCalculate" Content="Calculate All" 
                Command="{Binding CalculateAllCommand}"
                FontWeight="Bold"
                Margin="0 50 0 0"/>

            </StackPanel>


            <!--Load VIEW Buttons-->
            
            <!--<StackPanel Orientation="Horizontal" VerticalAlignment="Bottom"
                        Grid.Row="3" Grid.Column="3">

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">

                    <Button Content="OCPD Data"
                Command="{Binding Path=ToggleOcpdViewLoadCommand}"/>

                    <Button Content="Cable Data"
                Command="{Binding Path=ToggleCableViewLoadCommand}"/>

                </StackPanel>
            </StackPanel>-->

            <!--DTEQ-->
            <!--GRID-->
            <Grid Grid.Row="{StaticResource dteq}" Grid.Column="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding DteqGridRight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                
               <!--DETAILS VIEW-->
                <!--Dteq-->
                <TextBlock Grid.Row="0" Grid.Column="2" Text="Distribution Equipment Details" Margin="10"/>
                <Border Grid.Row="0" Grid.Column="2" BorderThickness="1" BorderBrush="Black" Background="LightCyan"
                        Margin="10 30 10 10">
                    <ContentControl x:Name="DteqDetailsContent" Grid.Row="{StaticResource dteq}" Grid.Column="4">
                        <!--Content="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}},Path=DataContext.SelectedDteq, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">-->
                        <ContentControl.Resources>
                            <DataTemplate DataType="{x:Type edtDteqModels:DteqModel}">
                                <views:EqView/>
                            </DataTemplate>
                        </ContentControl.Resources>
                    </ContentControl>
                </Border>

                <GridSplitter  Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Stretch"   
                               Width="5" Background="AliceBlue" BorderBrush="DarkGray" BorderThickness="0"
                               Margin="0 10 0 0"/>

                <!--DTEQ-->
                <!--DATA GRID-->
                <DataGrid x:Name="dgdDteq" 
                          Grid.Column="0" Grid.Row="0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top"
                          d:Height="250"
                          Height="{Binding DteqGridHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          Margin="10"
                          ItemsSource="{Binding ListManager.IDteqList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{Binding SelectedDteq, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"    
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          AutoGenerateColumns="False"
                          EnableRowVirtualization="True"
                          EnableColumnVirtualization="True"
                          ScrollViewer.CanContentScroll="True"
                          SelectionChanged="dgdDteq_SelectionChanged"
                          VirtualizingPanel.IsVirtualizing="True"
                          VirtualizingStackPanel.VirtualizationMode="Recycling"
                          RowDetailsVisibilityMode="{Binding ToggleRowViewDteqProp}" >

                    <DataGrid.Resources>
                        <Style x:Key="errorStyle" TargetType="{x:Type TextBlock}">
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="ToolTipService.InitialShowDelay" Value="100"/>
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="True">
                                    <Setter Property="Background" Value="Red"/>
                                    <Setter Property="Foreground" Value="Red"/>
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>

                        <viewModifiers:BindingProxy x:Key="LoadingViewProxy" Data="{Binding DteqGridViewModifier.Loading}" />
                        <viewModifiers:BindingProxy x:Key="OcpdViewProxy" Data="{Binding DteqGridViewModifier.Ocpd}" />
                        <viewModifiers:BindingProxy x:Key="CableViewProxy" Data="{Binding DteqGridViewModifier.Cable}" />
                    </DataGrid.Resources>

                    <DataGrid.Columns>
                        <!--Basic-->
                        <!--Textblock cell padding style in this.resources Move to ResDict-->

                        <!--Tag-->
                        <DataGridTextColumn Header="Tag" x:Name="dteqTag" 
                                        Width="75"
                                        Binding="{Binding Path=Tag, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=Explicit, ValidatesOnDataErrors=True}" 
                                        ElementStyle="{StaticResource ColumnElementStyle}" 
                                        Visibility="Visible"/>

                        <!--<DataGridTemplateColumn Header="Tag"
                                    MinWidth="75">
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <TextBox  Text="{Binding Path=Tag, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                    Background="Transparent"
                                    BorderThickness="0"
                                    Margin="0"/>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
                <DataGridTemplateColumn.CellEditingTemplate>
                    <DataTemplate>
                        <TextBox  Text="{Binding Path=Tag, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                    Background="White"
                                    FontWeight="Bold"
                                    BorderThickness="0"
                                    Margin="0"/>
                    </DataTemplate>
                </DataGridTemplateColumn.CellEditingTemplate>
            </DataGridTemplateColumn>-->

                        <!--Description-->
                        <DataGridTextColumn Header="Description" x:Name="dteqDescription"
                                MinWidth="150" 
                                Binding="{Binding Path=Description, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=Explicit, ValidatesOnDataErrors=True}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                    <Setter Property="Margin" Value="5 0"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <!--Type-->
                        <DataGridTemplateColumn Header="EQ Type" x:Name="dteqType"
                                    MinWidth="75">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ComboBox ItemsSource="{Binding Source={h:EnumBindingSource {x:Type edt:DteqTypes}}}"
                                    SelectedValue="{Binding Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Text="{Binding Type, ValidatesOnDataErrors=True}"
                                    HorizontalContentAlignment="Center"
                                    IsEditable="True" IsTextSearchEnabled="True"
                                    IsSynchronizedWithCurrentItem="False"
                                    BorderThickness="0"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--Fed From Model-->
                        <DataGridComboBoxColumn Header=" Fed&#x0a;From" DisplayMemberPath="Tag" SelectedItemBinding="{Binding FedFrom}">
                            <DataGridComboBoxColumn.ElementStyle>
                                <Style TargetType="ComboBox">
                                    <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}},Path=DataContext.ListManager.DteqList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <Setter Property="SelectedItem" Value="{Binding Path=FedFrom}" />

                                    <Setter Property="SelectedValuePath" Value="Id" />
                                    <Setter Property="DisplayMemberPath" Value="Tag" />
                    
                                </Style>
                            </DataGridComboBoxColumn.ElementStyle>
                            <DataGridComboBoxColumn.EditingElementStyle>
                                <Style TargetType="ComboBox">
                                    <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}},Path=DataContext.ListManager.DteqList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <Setter Property="SelectedItem" Value="{Binding Path=FedFrom}" />
                                    
                                    <Setter Property="DisplayMemberPath" Value="Tag" />
                                    <Setter Property="SelectedValuePath" Value="Id" />
                                </Style>
                            </DataGridComboBoxColumn.EditingElementStyle>
                        </DataGridComboBoxColumn>

                        <!--Fed From Model Template Column-->
                        <DataGridTemplateColumn Header=" Fed&#x0a;From" x:Name="dteqFedFrom" 
                                    MinWidth="75">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding FedFrom.Tag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

                                    <!-- CAUSES Disapearing when inside "Text" : UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True-->

                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <ComboBox ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}},Path=DataContext.ListManager.DteqList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              SelectedItem="{Binding Path=FedFrom.Tag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              DisplayMemberPath="Tag"
                                              SelectedValuePath="Id"
                                            HorizontalContentAlignment="Center"
                                            IsEditable="False" IsTextSearchEnabled="False" IsReadOnly="True" TextSearch.Text=""
                                            IsSynchronizedWithCurrentItem="False"
                                            BorderThickness="0" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>
                        
                        <!--Fed From TAG-->
                        <DataGridTemplateColumn Header=" Fed&#x0a;From TAG" x:Name="dteqFedFromNew" 
                                    MinWidth="75">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding FedFromTag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

                                    <!-- CAUSES Disapearing when inside "Text" : UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True-->

                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <ComboBox ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}},Path=DataContext.FedFromList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            SelectedItem="{Binding FedFromTag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                            Text="{Binding FedFromTag}"  
                                            HorizontalContentAlignment="Center"
                                            IsEditable="False" IsTextSearchEnabled="False" IsReadOnly="True" TextSearch.Text=""
                                            IsSynchronizedWithCurrentItem="False"
                                            BorderThickness="0" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <!--Voltage-->
                        <!--<DataGridTemplateColumn Header="dteqVoltage">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Voltage, ValidatesOnDataErrors=True}"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                                
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <ComboBox ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}},Path=DataContext.VoltageTypes}"
                                    SelectedValue="{Binding Voltage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Text="{Binding Voltage, ValidatesOnDataErrors=True}"
                                    HorizontalContentAlignment="Center"
                                    IsEditable="True" IsTextSearchEnabled="True"
                                    IsSynchronizedWithCurrentItem="False"
                                    BorderThickness="0"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>-->

                        <!--Line Voltage-->
                        <DataGridTemplateColumn  Header="   Line &#x0a;Voltage" x:Name="dteqLineVoltage">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding LineVoltage, ValidatesOnDataErrors=True}"></TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>

                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <ComboBox ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}},Path=DataContext.VoltageTypes}"
                                    SelectedValue="{Binding Path=LineVoltage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Text="{Binding LineVoltage}"
                                    HorizontalContentAlignment="Center"
                                    IsEditable="True" IsTextSearchEnabled="True"
                                    IsSynchronizedWithCurrentItem="False"
                                    BorderThickness="0"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <!--Load Voltage-->
                        <DataGridTemplateColumn Header="  Load &#x0a;Voltage" x:Name="dteqLoadVoltage">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding LoadVoltage, ValidatesOnDataErrors=True}"></TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>

                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <ComboBox ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}},Path=DataContext.VoltageTypes}"
                                    SelectedValue="{Binding Path=LoadVoltage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Text="{Binding LoadVoltage}"
                                    HorizontalContentAlignment="Center"
                                    IsEditable="True" IsTextSearchEnabled="True"
                                    IsSynchronizedWithCurrentItem="False"
                                    BorderThickness="0"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <!--Size-->
                        <DataGridTextColumn Header="Size" x:Name="dteqSize"
                                MinWidth="50"
                                Binding="{Binding Path=Size, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                    <Setter Property="Margin" Value="5 0"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <!--Unit-->
                        <DataGridTemplateColumn Header="Unit"
                                    MinWidth="50">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ComboBox ItemsSource="{Binding Source={h:EnumBindingSource {x:Type edt:Units}}}"
                                    SelectedValue="{Binding Unit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Text="{Binding Unit, ValidatesOnDataErrors=True}"
                                    IsEditable="True" IsTextSearchEnabled="True"
                                    IsSynchronizedWithCurrentItem="False"
                                    BorderThickness="0"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>


                        <!--Loading-->
                        <!--FLA-->
                        <DataGridTextColumn Header="FLA / Max&#x0a;    Amps" x:Name="dteqFla" 
                                MinWidth="40"
                                Binding="{Binding Path=Fla, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                IsReadOnly="True"/>
                        <!--Running Amps-->
                        <DataGridTextColumn Header="Running &#x0a;  Amps" x:Name="dteqRunningAmps"
                                Binding="{Binding Path=RunningAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                IsReadOnly="True"/>

                        <!--Percent Loaded-->

                        <DataGridTemplateColumn Header="Percent &#x0a;Loaded"
                                x:Name="dteqPercentLoaded"
                                MinWidth="35"
                                MaxWidth="55"
                                IsReadOnly="True">

                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <TextBlock Text="{Binding PercentLoaded, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        Background="{Binding PercentLoaded, Converter={StaticResource PercentLoadedToColor}}"
                                        Height="23" Width="40"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Stretch"
                                        TextAlignment="Center"
                                        Margin="0"/>
                                        <TextBlock Text="%  "
                                        Background="{Binding PercentLoaded, Converter={StaticResource PercentLoadedToColor}}"
                                        HorizontalAlignment="Left"/>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--Power Factor-->
                        <DataGridTextColumn Header=" PF " x:Name="dteqPowerFactor" 
                                        Width="40"
                                        Binding="{Binding Path=PowerFactor, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        IsReadOnly="True"
                                        Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource LoadingViewProxy}}"/>

                        <DataGridTextColumn Header="Conn &#x0a; kVA" x:Name="dteqConnectedKva"
                                Binding="{Binding Path=ConnectedKva, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                IsReadOnly="True"
                                Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource LoadingViewProxy}}"/>

                        <DataGridTextColumn Header="Dem &#x0a; kVA" x:Name="dteqDemandKva"
                                Binding="{Binding Path=DemandKva, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                IsReadOnly="True"
                                Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource LoadingViewProxy}}"/>

                        <DataGridTextColumn Header="Dem &#x0a; kW" x:Name="dteqDemandKw" 
                                Binding="{Binding Path=DemandKw, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                IsReadOnly="True"
                                Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource LoadingViewProxy}}"/>

                        <DataGridTextColumn Header="Dem &#x0a;kVAR" x:Name="dteqDemandKvar" 
                                Binding="{Binding Path=DemandKvar, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                IsReadOnly="True"
                                Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource LoadingViewProxy}}"/>

                        <!--OCPD-->
                        <DataGridTextColumn Header="OCPD &#x0a;  Type" x:Name="dteqPdType" 
                                Binding="{Binding Path=PdType, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource OcpdColumnHeader}" 
                                Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource OcpdViewProxy}}"/>

                        <DataGridTextColumn Header="OCPD &#x0a;  Trip" x:Name="dteqPdSizeTrip" 
                                Binding="{Binding Path=PdSizeTrip, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource OcpdColumnHeader}" 
                                Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource OcpdViewProxy}}"/>

                        <DataGridTextColumn Header="OCPD &#x0a;Frame" x:Name="dteqPdSizeFrame" 
                                Binding="{Binding Path=PdSizeFrame, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource OcpdColumnHeader}" 
                                Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource OcpdViewProxy}}"/>


                        <!--CABLE-->
                        <DataGridTextColumn Header="Cable &#x0a;  Qty" x:Name="dteqCableQty"
                                Binding="{Binding Path=Cable.QtyParallel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource CableHeaderColumn}" 
                                        Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource CableViewProxy}}"/>

                        <DataGridTextColumn Header="Cable &#x0a; Size" x:Name="dteqCableSize" 
                                Binding="{Binding Path=Cable.Size, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource CableHeaderColumn}" 
                                        Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource CableViewProxy}}"/>

                        <DataGridTextColumn Header=" Base &#x0a;Amps" x:Name="dteqCableBaseAmps" 
                                Binding="{Binding Path=Cable.BaseAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource CableHeaderColumn}" 
                                        Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource CableViewProxy}}"/>

                        <!--<DataGridTextColumn Header="   Req'd&#x0a;Sz. Amps" x:Name="dteqCableRequiredSizingAmps" 
                                Binding="{Binding Path=Cable.RequiredSizingAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource CableHeaderColumn}" 
                                        Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource CableViewProxy}}"/>-->


                        <DataGridTextColumn Header="  Cable&#x0a;Derating" x:Name="dteqCableDerating" 
                                Binding="{Binding Path=Cable.Derating, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource CableHeaderColumn}" 
                                        Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource CableViewProxy}}"/>

                        <DataGridTextColumn Header="Derated &#x0a;  Amps" x:Name="dteqCableDeratedAmps" 
                                Binding="{Binding Path=Cable.DeratedAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource CableHeaderColumn}" 
                                        Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource CableViewProxy}}"/>

                        <DataGridTextColumn Header="Req'd&#x0a;Amps" x:Name="dteqCableRequiredAmps" 
                                Binding="{Binding Path=Cable.RequiredAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource CableHeaderColumn}" 
                                        Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource CableViewProxy}}"/>
                    </DataGrid.Columns>

                    <DataGrid.RowDetailsTemplate>
                        <DataTemplate>
                            <Border BorderThickness="0" Background="Beige" Padding="10">
                                <Grid Margin="5,0,0,0" MinWidth="650" HorizontalAlignment="Left">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="125"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                    </Grid.RowDefinitions>

                                    <ContentControl Content="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}},Path=DataContext.SelectedDteq, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                Grid.Row="0" Grid.Column="0">
                                        <ContentControl.Resources>
                                            <DataTemplate DataType="{x:Type edtDteqModels:DteqModel}">
                                                <StackPanel>
                                                    <views:EqView/>

                                                </StackPanel>
                                            </DataTemplate>
                                            <DataTemplate DataType="{x:Type edtLoadModels:LoadModel}">
                                                <StackPanel>
                                                    <TextBlock Text="Load Efficiency:"/>
                                                    <TextBlock Text="{Binding Efficiency}"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ContentControl.Resources>
                                    </ContentControl>

                                </Grid>
                            </Border>
                        </DataTemplate>
                    </DataGrid.RowDetailsTemplate>

                    <DataGrid.RowValidationRules>
                        <rules:InvalidFedFromRule ValidatesOnTargetUpdated="True" ValidationStep="CommittedValue"/>
                    </DataGrid.RowValidationRules>

                    <DataGrid.RowValidationErrorTemplate>
                        <ControlTemplate>
                            <Grid Margin="5,2,0,0"
                                ToolTip="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Path=(Validation.Errors)[0].ErrorContent}"
                                ToolTipService.InitialShowDelay="50">

                                <!--<Ellipse StrokeThickness="0" Fill="Red" 
                                Width="{TemplateBinding FontSize}" 
                                Height="{TemplateBinding FontSize}" />-->
                                <TextBlock Text="X" FontSize="15" 
                                    FontWeight="UltraBold" Foreground="Red" 
                                    HorizontalAlignment="Stretch"  />
                            </Grid>
                        </ControlTemplate>
                    </DataGrid.RowValidationErrorTemplate>
                </DataGrid>
            </Grid>
            
            
            
            <!--ADD EQUIPMENT-->
            <Grid Grid.Row="{StaticResource adding}"  Grid.Column="3" 
            Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>


                <!--ADD DTEQ-->
                <!--Tags-->
                <TextBlock Text="Tag" Margin="10 5 0 5"
                    Grid.Row="1" Grid.Column="{StaticResource Tag}" FontSize="10" />
                <TextBlock Text="Type" Margin="10 5 0 5"
                    Grid.Row="1" Grid.Column="{StaticResource Type}" FontSize="10" />

                <TextBlock Text="Description" Margin="10 5 0 5"
                    Grid.Row="1" Grid.Column="{StaticResource Description}" FontSize="10" />

                <TextBlock Text="Fed From" Margin="10 5 0 5"
                    Grid.Row="1" Grid.Column="{StaticResource FedFrom}" FontSize="10" />
                <TextBlock Text="Line Voltage" Margin="10 5 0 5"
                    Grid.Row="1" Grid.Column="{StaticResource Voltage}" FontSize="10" />
                <TextBlock Text="Size" Margin="10 5 0 5"
                    Grid.Row="1" Grid.Column="{StaticResource Size}" FontSize="10" />
                <TextBlock Text="Unit" Margin="10 5 0 5"
                    Grid.Row="1" Grid.Column="{StaticResource Unit}" FontSize="10" />


                <!--ADD DTEQ-->
                <!--Entry-->
                <TextBox x:Name ="txtDteqTag"  
                    Grid.Row="2" Grid.Column="{StaticResource Tag}"
                    Width="75" Height="23"
                    Text="{Binding DteqToAdd.Tag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    PreviewMouseDown="txtDteqTag_PreviewMouseDown" LostFocus="txtDteqTag_LostFocus"
                    Margin="5 0 5 0"/>

                <ComboBox Grid.Row="2" Grid.Column="{StaticResource Type}"
                    d:Text="MCC"
                    ItemsSource="{Binding Source={h:EnumBindingSource {x:Type edt:DteqTypes}}}"
                    SelectedValue="{Binding DteqToAdd.Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=False}"
                    Text="{Binding DteqToAdd.Type}"                       
                    IsEditable="True" IsTextSearchEnabled="True"
                    Margin="5 0 5 0"/>

                <ComboBox Grid.Row="2" Grid.Column="{StaticResource FedFrom}"
                    Width="75"
                    ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}},Path=DataContext.FedFromList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    SelectedValue="{Binding DteqToAdd.FedFrom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=False}"
                    Text="{Binding DteqToAdd.FedFrom}"
                    IsEditable="True" IsTextSearchEnabled="True"
                    Margin="5 0 5 0"/>

                <ComboBox Grid.Row="2" Grid.Column="{StaticResource Voltage}"
                    Width="60"
                    d:Text="13800"
                    ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}},Path=DataContext.VoltageTypes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    SelectedValue="{Binding DteqToAdd.LineVoltage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=False}"
                    Text="{Binding DteqToAdd.LineVoltage}"
                    IsEditable="True" IsTextSearchEnabled="True"
                    Margin="5 0 5 0"/>

                <TextBox Grid.Row="2" Grid.Column="{StaticResource Size}"
                    Width="50" Height="23"
                    d:Text="10000"
                    Text="{Binding DteqToAdd.Size, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Margin="5 0 5 0">

                </TextBox>

                <ComboBox Grid.Row="2" Grid.Column="{StaticResource Unit}"
                    Width="50"
                    ItemsSource="{Binding Source={h:EnumBindingSource {x:Type edt:Units}}}"
                    SelectedValue="{Binding DteqToAdd.Unit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=False}"
                    Text="{Binding DteqToAdd.Unit}"
                    IsEditable="True" IsTextSearchEnabled="True"
                    Margin="5 0 5 0">

                </ComboBox>

                <TextBox Grid.Row="2" Grid.Column="{StaticResource Description}"
                    MinWidth="100" Height="23"
                    Text="{Binding DteqToAdd.Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Margin="5 0 5 0">

                </TextBox>


                <!--LOAD-->
                <!--Tags-->
                <TextBlock Text="Tag" Margin="10 5 0 5"
                    Grid.Row="4" Grid.Column="{StaticResource Tag}" FontSize="10" />
                <TextBlock Text="Type" Margin="10 5 0 5"
                    Grid.Row="4" Grid.Column="{StaticResource Type}" FontSize="10" />

                <TextBlock Text="Description" Margin="10 5 0 5"
                    Grid.Row="4" Grid.Column="{StaticResource Description}" FontSize="10" />

                <TextBlock Text="Fed From" Margin="10 5 0 5"
                    Grid.Row="4" Grid.Column="{StaticResource FedFrom}" FontSize="10" />
                <TextBlock Text="Voltage" Margin="10 5 0 5"
                    Grid.Row="4" Grid.Column="{StaticResource Voltage}" FontSize="10" />
                <TextBlock Text="Size" Margin="10 5 0 5"
                    Grid.Row="4" Grid.Column="{StaticResource Size}" FontSize="10" />
                <TextBlock Text="Unit" Margin="10 5 0 5"
                    Grid.Row="4" Grid.Column="{StaticResource Unit}" FontSize="10" />
                <TextBlock Text="L.F." Margin="10 5 0 5"
                    Grid.Row="4" Grid.Column="{StaticResource LoadFactor}" FontSize="10" />

                <!--LOAD-->
                <!--Entry-->
                <TextBox x:Name ="txtLoadTag"  
                    Grid.Row="5" Grid.Column="{StaticResource Tag}"
                    Width="75" Height="23"
                    Text="{Binding LoadToAdd.Tag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    PreviewMouseDown="txtLoadTag_PreviewMouseDown" LostFocus="txtLoadTag_LostFocus"
                    Margin="5,0,5,0" VerticalAlignment="Bottom">
                </TextBox>

                <ComboBox Grid.Row="5" Grid.Column="{StaticResource Type}" 
                            d:Text="MOTOR"
                            MinWidth="100"
                            ItemsSource="{Binding Source={h:EnumBindingSource {x:Type edt:LoadTypes}}}"
                            SelectedValue="{Binding LoadToAdd.Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=False}"
                    Text="{Binding LoadToAdd.Type}"
                          
                            IsEditable="True" IsTextSearchEnabled="True"  
                            Margin="5 0 5 0"/>

                <!--Fed From-->
                <ComboBox Grid.Row="5" Grid.Column="{StaticResource FedFrom}" 
                    Width="75"
                    ItemsSource="{Binding Source={StaticResource dteqList}}"
                    SelectedValue="{Binding LoadToAdd.FedFrom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=False}"
                          SelectedValuePath="Tag"
                          DisplayMemberPath="Tag"
                    Text="{Binding LoadToAdd.FedFrom}"
                    IsEditable="True" IsTextSearchEnabled="True"  
                    Margin="5 0 5 0"/>

                <ComboBox Grid.Row="5" Grid.Column="{StaticResource Voltage}"
                    MinWidth="60"
                    d:Text="13800"
                    ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}},Path=DataContext.VoltageTypes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    SelectedValue="{Binding LoadToAdd.Voltage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=False}"
                    Text="{Binding LoadToAdd.Voltage}"
                    IsEditable="True" IsTextSearchEnabled="True"
                    Margin="5 0 5 0"/>


                <TextBox Grid.Row="5" Grid.Column="{StaticResource Size}"
                    Width="50" Height="23"
                    Text="{Binding LoadToAdd.Size, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Margin="5 0 5 0">

                </TextBox>

                <ComboBox Grid.Row="5" Grid.Column="{StaticResource Unit}"
                    Width="50"
                    ItemsSource="{Binding Source={h:EnumBindingSource {x:Type edt:Units}}}"
                    SelectedValue="{Binding LoadToAdd.Unit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=False}"
                    Text="{Binding LoadToAdd.Unit}"
                    IsEditable="True" IsTextSearchEnabled="True"
                    Margin="5 0 5 0"/>

                <TextBox Grid.Row="5" Grid.Column="{StaticResource Description}"
                    MinWidth="100" Height="23"
                    Text="{Binding LoadToAdd.Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Margin="5 0 5 0">
                </TextBox>

                <TextBox Grid.Row="5" Grid.Column="{StaticResource LoadFactor}"
                    MinWidth="50" Height="23"
                    Text="{Binding LoadToAdd.LoadFactor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Margin="5 0 5 0">
                </TextBox>
            </Grid>


            <!--LOADS-->
            <!--Grid-->
            <!--<Grid Grid.Row="{StaticResource load}" Grid.Column="3">-->
                <Grid Grid.Row="{StaticResource load}" Grid.Column="3">
                    <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding LoadGridRight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <!--***********************************-->
                <!--******   BOTTOM STATUS BAR   ******-->
                <!--***********************************-->
                
                <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="0">

                    <TextBlock Text="Dteq Count:  "/>
                    <TextBlock Text="{Binding ListManager.DteqList.Count}" Margin="0" FontWeight="Bold"/>

                    <TextBlock Text="    Dteq Id:  "/>
                    <TextBlock Text="{Binding SelectedDteq.Id}" Margin="0" FontWeight="Bold"/>
                    <TextBlock Text="    Dteq FedFromId:  "/>
                    <TextBlock Text="{Binding SelectedDteq.FedFromId}" Margin="0" FontWeight="Bold"/>
                    <TextBlock Text="    Dteq FedFromType:  "/>
                    <TextBlock Text="{Binding SelectedDteq.FedFromType}" Margin="0" FontWeight="Bold"/>
                    <TextBlock Text="    Dteq FedFromTag:  "/>
                    <TextBlock Text="{Binding SelectedDteq.FedFrom.Tag}" Margin="0" FontWeight="Bold"/>

                    <TextBlock Text="            Load Count:  "/>
                    <TextBlock Text="{Binding ListManager.LoadList.Count}" Margin="0" FontWeight="Bold"/>
                    <TextBlock Text="    Load FedFromId:  "/>
                    <TextBlock Text="{Binding SelectedLoad.FedFromId}" Margin="0" FontWeight="Bold"/>

                    <TextBlock Text="    Load FedFromType:  "/>
                    <TextBlock Text="{Binding SelectedLoad.FedFromType}" Margin="0" FontWeight="Bold"/>
                    
                    <TextBlock Text="    Load Cable Id:  "/>
                    <TextBlock Text="{Binding SelectedLoad.Cable.Id}" Margin="0" FontWeight="Bold"/>

                    <TextBlock Text="    Load Cable Tag:  "/>
                    <TextBlock Text="{Binding SelectedLoad.Cable.Tag}" Margin="0" FontWeight="Bold"/>
                    
                    <TextBlock Text="    Load Cable Type:  "/>
                    <TextBlock Text="{Binding SelectedLoad.Cable.Type}" Margin="0" FontWeight="Bold"/>

                    <TextBlock Text="            Cable Count:  "/>
                    <TextBlock Text="{Binding ListManager.CableList.Count}" Margin="0" FontWeight="Bold"/>

                    <TextBlock Text="            DTEQ Grid Height  "/>
                    <TextBlock Text="{Binding DteqGridHeight}" Margin="0" FontWeight="Bold"/>
                    
                    <TextBlock Text="            LOAD Grid Height  "/>
                    <TextBlock Text="{Binding LoadGridHeight}" Margin="0" FontWeight="Bold"/>

                </StackPanel>
                <!--***********************************-->

                <!--LOAD-->
                <!--DETAILS VIEW-->
                <TextBlock Grid.Row="0" Grid.Column="2" Text="Load Details" Margin="10"/>
                <Border Grid.Row="0" Grid.Column="2" BorderThickness="1" BorderBrush="Black" Background="LightCyan"
                        Margin="10 30 10 10">
                    
                    <ContentControl x:Name="LoadDetailsContent" Grid.Row="{StaticResource load}" Grid.Column="4">
                        <!--Content="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}},Path=DataContext.SelectedDteq, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">-->
                        <ContentControl.Resources>
                            <DataTemplate DataType="{x:Type edtDteqModels:DteqModel}">
                                <views:EqView/>
                            </DataTemplate>
                        </ContentControl.Resources>
                    </ContentControl>
                </Border>

                <GridSplitter  Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Stretch"   
                               Width="5" Background="AliceBlue" BorderBrush="DarkGray" BorderThickness="0"
                               Margin="0 0 0 10"/>
                <!--LOAD-->
                <!--DATA GRID-->
                <DataGrid x:Name="dgdAssignedLoads" 
                Grid.Row="0"  Grid.Column="0"
                HorizontalAlignment="Left" VerticalAlignment="Stretch" 
                          d:Height="250"
                    Height="{Binding LoadGridHeight, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                Margin="10,10,10,10"
                ItemsSource="{Binding Path=AssignedLoads, Mode=OneWay, UpdateSourceTrigger=PropertyChanged,IsAsync=True}"
                SelectedItem="{Binding SelectedLoad, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                CanUserAddRows="False"
                CanUserDeleteRows="False"
                AutoGenerateColumns="False"
                              
                EnableRowVirtualization="False"
                EnableColumnVirtualization="False"
                ScrollViewer.CanContentScroll="False"
                VirtualizingPanel.IsVirtualizing="False"
                VirtualizingStackPanel.VirtualizationMode="Recycling"

                RowDetailsVisibilityMode="{Binding ToggleRowViewProp}" SelectionChanged="dgdAssignedLoads_SelectionChanged">

                    <DataGrid.Columns>
                        <!--Textblock cell padding style in this.resources Move to ResDict-->

                        <!--Tag-->
                        <DataGridTextColumn Header="Tag"
                                        Width="75"
                                        Binding="{Binding Path=Tag, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        ElementStyle="{StaticResource ColumnElementStyle}" 
                                        />

                        <!--<DataGridTemplateColumn Header="Tag"
                                    MinWidth="40">
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBox Text="{Binding Tag, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        BorderThickness="0"
                                        HorizontalAlignment="Center"
                                        Margin="0"/>
                        </StackPanel>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>-->

                        <!--Description-->
                        <DataGridTextColumn Header="Description" 
                                MinWidth="150" 
                                Binding="{Binding Path=Description, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                    <Setter Property="Margin" Value="5 0"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <!--Type-->
                        <DataGridTemplateColumn Header="Load Type" x:Name="loadType"
                                            MinWidth="75"
                                            Width="150">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ComboBox ItemsSource="{Binding Source={h:EnumBindingSource {x:Type edt:LoadTypes}}}"
                                            SelectedValue="{Binding Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            Text="{Binding Type, ValidatesOnDataErrors=True}"
                                            HorizontalContentAlignment="Center"
                                            IsEditable="True" IsTextSearchEnabled="True"
                                            IsSynchronizedWithCurrentItem="False"
                                            BorderThickness="0"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>



                        <!--Fed From-->
                        <DataGridComboBoxColumn Header="Fed &#x0a;From" ItemsSource="{Binding Source={StaticResource dteqList}}"
                                            DisplayMemberPath="Tag" 
                                            SelectedValuePath="Tag" 
                                            SelectedValueBinding="{Binding Path=FedFrom}"
                                            MinWidth="75"
                                            Width="75"/>
                        <!--Voltage-->
                        <DataGridTemplateColumn Header="Voltage">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Voltage, ValidatesOnDataErrors=True}"></TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>

                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <ComboBox ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}},Path=DataContext.VoltageTypes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            SelectedValue="{Binding Voltage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            Text="{Binding Voltage, ValidatesOnDataErrors=True}"
                                            HorizontalContentAlignment="Center"
                                            IsEditable="True" IsTextSearchEnabled="True"
                                            IsSynchronizedWithCurrentItem="False"
                                            BorderThickness="0"
                                            Width="50"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <!--Size-->
                        <DataGridTextColumn Header="Size" x:Name="loadSize"
                                MinWidth="50"
                                Width="50"
                                Binding="{Binding Path=Size, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                >
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                    <Setter Property="Margin" Value="5 0"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <!--Unit-->
                        <DataGridTemplateColumn Header="Unit"
                                    MinWidth="50"
                                    Width="50">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ComboBox ItemsSource="{Binding Source={h:EnumBindingSource {x:Type edt:Units}}}"
                                SelectedValue="{Binding Unit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                Text="{Binding Unit, ValidatesOnDataErrors=True}"
                                IsEditable="True" IsTextSearchEnabled="True"
                                IsSynchronizedWithCurrentItem="False"
                                BorderThickness="0"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--LOADING-->
                        <DataGridTextColumn Header="FLA"
                                MinWidth="40"
                                Width="40"
                                Binding="{Binding Path=Fla, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" IsReadOnly="True"/>

                        <!--Efficiency-->
                        <DataGridTemplateColumn Header="Eff"
                                    MinWidth="40"
                                    Width="40">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <TextBlock Text="{Binding Path=Efficiency, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        HorizontalAlignment="Center"
                                        Margin="0"/>
                                        <TextBlock Text=" %"
                                        HorizontalAlignment="Center"/>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding Path=Efficiency, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                    BorderThickness="0"
                                    Margin="0"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTextColumn Header=" PF " 
                                MinWidth="40"
                                Width="40"
                                Binding="{Binding Path=PowerFactor, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

                        <!--Running Amps-->
                        <DataGridTextColumn Header="Running &#x0a;Amps"
                                Width="40"
                                Visibility="Hidden"
                                Binding="{Binding Path=RunningAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

                        <DataGridTextColumn Header="Conn &#x0a; kVA"
                                Width="40"
                                Visibility="{Binding ToggleLoadingViewLoadProp}"
                                Binding="{Binding Path=ConnectedKva, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

                        <DataGridTextColumn Header="Dem &#x0a; kVA"  
                                Width="40"
                                Visibility="{Binding ToggleLoadingViewLoadProp}"
                                Binding="{Binding Path=DemandKva, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

                        <DataGridTextColumn Header="Dem &#x0a; kW" 
                                Width="40"
                                Visibility="{Binding ToggleLoadingViewLoadProp}"
                                Binding="{Binding Path=DemandKw, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

                        <DataGridTextColumn Header="Dem &#x0a;kVAR" 
                                Width="40"
                                Visibility="{Binding ToggleLoadingViewLoadProp}"
                                Binding="{Binding Path=DemandKvar, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

                        <!--OCPD-->
                        <DataGridTextColumn Header="OCPD &#x0a; Type" 
                                Width="45"
                                Visibility="{Binding ToggleOcpdViewLoadProp}"
                                Binding="{Binding Path=PdType, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource OcpdColumnHeader}" />

                        <DataGridTextColumn Header="OCPD &#x0a;  Trip" 
                                Width="45"
                                Visibility="{Binding ToggleOcpdViewLoadProp}"
                                Binding="{Binding Path=PdSizeTrip, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource OcpdColumnHeader}" />

                        <DataGridTextColumn Header="OCPD &#x0a;Frame" 
                                Width="45"
                                Visibility="{Binding ToggleOcpdViewLoadProp}"
                                Binding="{Binding Path=PdSizeFrame, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource OcpdColumnHeader}" />


                        <!--CABLE-->
                        <DataGridTextColumn Header="Cable &#x0a;  Qty" x:Name="loadCableQty" 
                                Width="50"
                                Visibility="{Binding ToggleCableViewLoadProp}"
                                Binding="{Binding Path=Cable.QtyParallel, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource CableHeaderColumn}" />

                        <DataGridTextColumn Header="Cable &#x0a; Size" x:Name="loadCableSize" 
                                Width="50"
                                Visibility="{Binding ToggleCableViewLoadProp}"
                                Binding="{Binding Path=Cable.Size, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource CableHeaderColumn}" />

                        <DataGridTextColumn Header=" Base &#x0a;Amps" x:Name="loadCableBaseAmps" 
                                Width="50"
                                Visibility="{Binding ToggleCableViewLoadProp}"
                                Binding="{Binding Path=Cable.BaseAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource CableHeaderColumn}" />

                        <!--<DataGridTextColumn Header="   Req'd&#x0a;Sz. Amps" x:Name="loadCableRequiredSizingAmps" 
                                Width="65"
                                Visibility="{Binding ToggleCableViewLoadProp}"
                                Binding="{Binding Path=Cable.RequiredSizingAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource CableHeaderColumn}" />-->

                        <DataGridTextColumn Header="  Cable&#x0a;Derating" x:Name="loadCableDerating" 
                                Width="60"
                                Visibility="{Binding ToggleCableViewLoadProp}"
                                Binding="{Binding Path=Cable.Derating, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource CableHeaderColumn}" />

                        <DataGridTextColumn Header="Derated &#x0a;  Amps" x:Name="loadCableDeratedAmps" 
                                Width="60"
                                Visibility="{Binding ToggleCableViewLoadProp}"
                                Binding="{Binding Path=Cable.DeratedAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource CableHeaderColumn}" />

                        <DataGridTextColumn Header="Req'd&#x0a;Amps" x:Name="loadCableRequiredAmps" 
                                Width="50"
                                Visibility="{Binding ToggleCableViewLoadProp}"
                                Binding="{Binding Path=Cable.RequiredAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource CableHeaderColumn}" />

                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </Grid>



    </Grid>


</UserControl>
