<UserControl x:Class="WpfUI.Views.EquipmentView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfUI.Views"
        xmlns:root="clr-namespace:WpfUI"
        xmlns:rules="clr-namespace:WpfUI.ValidationRules"
        xmlns:converters="clr-namespace:WpfUI.Converters"
              xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:h="clr-namespace:WpfUI.Helpers"
        xmlns:commands="clr-namespace:WpfUI.Commands"
        xmlns:viewComponents="clr-namespace:WpfUI.ViewComponents"
        xmlns:edt="clr-namespace:EDTLibrary;assembly=EDTLibrary"
        mc:Ignorable="d"
        d:Width="1600" d:Height="900"
             Background="#FFDAEEF3">
    <UserControl.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Styles/EdtTealStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <converters:PercentLoadedToColorConverter x:Key="PercentLoadedToColor"/>
            
            <CollectionViewSource x:Key="dteqList" Source="{Binding DteqList}"/>


            <Style x:Key="ColumnElementStyle" TargetType="TextBlock">
                <Setter Property="Margin" Value="10,0,10,0" />
            </Style>



            <sys:Int32 x:Key="dteq">2</sys:Int32>
            <sys:Int32 x:Key="adding">3</sys:Int32>
            <sys:Int32 x:Key="load">4</sys:Int32>
            <sys:Int32 x:Key="bottom">5</sys:Int32>

            <sys:Int32 x:Key="Tag">1</sys:Int32>
            <sys:Int32 x:Key="Type">2</sys:Int32>
            <sys:Int32 x:Key="FedFrom">3</sys:Int32>
            <sys:Int32 x:Key="Voltage">4</sys:Int32>
            <sys:Int32 x:Key="Size">5</sys:Int32>
            <sys:Int32 x:Key="Unit">6</sys:Int32>
            <sys:Int32 x:Key="Description">7</sys:Int32>
            <sys:Int32 x:Key="LoadFactor">8</sys:Int32>

        </ResourceDictionary>
    </UserControl.Resources>


    <!--TOP-->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="10"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Label Content="DISTRIBUTION EQUIPMENT AND LOADING"
               Style="{StaticResource TitleLabelStyle}"/>
        
        <!--<viewComponents:NavigationBar Grid.Row="0" DataContext="{Binding NavigationBarViewModel}"/>-->

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="30"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="20"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>


            <!--Dteq View Buttons-->
            <Button Grid.Row="1" Grid.Column="3"
                    Content="Toggle Row View"
                    Command="{Binding Path=ToggleRowViewDteqCommand}"/>

            <!--MENU BUTTONS-->
            <!--DTEQ Buttons-->
            <StackPanel Orientation="Vertical"
                        Grid.Column="1" Grid.Row="{StaticResource dteq}"
                        Margin="0,50,0,0">

                <Button Name ="btnGetDteq" Content="Get Dist. Eq. List" 
                        Command="{Binding GetDteqCommand}"/>

                <Button Name ="btnSaveDteq" Content="Save All"
                        Command="{Binding SaveDteqListCommand}"/>

                <Button Name ="btnDeleteDteq" Content="Delete Selected"
                        Command="{Binding DeleteDteqCommand}"/>

                <Button Name ="btnSizeCablesDteq" Content="Size Dteq Cables"
                        Command="{Binding SizeDteqCablesCommand}"/>

                <Button Name ="btnCalcCableAmpsDteq" Content="Cable Amps"
                        Command="{Binding CalcDteqCableAmpsCommand}"/>


            </StackPanel>

            <!--ADD Buttons-->
            <StackPanel Orientation="Vertical"
                        Grid.Column="1" Grid.Row="{StaticResource adding}"
                        Margin="0,10,0,10">

                <Button Name ="btnAddDteq" Content="Add Dist. Eq." 
                        Command="{Binding Path=AddDteqCommand}"
                        Margin="10,15,10,30"/>

                <Button Name ="btnAddLoad" Content="Add Load" 
                        Command="{Binding Path=AddLoadCommand}"
                        Margin="10,15,10,10"/>

            </StackPanel>

            <!--LOAD Buttons-->
            <StackPanel Orientation="Vertical"
                        Grid.Column="1" Grid.Row="{StaticResource load}"
                        Margin="0,50,0,50">

                <Button x:Name ="btnLoadList" Content="Load List" Height="27" Width="125"
                    Command="{Binding GetLoadListCommand}"/>

                <Button x:Name ="btnSaveLoadList" Content="Save Load List" Height="27" Width="125"
                    Command="{Binding SaveLoadListCommand}"/>

                <Button x:Name ="btnDeleteLoadList" Content="Delete Load" Height="27" Width="125"
                    Command="{Binding DeleteLoadCommand}"/>

                <Button Name ="btnCalculate" Content="Calculate All" 
                        Command="{Binding CalculateAllCommand}"
                        FontWeight="Bold"
                        Margin="0 100 0 0"/>
            </StackPanel>

            <!--DTEQ Datagrid-->
            
            <DataGrid x:Name="dgdDteq" 
                          Grid.Row="{StaticResource dteq}" Grid.Column="3"
                          HorizontalAlignment="Left"
                          Height="auto" MinHeight="185" MaxHeight="250"
                          Margin="10,10,10,10"
                          ItemsSource="{Binding DteqList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{Binding SelectedDteq, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"    
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          AutoGenerateColumns="False"
                          RowDetailsVisibilityMode="{Binding ToggleRowViewDteqProp}">
                    
                <DataGrid.Resources>
                    <Style x:Key="errorStyle" TargetType="{x:Type TextBlock}">
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="ToolTipService.InitialShowDelay" Value="100"/>
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="Background" Value="Red"/>
                                <Setter Property="Foreground" Value="Red"/>
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                       
                </DataGrid.Resources>

                <DataGrid.Columns>
                    <!--Basic-->
                    <!--Textblock cell padding style in this.resources Move to ResDict-->

                    <!--Tag-->

                    <DataGridTextColumn Header="Tag" x:Name="dteqTag" 
                                        Binding="{Binding Path=Tag, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                        ElementStyle="{StaticResource ColumnElementStyle}" />

                    <!--<DataGridTemplateColumn Header="Tag"
                                            MinWidth="75">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox  Text="{Binding Path=Tag, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                            Background="Transparent"
                                            BorderThickness="0"
                                            Margin="0"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <TextBox  Text="{Binding Path=Tag, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                            Background="White"
                                            FontWeight="Bold"
                                            BorderThickness="0"
                                            Margin="0"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>-->

                    <!--Description-->
                    <DataGridTextColumn Header="Description" x:Name="dteqDescription"
                                        MinWidth="150" 
                                        Binding="{Binding Path=Description, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="Margin" Value="5 0"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                        
                    <!--Type-->
                    <DataGridTemplateColumn Header="EQ Type" x:Name="dteqType"
                                            MinWidth="75">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ComboBox ItemsSource="{Binding Source={h:EnumBindingSource {x:Type edt:DteqTypes}}}"
                                            SelectedValue="{Binding Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            Text="{Binding Type, ValidatesOnDataErrors=True}"
                                            HorizontalContentAlignment="Center"
                                            IsEditable="True" IsTextSearchEnabled="True"
                                            IsSynchronizedWithCurrentItem="False"
                                            BorderThickness="0"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!--Fed From-->
                    <DataGridTemplateColumn Header=" Fed&#x0a;From" x:Name="dteqFedFrom" 
                                            MinWidth="75">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding FedFrom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

                                <!-- CAUSES Disapearing when inside "Text" : UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True-->
                                <!--<ComboBox ItemsSource="{Binding Source={StaticResource dteqList}}"
                                                SelectedValue="{Binding FedFrom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                Text="{Binding FedFrom}"  
                                                DisplayMemberPath="Tag"
                                                SelectedValuePath="{Binding Tag}"
                                                HorizontalContentAlignment="Center"
                                                IsEditable="True" IsTextSearchEnabled="True"
                                                IsSynchronizedWithCurrentItem="False"
                                                BorderThickness="0"/>-->
                                <!--<ComboBox ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}},Path=DataContext.FedFromList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                SelectedItem="{Binding FedFrom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                Text="{Binding FedFrom}"  
                                                HorizontalContentAlignment="Center"
                                                IsEditable="True" IsTextSearchEnabled="True" IsReadOnly="False" TextSearch.Text=""
                                                IsSynchronizedWithCurrentItem="False"
                                                BorderThickness="0" />-->
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <ComboBox ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}},Path=DataContext.FedFromList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            SelectedItem="{Binding FedFrom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                            Text="{Binding FedFrom}"  
                                            HorizontalContentAlignment="Center"
                                            IsEditable="True" IsTextSearchEnabled="True" IsReadOnly="False" TextSearch.Text=""
                                            IsSynchronizedWithCurrentItem="False"
                                            BorderThickness="0" 
                                            IsDropDownOpen="False"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>

                    <!--Voltage-->
                    <!--<DataGridTemplateColumn Header="dteqVoltage">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ComboBox ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}},Path=DataContext.VoltageTypes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            SelectedValue="{Binding Voltage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            Text="{Binding Voltage, ValidatesOnDataErrors=True}"
                                            HorizontalContentAlignment="Center"
                                            IsEditable="True" IsTextSearchEnabled="True"
                                            IsSynchronizedWithCurrentItem="False"
                                            BorderThickness="0"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>-->

                    <!--Line Voltage-->
                    <DataGridTemplateColumn  Header="  Line &#x0a;Voltage" x:Name="dteqLineVoltage">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ComboBox ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}},Path=DataContext.VoltageTypes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            SelectedValue="{Binding LineVoltage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            Text="{Binding LineVoltage, ValidatesOnDataErrors=True}"
                                            HorizontalContentAlignment="Center"
                                            IsEditable="True" IsTextSearchEnabled="True"
                                            IsSynchronizedWithCurrentItem="False"
                                            BorderThickness="0"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!--Load Voltage-->
                    <DataGridTemplateColumn Header="  Load &#x0a;Voltage" x:Name="dteqLoadVoltage">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ComboBox ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}},Path=DataContext.VoltageTypes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            SelectedValue="{Binding LoadVoltage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            Text="{Binding LoadVoltage, ValidatesOnDataErrors=True}"
                                            HorizontalContentAlignment="Center"
                                            IsEditable="True" IsTextSearchEnabled="True"
                                            IsSynchronizedWithCurrentItem="False"
                                            BorderThickness="0"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!--Size-->
                    <DataGridTextColumn Header="Size" x:Name="dteqSize"
                                        MinWidth="50"
                                        Binding="{Binding Path=Size, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Right" />
                                <Setter Property="Margin" Value="5 0"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <!--Unit-->
                    <DataGridTemplateColumn Header="Unit"
                                            MinWidth="50">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ComboBox ItemsSource="{Binding Source={h:EnumBindingSource {x:Type edt:Units}}}"
                                            SelectedValue="{Binding Unit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            Text="{Binding Unit, ValidatesOnDataErrors=True}"
                                            IsEditable="True" IsTextSearchEnabled="True"
                                            IsSynchronizedWithCurrentItem="False"
                                            BorderThickness="0"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                       


                    <!--Loading-->
                    <!--FLA-->
                    <DataGridTextColumn Header=" Max&#x0a;Amps" x:Name="dteqFla" 
                                        MinWidth="40"
                                        Binding="{Binding Path=Fla, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        IsReadOnly="True"/>
                    <!--Running Amps-->
                    <DataGridTextColumn Header="Running &#x0a;   Amps" x:Name="dteqRunningAmps"
                                        Binding="{Binding Path=RunningAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        IsReadOnly="True"/>

                    <!--Percent Loaded-->
                    <DataGridTemplateColumn Header="Percent &#x0a;Loaded"
                                            x:Name="dteqPercentLoaded"
                                            MinWidth="35"
                                            MaxWidth="55"
                                            IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <TextBlock Text="{Binding PercentLoaded, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                Background="{Binding PercentLoaded, Converter={StaticResource PercentLoadedToColor}}"
                                                Height="23" Width="40"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Stretch"
                                                TextAlignment="Center"
                                                Margin="0"/>
                                    <TextBlock Text="%  "
                                                Background="{Binding PercentLoaded, Converter={StaticResource PercentLoadedToColor}}"
                                                HorizontalAlignment="Left"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <!--<DataGridTemplateColumn.CellStyle>
                                <DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="Background" Value="{Binding PercentLoaded, Converter={StaticResource PercentLoadedToColor}}"/>
                                        <Setter Property="Foreground" Value="Black"/>
                                    </Style>
                                </DataGridTemplateColumn.CellStyle>
                            </DataGridTemplateColumn.CellStyle>-->
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding Path=PercentLoaded, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                            BorderThickness="0"
                                            Margin="0"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>

                    <!--Power Factor-->
                    <DataGridTextColumn Header=" PF " x:Name="dteqPowerFactor" 
                                        Binding="{Binding Path=PowerFactor, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        IsReadOnly="True"/>
                        
                    <DataGridTextColumn Header="Conn &#x0a; kVA" x:Name="dteqConnectedKva"
                                        Binding="{Binding Path=ConnectedKva, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        IsReadOnly="True"/>

                    <DataGridTextColumn Header="Dem &#x0a; kVA" x:Name="dteqDemandKva"
                                        Binding="{Binding Path=DemandKva, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        IsReadOnly="True"/>

                    <DataGridTextColumn Header="Dem &#x0a; kW" x:Name="dteqDemandKw" 
                                        Binding="{Binding Path=DemandKw, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        IsReadOnly="True"/>

                    <DataGridTextColumn Header="Dem &#x0a;kVAR" x:Name="dteqDemandKvar" 
                                        Binding="{Binding Path=DemandKvar, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        IsReadOnly="True"/>

                    <!--OCPD-->
                    <DataGridTextColumn Header="OCPD &#x0a;  Type" x:Name="dteqPdType" 
                                        Binding="{Binding Path=PdType, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        HeaderStyle="{StaticResource OcpdColumnHeader}" />
                        
                    <DataGridTextColumn Header="OCPD &#x0a;  Trip" x:Name="dteqPdSizeTrip" 
                                        Binding="{Binding Path=PdSizeTrip, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        HeaderStyle="{StaticResource OcpdColumnHeader}" />
                        
                    <DataGridTextColumn Header="OCPD &#x0a;Frame" x:Name="dteqPdSizeFrame" 
                                        Binding="{Binding Path=PdSizeFrame, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        HeaderStyle="{StaticResource OcpdColumnHeader}" />
                        
                        
                    <!--CABLE-->
                    <DataGridTextColumn Header="Cable &#x0a;  Qty" x:Name="dteqCableQty"
                                        Binding="{Binding Path=CableQty, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        HeaderStyle="{StaticResource CableHeaderColumn}" />

                    <DataGridTextColumn Header="Cable &#x0a; Size" x:Name="dteqCableSize" 
                                        Binding="{Binding Path=CableSize, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        HeaderStyle="{StaticResource CableHeaderColumn}" />

                    <DataGridTextColumn Header=" Base &#x0a;Amps" x:Name="dteqCableBaseAmps" 
                                        Binding="{Binding Path=CableBaseAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        HeaderStyle="{StaticResource CableHeaderColumn}" />
                        
                    <DataGridTextColumn Header="   Req'd&#x0a;Sz. Amps" x:Name="dteqCableRequiredSizingAmps" 
                                        Binding="{Binding Path=CableRequiredSizingAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        HeaderStyle="{StaticResource CableHeaderColumn}" />
                        

                    <DataGridTextColumn Header="  Cable&#x0a;Derating" x:Name="dteqCableDerating" 
                                        Binding="{Binding Path=CableDerating, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        HeaderStyle="{StaticResource CableHeaderColumn}" />

                    <DataGridTextColumn Header="Derated &#x0a;  Amps" x:Name="dteqCableDeratedAmps" 
                                        Binding="{Binding Path=CableDeratedAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        HeaderStyle="{StaticResource CableHeaderColumn}" />

                    <DataGridTextColumn Header="Req'd&#x0a;Amps" x:Name="dteqCableRequiredAmps" 
                                        Binding="{Binding Path=CableRequiredAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        HeaderStyle="{StaticResource CableHeaderColumn}" />
                        
                        






                </DataGrid.Columns>
                <DataGrid.RowDetailsTemplate>
                    <DataTemplate>
                        <Border BorderThickness="0" Background="Beige" Padding="10">
                            <Grid Margin="5,0,0,0" MinWidth="650" HorizontalAlignment="Left">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="125"></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                    <ColumnDefinition Width="125"></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                </Grid.RowDefinitions>

                                <TextBlock Text="City" Margin="10,0,0,0" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                <TextBox Margin="3" Grid.Row="0" Grid.Column="1" Text="{Binding Path=City}" MaxHeight="35" />
                                <TextBlock Text="Country" Margin="10,0,0,0" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                <TextBox Margin="3" Grid.Row="1" Grid.Column="1" Text="{Binding Path=Country}" MaxHeight="35"/>
                                <TextBlock Text="Zip" Margin="10,0,0,0" Grid.Row="2" Grid.Column="0" VerticalAlignment="Center"  HorizontalAlignment="Left"/>
                                <TextBox Margin="3" Grid.Row="2" Grid.Column="1" Text="{Binding Path=Zip}" MaxHeight="35"/>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </DataGrid.RowDetailsTemplate>

                <DataGrid.RowValidationRules>
                    <rules:InvalidFedFromRule ValidatesOnTargetUpdated="True" ValidationStep="CommittedValue"/>
                </DataGrid.RowValidationRules>

                <DataGrid.RowValidationErrorTemplate>
                    <ControlTemplate>
                        <Grid Margin="5,2,0,0"
                                ToolTip="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Path=(Validation.Errors)[0].ErrorContent}"
                                ToolTipService.InitialShowDelay="50">

                            <!--<Ellipse StrokeThickness="0" Fill="Red" 
                                        Width="{TemplateBinding FontSize}" 
                                        Height="{TemplateBinding FontSize}" />-->
                            <TextBlock Text="X" FontSize="15" 
                                        FontWeight="UltraBold" Foreground="Red" 
                                        HorizontalAlignment="Stretch"  />                
                        </Grid>
                    </ControlTemplate>
                </DataGrid.RowValidationErrorTemplate>
            </DataGrid>
          

            <!--ADD Grid-->
            <Grid Grid.Row="{StaticResource adding}"  Grid.Column="3" 
                  Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>



                <!--Tags-->
                <TextBlock Text="Tag" Margin="10 5 0 5"
                           Grid.Row="1" Grid.Column="{StaticResource Tag}" FontSize="10" />
                <TextBlock Text="Type" Margin="10 5 0 5"
                           Grid.Row="1" Grid.Column="{StaticResource Type}" FontSize="10" />

                <TextBlock Text="Description" Margin="10 5 0 5"
                           Grid.Row="1" Grid.Column="{StaticResource Description}" FontSize="10" />

                <TextBlock Text="Fed From" Margin="10 5 0 5"
                           Grid.Row="1" Grid.Column="{StaticResource FedFrom}" FontSize="10" />
                <TextBlock Text="Voltage" Margin="10 5 0 5"
                           Grid.Row="1" Grid.Column="{StaticResource Voltage}" FontSize="10" />
                <TextBlock Text="Size" Margin="10 5 0 5"
                           Grid.Row="1" Grid.Column="{StaticResource Size}" FontSize="10" />
                <TextBlock Text="Unit" Margin="10 5 0 5"
                           Grid.Row="1" Grid.Column="{StaticResource Unit}" FontSize="10" />


                <!--DTEQ-->
                <TextBox x:Name ="txtDteqTag"  
                         Grid.Row="2" Grid.Column="{StaticResource Tag}"
                         Width="75" Height="23"
                         Text="{Binding DteqToAddTag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         PreviewMouseDown="txtDteqTag_PreviewMouseDown" LostFocus="txtDteqTag_LostFocus"
                         Margin="5 0 5 0"/>

                <ComboBox Grid.Row="2" Grid.Column="{StaticResource Type}"
                          d:Text="MCC"
                          ItemsSource="{Binding Source={h:EnumBindingSource {x:Type edt:DteqTypes}}}"
                          SelectedValue="{Binding DteqToAddType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=False}"
                          IsEditable="True" IsTextSearchEnabled="True"
                          Margin="5 0 5 0"/>

                <ComboBox Grid.Row="2" Grid.Column="{StaticResource FedFrom}"
                          Width="75"
                          ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}},Path=DataContext.FedFromList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedValue="{Binding DteqToAddFedFrom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=False}"
                          IsEditable="True" IsTextSearchEnabled="True"
                          Margin="5 0 5 0"/>

                <ComboBox Grid.Row="2" Grid.Column="{StaticResource Voltage}"
                          Width="60"
                          d:Text="13800"
                          ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}},Path=DataContext.VoltageTypes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedValue="{Binding DteqToAddVoltage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=False}"
                          Text="{Binding DteqToAddVoltage}"
                          IsEditable="True" IsTextSearchEnabled="True"
                          Margin="5 0 5 0"/>

                <TextBox Grid.Row="2" Grid.Column="{StaticResource Size}"
                         Width="50" Height="23"
                         d:Text="10000"
                         Text="{Binding DteqToAddSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Margin="5 0 5 0">

                </TextBox>

                <ComboBox Grid.Row="2" Grid.Column="{StaticResource Unit}"
                          Width="50"
                          ItemsSource="{Binding Source={h:EnumBindingSource {x:Type edt:Units}}}"
                          SelectedValue="{Binding DteqToAddUnit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=False}"
                          Text="{Binding DteqToAddUnit}"
                          IsEditable="True" IsTextSearchEnabled="True"
                          Margin="5 0 5 0">

                </ComboBox>

                <TextBox Grid.Row="2" Grid.Column="{StaticResource Description}"
                         MinWidth="100" Height="23"
                         Text="{Binding DteqToAddDescription, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Margin="5 0 5 0">

                </TextBox>


                <!--Tags-->
                <TextBlock Text="Tag" Margin="10 5 0 5"
                           Grid.Row="4" Grid.Column="{StaticResource Tag}" FontSize="10" />
                <TextBlock Text="Type" Margin="10 5 0 5"
                           Grid.Row="4" Grid.Column="{StaticResource Type}" FontSize="10" />

                <TextBlock Text="Description" Margin="10 5 0 5"
                           Grid.Row="4" Grid.Column="{StaticResource Description}" FontSize="10" />

                <TextBlock Text="Fed From" Margin="10 5 0 5"
                           Grid.Row="4" Grid.Column="{StaticResource FedFrom}" FontSize="10" />
                <TextBlock Text="Voltage" Margin="10 5 0 5"
                           Grid.Row="4" Grid.Column="{StaticResource Voltage}" FontSize="10" />
                <TextBlock Text="Size" Margin="10 5 0 5"
                           Grid.Row="4" Grid.Column="{StaticResource Size}" FontSize="10" />
                <TextBlock Text="Unit" Margin="10 5 0 5"
                           Grid.Row="4" Grid.Column="{StaticResource Unit}" FontSize="10" />
                <TextBlock Text="L.F." Margin="10 5 0 5"
                           Grid.Row="4" Grid.Column="{StaticResource LoadFactor}" FontSize="10" />

                <!--L O A D-->
                <TextBox x:Name ="txtLoadTag"  
                         Grid.Row="5" Grid.Column="{StaticResource Tag}"
                         Width="75" Height="23"
                         Text="{Binding LoadToAddTag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         PreviewMouseDown="txtLoadTag_PreviewMouseDown" LostFocus="txtLoadTag_LostFocus"
                         Margin="5 0 5 0">
                </TextBox>

                <ComboBox Grid.Row="5" Grid.Column="{StaticResource Type}" 
                          d:Text="TRANSFORMER"
                          ItemsSource="{Binding Source={h:EnumBindingSource {x:Type edt:LoadTypes}}}"
                          SelectedValue="{Binding LoadToAddType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=False}"
                          IsEditable="True" IsTextSearchEnabled="True"  
                          Margin="5 0 5 0"/>

                <!--Fed From-->
                <ComboBox Grid.Row="5" Grid.Column="{StaticResource FedFrom}" 
                          Width="75"
                          ItemsSource="{Binding Source={StaticResource dteqList}}"
                          DisplayMemberPath="Tag"
                          SelectedValuePath="Tag"
                          SelectedValue="{Binding LoadToAddFedFrom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=False}"
                          Text="{Binding LoadToAddFedFrom}"
                          IsEditable="True" IsTextSearchEnabled="True"  
                          Margin="5 0 5 0"/>

                <ComboBox Grid.Row="5" Grid.Column="{StaticResource Voltage}"
                          MinWidth="60"
                          d:Text="13800"
                          ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}},Path=DataContext.VoltageTypes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedValue="{Binding LoadToAddVoltage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=False}"
                          Text="{Binding LoadToAddVoltage}"
                          IsEditable="True" IsTextSearchEnabled="True"
                          Margin="5 0 5 0"/>


                <TextBox Grid.Row="5" Grid.Column="{StaticResource Size}"
                         Width="50" Height="23"
                         Text="{Binding LoadToAddSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Margin="5 0 5 0">

                </TextBox>

                <ComboBox Grid.Row="5" Grid.Column="{StaticResource Unit}"
                          Width="50"
                          ItemsSource="{Binding Source={h:EnumBindingSource {x:Type edt:Units}}}"
                          SelectedValue="{Binding LoadToAddUnit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=False}"
                          Text="{Binding LoadToAddUnit}"
                          IsEditable="True" IsTextSearchEnabled="True"
                          Margin="5 0 5 0"/>

                <TextBox Grid.Row="5" Grid.Column="{StaticResource Description}"
                         MinWidth="100" Height="23"
                         Text="{Binding LoadToAddDescription, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Margin="5 0 5 0">
                </TextBox>

                <TextBox Grid.Row="5" Grid.Column="{StaticResource LoadFactor}"
                         MinWidth="50" Height="23"
                         Text="{Binding LoadToAddLoadFactor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Margin="5 0 5 0">
                </TextBox>
            </Grid>

            <!--ASSIGNED LOADS DataGrid-->
            
            <!--TODO - complete row editing-->
            <DataGrid x:Name="dgdAssignedLoads" 
                        Grid.Row="{StaticResource load}"  Grid.Column="3"
                        HorizontalAlignment="Left"
                        MinHeight="250" 
                        Margin="10,10,10,10"
                        ItemsSource="{Binding Path=AssignedLoads, Mode=OneWay, UpdateSourceTrigger=PropertyChanged,IsAsync=True}"
                        SelectedItem="{Binding SelectedLoad, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        CanUserAddRows="False"
                        CanUserDeleteRows="False"
                        AutoGenerateColumns="False"
                        RowDetailsVisibilityMode="{Binding ToggleRowViewProp}">

                <DataGrid.Columns>
                    <!--Textblock cell padding style in this.resources Move to ResDict-->

                    <!--Tag-->
                    <DataGridTextColumn Header="Tag"  
                                        Binding="{Binding Path=Tag, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        ElementStyle="{StaticResource ColumnElementStyle}" />

                    <!--<DataGridTemplateColumn Header="Tag"
                                            MinWidth="40">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <TextBox Text="{Binding Tag, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                BorderThickness="0"
                                                HorizontalAlignment="Center"
                                                Margin="0"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>-->

                    <!--Description-->
                    <DataGridTextColumn Header="Description" 
                                        MinWidth="150" 
                                        Binding="{Binding Path=Description, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="Margin" Value="5 0"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <!--Type-->
                    <DataGridTemplateColumn Header="Load Type" x:Name="loadType"
                                            MinWidth="75">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ComboBox ItemsSource="{Binding Source={h:EnumBindingSource {x:Type edt:LoadTypes}}}"
                                        SelectedValue="{Binding Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        Text="{Binding Type, ValidatesOnDataErrors=True}"
                                        HorizontalContentAlignment="Center"
                                        IsEditable="True" IsTextSearchEnabled="True"
                                        IsSynchronizedWithCurrentItem="False"
                                        BorderThickness="0"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>



                    <!--Fed From-->
                    <DataGridComboBoxColumn Header="Fed &#x0a;From" ItemsSource="{Binding Source={StaticResource dteqList}}"
                                            DisplayMemberPath="Tag" 
                                            SelectedValuePath="Tag" 
                                            SelectedValueBinding="{Binding Path=FedFrom}"
                                            MinWidth="75"/>
                    <!--Voltage-->
                    <DataGridTemplateColumn Header="Voltage">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ComboBox ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}},Path=DataContext.VoltageTypes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        SelectedValue="{Binding Voltage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        Text="{Binding Voltage, ValidatesOnDataErrors=True}"
                                        HorizontalContentAlignment="Center"
                                        IsEditable="True" IsTextSearchEnabled="True"
                                        IsSynchronizedWithCurrentItem="False"
                                        BorderThickness="0"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!--Size-->
                    <DataGridTextColumn Header="Size" x:Name="loadSize"
                                    MinWidth="50"
                                    Binding="{Binding Path=Size, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Right" />
                                <Setter Property="Margin" Value="5 0"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <!--Unit-->
                    <DataGridTemplateColumn Header="Unit"
                                            MinWidth="50">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ComboBox ItemsSource="{Binding Source={h:EnumBindingSource {x:Type edt:Units}}}"
                                        SelectedValue="{Binding Unit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        Text="{Binding Unit, ValidatesOnDataErrors=True}"
                                        IsEditable="True" IsTextSearchEnabled="True"
                                        IsSynchronizedWithCurrentItem="False"
                                        BorderThickness="0"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!--Loading-->
                    <DataGridTextColumn Header="FLA"
                                        MinWidth="40"
                                        Binding="{Binding Path=Fla, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" IsReadOnly="True"/>

                    <!--Efficiency-->
                    <DataGridTemplateColumn Header="Eff"
                                            MinWidth="40">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <TextBlock Text="{Binding Path=Efficiency, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                HorizontalAlignment="Center"
                                                Margin="0"/>
                                    <TextBlock Text=" %"
                                                HorizontalAlignment="Center"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding Path=Efficiency, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                            BorderThickness="0"
                                            Margin="0"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTextColumn Header=" PF " 
                                        MinWidth="40"
                                        Binding="{Binding Path=PowerFactor, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

                    <!--Running Amps-->
                    <DataGridTextColumn Header="Running &#x0a;Amps"  
                                        Binding="{Binding Path=RunningAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        Visibility="Hidden"/>

                    <DataGridTextColumn Header="Conn &#x0a;kVA"  
                                        Binding="{Binding Path=ConnectedKva, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

                    <DataGridTextColumn Header="Dem &#x0a;kVA"  
                                        Binding="{Binding Path=DemandKva, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

                    <DataGridTextColumn Header="Dem &#x0a;kW" 
                                        Binding="{Binding Path=DemandKw, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

                    <DataGridTextColumn Header="Dem &#x0a;kVAR" 
                                        Binding="{Binding Path=DemandKvar, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

                    <!--OCPD-->
                    <DataGridTextColumn Header="OCPD &#x0a; Type" 
                                        Binding="{Binding Path=PdType, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        HeaderStyle="{StaticResource OcpdColumnHeader}" />

                    <DataGridTextColumn Header="OCPD &#x0a;  Trip" 
                                        Binding="{Binding Path=PdSizeTrip, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        HeaderStyle="{StaticResource OcpdColumnHeader}" />

                    <DataGridTextColumn Header="OCPD &#x0a;Frame" 
                                        Binding="{Binding Path=PdSizeFrame, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        HeaderStyle="{StaticResource OcpdColumnHeader}" />


                    <!--CABLE-->
                    <DataGridTextColumn Header="Cable &#x0a;  Qty" x:Name="loadCableQty" 
                                        Binding="{Binding Path=CableQty, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        HeaderStyle="{StaticResource CableHeaderColumn}" />

                    <DataGridTextColumn Header="Cable &#x0a; Size" x:Name="loadCableSize" 
                                        Binding="{Binding Path=CableSize, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        HeaderStyle="{StaticResource CableHeaderColumn}" />

                    <DataGridTextColumn Header=" Base &#x0a;Amps" x:Name="loadCableBaseAmps" 
                                        Binding="{Binding Path=CableBaseAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        HeaderStyle="{StaticResource CableHeaderColumn}" />

                    <DataGridTextColumn Header="   Req'd&#x0a;Sz. Amps" x:Name="loadCableRequiredSizingAmps" 
                                        Binding="{Binding Path=CableRequiredSizingAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        HeaderStyle="{StaticResource CableHeaderColumn}" />

                    <DataGridTextColumn Header="  Cable&#x0a;Derating" x:Name="loadCableDerating" 
                                        Binding="{Binding Path=CableDerating, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        HeaderStyle="{StaticResource CableHeaderColumn}" />

                    <DataGridTextColumn Header="Derated &#x0a;  Amps" x:Name="loadCableDeratedAmps" 
                                        Binding="{Binding Path=CableDeratedAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        HeaderStyle="{StaticResource CableHeaderColumn}" />

                    <DataGridTextColumn Header="Req'd&#x0a;Amps" x:Name="loadCableRequiredAmps" 
                                        Binding="{Binding Path=CableRequiredAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        HeaderStyle="{StaticResource CableHeaderColumn}" />



                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </Grid>
</UserControl>
