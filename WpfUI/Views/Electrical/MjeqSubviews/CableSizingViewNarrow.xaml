<UserControl x:Class="WpfUI.Views.Electrical.MjeqSubviews.CableSizingViewNarrow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             
             xmlns:edtDteqModels="clr-namespace:EDTLibrary.Models.DistributionEquipment;assembly=EDTLibrary"
             xmlns:edtLoadModels="clr-namespace:EDTLibrary.Models.Loads;assembly=EDTLibrary"
             
             xmlns:subViews="clr-namespace:WpfUI.Views.SubViews"
             xmlns:Converters="clr-namespace:WpfUI.Converters"

             d:DesignHeight="400" d:DesignWidth="315"
             Background="LightCyan"  >

    <UserControl.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--<ResourceDictionary Source="../Styles/EdtTealStyle.xaml"/>-->
            </ResourceDictionary.MergedDictionaries>

            <BooleanToVisibilityConverter x:Key="boolToVis" />
            <Converters:InvertableBooleanToVisibilityConverter x:Key="_boolToVis"/>

            <x:Array xmlns:s="clr-namespace:System;assembly=mscorlib" x:Key="array" Type="{x:Type s:Int32}">
                <s:Int32>1</s:Int32>
                <s:Int32>2</s:Int32>
                <s:Int32>3</s:Int32>
                <s:Int32>4</s:Int32>
            </x:Array>

            <Style TargetType="TextBlock">
                <Setter Property="Margin" Value="0 3"/>
                <Setter Property="FontSize" Value="12"/>
            </Style>

            <Style TargetType="TextBox">
                <Setter Property="Margin" Value="0 3"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>


            <Style TargetType="CheckBox">
                <!--<Setter Property="Margin" Value="10 0 0 0"/>-->
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

            <Style TargetType="ComboBox">
                <Setter Property="Padding" Value="3 1"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="Margin" Value="0 3"/>
            </Style>


            <Style TargetType="TextBlock" x:Key="textBoxMouseOver">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="Margin" Value="0 3"/>
                        <Setter Property="FontSize" Value="12"/>
                        <Setter Property="Height" Value="20"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>


    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.ColumnSpan="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="15"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!--<TextBlock Text="Cable Tag: " Grid.Row="1" Grid.Column="0"/>
            <TextBlock Text="{Binding PowerCable.Tag}" Grid.Row="1" Grid.Column="2" 
                               d:Text="SWG001-MCC001-P1"
                               Grid.ColumnSpan="3" FontWeight="Bold"/>-->

            <!--Tag-->
            <TextBlock Text="{Binding PowerCable.Tag}"
                       Grid.Row="0" Grid.ColumnSpan="3"
                       FontSize="15"
                       FontWeight="Bold"
                       Margin="5"/>

            <!--Cable Type-->
            <TextBlock Text="Cable Type: " Grid.Row="1" Grid.Column="0"/>
            <ComboBox Template="{DynamicResource ComboBoxBase}"
                      Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="2" 
                      Width="175" HorizontalAlignment="Left"
                      FontWeight="Bold" FontSize="12"
                      ItemsSource="{Binding Path=PowerCable.TypeList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"   
                      DisplayMemberPath="Type"
                      SelectedValuePath="Type"
                      SelectedItem="{Binding PowerCable.TypeModel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      Text="{Binding PowerCable.Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      IsEditable="False" VerticalAlignment="Center"/>


            <!--Qty-->
            <TextBlock Text="Cable Qty: " Grid.Row="6" Grid.Column="0"/>
            <StackPanel Orientation="Horizontal" Grid.Row="6" Grid.Column="2" >
                <!--Qty Parallel-->
                <TextBox Text="{Binding PowerCable.QtyParallel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=False}"
                         Grid.Row="4" Grid.Column="2" Grid.ColumnSpan="1" 
                         FontWeight="Bold" Width="50" Background="White" 
                         TextAlignment="Center" HorizontalAlignment="Left"
                         BorderThickness="0.5"
                         d:Text="2"/>

                <!--Per phase Label-->
                <TextBlock  x:Name="txtPerPhase" 
                            Margin="0 5"
                            Text=" /ph" Grid.Row="4" Grid.Column="1"
                            FontWeight="SemiBold">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding PowerCable.Is1C}" Value="False">
                                    <Setter Property="Foreground" Value="Transparent"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding PowerCable.Is1C}" Value="True">
                                    <Setter Property="Foreground" Value="Black"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StackPanel>

            <!--Size-->
            <TextBlock Text="Cable Size: " Grid.Row="7" Grid.Column="0"/>
            <ComboBox Template="{DynamicResource ComboBoxBase}"
                      Grid.Row="7" Grid.Column="2" Grid.ColumnSpan="3" 
                      Width="50" HorizontalAlignment="Left"
                      VerticalAlignment="Center"
                      FontWeight="Bold" FontSize="12"
                      ItemsSource="{Binding Path=PowerCable.SizeList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"   
                      SelectedValue="{Binding PowerCable.Size, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      Text="{Binding PowerCable.Size, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      MaxDropDownHeight="auto"/>

            <!--<TextBlock Text="{Binding PowerCable.Size}"
                       Grid.Row="5" Grid.Column="2" FontWeight="Bold"
                       d:Text="3/0"/>-->

            <TextBlock Text="Derated Amps: " Grid.Row="11" Grid.Column="0"/>
            <TextBlock Text="{Binding PowerCable.DeratedAmps, StringFormat={}{0:N0}  A, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                       Grid.Row="11" Grid.Column="2" FontWeight="Bold"
                       Margin="0 3"
                       d:Text="400" 
                       ToolTip="{Binding PowerCable.DeratedAmpsToolTip}"
                       ToolTipService.InitialShowDelay="50">

                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding PowerCable.IsValidSize}" Value="False">
                                <Setter Property="Foreground" Value="#FFD40000"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

            <TextBlock Text="Required Amps: " Grid.Row="12" Grid.Column="0"/>
            <TextBlock Text="{Binding PowerCable.RequiredAmps, StringFormat={}{0:N0}  A}" 
                       Grid.Row="12" Grid.Column="2" FontWeight="Bold"
                       d:Text="300"
                       ToolTip="{Binding PowerCable.RequiredAmpsToolTip}"
                       ToolTipService.InitialShowDelay="50"/>

            <!--Voltage Drop-->
            <TextBlock Text="Voltage Drop: " Grid.Row="14" Grid.Column="0"/>
            <StackPanel Orientation="Horizontal"
                        Grid.Row="14" Grid.Column="2" Grid.ColumnSpan="2">
                <TextBlock Text="{Binding PowerCable.VoltageDrop, StringFormat={}{0:N1} V /}" 
                       Grid.Row="8" Grid.Column="2" FontWeight="Bold"
                       d:Text="5.2 V  / "
                       />

                <TextBlock Text="{Binding PowerCable.VoltageDropPercentage, StringFormat={}{0:N2} %}" 
                       Grid.Row="8" Grid.Column="2" FontWeight="Bold"
                       d:Text="2.6 %"
                           Margin="5 3"
                       />
            </StackPanel>



            <!--Installation Type-->
            <TextBlock Text="Installation Type" Grid.Row="5" Grid.Column="0" HorizontalAlignment="Left"/>
            <ComboBox Template="{DynamicResource ComboBoxBase}" 
                      Grid.Row="5" Grid.Column="2" Grid.ColumnSpan="2" HorizontalAlignment="Left"
                      Margin="0 3" Width="135"
                      FontWeight="Bold" FontSize="12"
                      ItemsSource="{Binding Path=DataContext.CableInstallationTypes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                            RelativeSource={RelativeSource Mode=FindAncestor, 
                                            AncestorType={x:Type UserControl}, AncestorLevel=2}}"
                      SelectedValue="{Binding PowerCable.InstallationType}"
                      Text="{Binding PowerCable.InstallationType}"  d:Text="LadderTray"
                      IsEditable="False" VerticalAlignment="Center"/>

            <!--Spacing-->
            <TextBlock Text="Spacing" Grid.Row="8" Grid.Column="0" HorizontalAlignment="Left"/>
            <ComboBox Template="{DynamicResource ComboBoxBase}"
                      Grid.Row="8" Grid.Column="2" Width="50" HorizontalAlignment="Left"
                      FontWeight="Bold" FontSize="12" Padding="3 -1"
                      ItemsSource="{Binding Path=DataContext.CableSpacing, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                            RelativeSource={RelativeSource Mode=FindAncestor, 
                                            AncestorType={x:Type UserControl}, AncestorLevel=2}}"
                      SelectedValue="{Binding PowerCable.Spacing}"
                      Text="{Binding PowerCable.Spacing}"  d:Text="100"
                      IsEditable="False" VerticalAlignment="Center"/>

            <!--Indoor Outdoor-->
            <TextBlock Text="Outdoor" Grid.Row="9" Grid.Column="0" />
            <CheckBox IsChecked="{Binding PowerCable.IsOutdoor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                              Grid.Row="9" Grid.Column="2" FontWeight="Bold" HorizontalAlignment="Left"
                              Margin="0 5"/>
            <TextBlock Text="(exposed to sunlight)" Grid.Row="9" Grid.Column="2" 
                                Grid.ColumnSpan="2"
                                Margin="25 3"
                                FontStyle="Italic"/>
            <!--Derating-->
            <TextBlock Text="Derating" Grid.Row="10" Grid.Column="0"/>
            <TextBlock Text="{Binding PowerCable.Derating, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                       Grid.Row="10" Grid.Column="2" FontWeight="Bold"
                       d:Text="0.8"
                       ToolTip="{Binding PowerCable.DeratingToolTip}"
                       ToolTipService.InitialShowDelay="50"/>

            <!--Length-->
            <TextBlock Text="Length" Grid.Row="13" Grid.Column="0" />

            <StackPanel Orientation="Horizontal"
                        Grid.Row="13" Grid.Column="2"
                        Grid.ColumnSpan="2">
                <TextBox Text="{Binding PowerCable.Length, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Grid.Row="8" Grid.Column="6" FontWeight="Bold"
                     Width="50"
                     HorizontalContentAlignment="Center"
                     d:Text="0.8" />
                <TextBlock Text="  meters"/>
            </StackPanel>


            <!--Sized Via-->
            <TextBlock Text="Sized via: " Grid.Row="15" Grid.Column="0"/>
            <StackPanel Orientation="Vertical" 
                        Grid.Row="15" Grid.Column="2"
                        HorizontalAlignment="Left"
                        Margin="0">
                <TextBlock Text="{Binding PowerCable.AmpacityTable}" Grid.Row="4" Grid.Column="6" HorizontalAlignment="Left"
                           Height="20"
                           d:Text="TableD17N15Out" FontWeight="Bold" 
                           Style="{StaticResource textBoxMouseOver}"
                           Margin="0 3 0 -3"/>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Diagram " FontWeight="Bold"
                           Margin="0 -2"/>
                    <TextBlock Text="{Binding PowerCable.InstallationDiagram}"
                           d:Text="D8-1" FontWeight="Bold"
                           Margin="0 -2"/>
                </StackPanel>
            </StackPanel>


            <!--AutoSize on Right-->
            <!--<Button Content="Auto-Size" 
                    Grid.Row="10" Grid.Column="3" 
                    Grid.RowSpan="2" Grid.ColumnSpan="2"
                    Command="{Binding PowerCable.AutoSizeCableCommand}"   />-->


        </Grid>

        <!--Warning-->
        <StackPanel Orientation="Horizontal"
                    Grid.Row="1"
                    Margin="5 5 0 5" 
                    Visibility="{Binding PowerCable.IsValidSize, Converter={StaticResource _boolToVis}, ConverterParameter=Inverted}">
            <Image Source="..\..\..\ResourceFiles\WarningIcon48.png"
                   Height="13"
                   Margin="0 0 5 0"
                   VerticalAlignment="Center"/>
            <TextBlock Text="Required Amps Exceeded!"
                   Grid.Row="1"
                   Foreground="#FFD40000"
                   TextWrapping="Wrap"
                   />
        </StackPanel>



        <!--Below Buttons-->
        <Button Content="Auto-Size" 
                Grid.Row="4"
                HorizontalAlignment="Left"
                Margin="70 0"
                Command="{Binding PowerCable.AutoSizeCableCommand}"   />

        <!--<StackPanel Orientation="Horizontal" 
                    Grid.Row="3" Grid.ColumnSpan="3" Margin="0,0,0,0">
            <Button Content="Calculate Amps" Grid.Row="2" Margin="70 0 0 0" 
                    Command="{Binding Path=DataContext.CalculateSingleEqCableAmpsCommand, 
                                      RelativeSource={RelativeSource Mode=FindAncestor, 
                                      AncestorType={x:Type UserControl}, AncestorLevel=2}}"   />


            <Button Content="Auto-Size" Grid.Row="2" Margin="100 0 0 0" 
                        Command="{Binding PowerCable.AutoSizeCableCommand}"   />


        </StackPanel>-->


    </Grid>
</UserControl>
