<UserControl x:Class="WpfUI.Views.Electrical._MjeqView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             
             xmlns:local="clr-namespace:WpfUI.Views"
             xmlns:root="clr-namespace:WpfUI"
             
             xmlns:rules="clr-namespace:WpfUI.ValidationRules"
             xmlns:controls="clr-namespace:WpfUI.Controls"
             xmlns:iconControls="clr-namespace:WpfUI.UserControls.IconControls"
             xmlns:orderControls="clr-namespace:WpfUI.UserControls.OrderingControls"
             
             
             xmlns:converters="clr-namespace:WpfUI.Converters"
             
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
              
             xmlns:h="clr-namespace:WpfUI.Helpers"
             xmlns:commands="clr-namespace:WpfUI.Commands"
             xmlns:viewModifiers="clr-namespace:WpfUI.ViewModifiers"
             xmlns:views="clr-namespace:WpfUI.Views"
             xmlns:electricalViewModels="clr-namespace:WpfUI.ViewModels.Electrical"
             xmlns:subViews="clr-namespace:WpfUI.Views.EquipmentSubViews"
             xmlns:mjeqSubViews="clr-namespace:WpfUI.Views.Electrical.MjeqSubviews"
             
             xmlns:edt="clr-namespace:EDTLibrary;assembly=EDTLibrary"
             xmlns:edtDteqModels="clr-namespace:EDTLibrary.Models.DistributionEquipment;assembly=EDTLibrary"
             xmlns:edtLoadModels="clr-namespace:EDTLibrary.Models.Loads;assembly=EDTLibrary"
              
             xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
             xmlns:styleSelectors="clr-namespace:WpfUI.SyncFusion.StyleSelectors"
             
             x:Name="eqView"
              
             mc:Ignorable="d"
             d:Width="1850" d:Height="1000"
             Background="#FFDAEEF1" 
             PreviewKeyDown="eqView_PreviewKeyDown" 
             Loaded="eqView_Loaded" Unloaded="eqView_Unloaded" 
             MouseLeave="eqView_MouseLeave" 
             >

    <!--#FFDAEEF1-->


    <UserControl.Resources>
        <!--Background="#FFBDCCCA">-->

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../Stores/ToolTips.xaml"/>
                <ResourceDictionary Source="../../Styles/EdtStyle_Teal.xaml"/>
                <ResourceDictionary Source="../../Styles/ContextMenus/ContextMenus.xaml"/>

            </ResourceDictionary.MergedDictionaries>

            <styleSelectors:NonMotorLoadVisibilityStyleSelector x:Key="NonMotorLoadVisibilityStyleSelector"/>


            <viewModifiers:BindingProxy x:Key="AreaViewProxy" Data="{Binding AreaColumnVisible}" />


            <BooleanToVisibilityConverter x:Key="BoolToVis"/>

            <!--For FedFrom Comboboxes-->
            <CollectionViewSource x:Key="dteqList" Source="{Binding ListManager.DteqList}"/>


            <Style x:Key="ColumnElementStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="Margin" Value="10,0,10,0" />
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>


    <!--TOP-->
    <DockPanel Background="{StaticResource PageBackground}">

        <!--Status Bar-->
        <Grid DockPanel.Dock="Bottom" 
                    Height="23"
                    Background="{StaticResource StatusBarBackroundColor}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="10"/>
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="1" Orientation="Horizontal" Height="23">

                <!--Counts-->
                <TextBlock Text="Counts"   Style="{StaticResource StatusBarLabel_TextBlockStyle}" />

                <TextBlock Text="Dteq:  "  Style="{StaticResource StatusBarValue_TextBlockStyle}" />
                <TextBlock Text="{Binding ListManager.IDteqList.Count}" Margin="0"   Style="{StaticResource StatusBarValue_TextBlockStyle}" />
                <TextBlock Text="Loads:  "  Style="{StaticResource StatusBarValue_TextBlockStyle}" />
                <TextBlock Text="{Binding ListManager.LoadList.Count}" Margin="0"   Style="{StaticResource StatusBarValue_TextBlockStyle}" />
                <TextBlock Text="Cables:  "  Style="{StaticResource StatusBarValue_TextBlockStyle}" />
                <TextBlock Text="{Binding ListManager.CableList.Count}" Margin="0"   Style="{StaticResource StatusBarValue_TextBlockStyle}" />

            </StackPanel>

            <Separator Grid.Column="2" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="10 0"/>

            <!--Selection-->
            <StackPanel Grid.Column="3" Orientation="Horizontal" Height="23">

                <!--Dteq-->
                <TextBlock Text="Dteq"   Style="{StaticResource StatusBarLabel_TextBlockStyle}" />
                <TextBlock Text="Id:  "  Style="{StaticResource StatusBarValue_TextBlockStyle}" />
                <TextBlock Text="{Binding SelectedDteq.Id}" Margin="0"   Style="{StaticResource StatusBarValue_TextBlockStyle}" />
                <TextBlock Text="Load Qty:  "  Style="{StaticResource StatusBarValue_TextBlockStyle}" />
                <TextBlock Text="{Binding SelectedDteq.AssignedLoads.Count}" Margin="0"   Style="{StaticResource StatusBarValue_TextBlockStyle}" />

                <!--Load-->
                <TextBlock Text="Load"   Style="{StaticResource StatusBarLabel_TextBlockStyle}" />
                <TextBlock Text="Id:  "  Style="{StaticResource StatusBarValue_TextBlockStyle}" />
                <TextBlock Text="{Binding SelectedLoad.Id}" Margin="0"   Style="{StaticResource StatusBarValue_TextBlockStyle}" />
                <TextBlock Text="Qty:  "  Style="{StaticResource StatusBarValue_TextBlockStyle}" />
                <TextBlock Text="{Binding SelectedLoads.Count}" Margin="0"   Style="{StaticResource StatusBarValue_TextBlockStyle}" />
            </StackPanel>

            <Separator Grid.Column="4" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="10 0"/>
            <!--Test-->
            <StackPanel  Grid.Column="5" Orientation="Horizontal">
                <TextBlock Text="Lcs  Tm.Type "  Style="{StaticResource StatusBarValue_TextBlockStyle}" />
                <TextBlock Text="{Binding SelectedLoad.Lcs.TypeModel.Type}" Margin="0"   Style="{StaticResource StatusBarValue_TextBlockStyle}" />
                <TextBlock Text=",    Lcs  Type "  Style="{StaticResource StatusBarValue_TextBlockStyle}" />
                <TextBlock Text="{Binding SelectedLoad.Lcs.Type}" Margin="0"   Style="{StaticResource StatusBarValue_TextBlockStyle}" />
            </StackPanel>

            <Separator Grid.Column="7" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="10 0"/>
            <!-- Right .. Components? -->
            <StackPanel  Grid.Column="8" Orientation="Horizontal"
                         Visibility="Collapsed">
                <TextBlock Text="Raceway"   Style="{StaticResource StatusBarLabel_TextBlockStyle}" />
                <TextBlock Text="Qty:  "  Style="{StaticResource StatusBarValue_TextBlockStyle}" />
                <TextBlock Text="{Binding ListManager.RacewayList.Count}" Margin="0"   Style="{StaticResource StatusBarValue_TextBlockStyle}" />
                <TextBlock Text="Selected:  "  Style="{StaticResource StatusBarValue_TextBlockStyle}" />
            </StackPanel>
        </Grid>

        <Grid Background="{StaticResource PageBackground}">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <!--Busy Indicator Border-->
            <controls:ClippingBorder BorderBrush="Black" BorderThickness="2"
                                     Grid.RowSpan="10"
                                     Grid.ColumnSpan="10"
                                     Width="350"
                                     Height="350"
                                     CornerRadius="{StaticResource ControlCornerRadius}"
                                     Panel.ZIndex="1"
                                     Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}"
                                     d:Visibility="Collapsed">
                <controls:ClippingBorder.Background>
                    <SolidColorBrush Color="White" Opacity=".85"/>
                </controls:ClippingBorder.Background>

                <!--BusyIndicator-->
                <syncfusion:SfBusyIndicator x:Name="busyIndicator"
                                                Grid.Row="0" Grid.Column="0"
                                                IsBusy="{Binding IsBusy, UpdateSourceTrigger=PropertyChanged}"
                                                Foreground="{StaticResource Darkest}"
                                                ViewboxHeight="50"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"
                                                Header="Calculating..."
                                                AnimationType="SingleCircle"
                                                Panel.ZIndex="5"/>
            </controls:ClippingBorder>

            <!--Page Title-->
            <TextBlock Text="Major Equipment"
                       Grid.Row="0"
                       Grid.RowSpan="2"
                       Style="{StaticResource PageTitleStyle}"
                       Visibility="Collapsed"/>



            <!--Main Grid-->
            <Grid Grid.Row="2"        ShowGridLines="False"
              x:Name="elecGrid"
              d:Opacity="1"
              Opacity="0.0"  Grid.IsSharedSizeScope="True">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="*"/> <!--dataGrid-->
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="525" MinWidth="25" MaxWidth="550"/> <!--propertyGrid-->
                    <ColumnDefinition Width="1"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="{Binding DteqGridBottom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" d:Height="300" MaxHeight="750" MinHeight="300"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.Triggers>
                    <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="elecGrid"
                                             BeginTime="0:0:0"
                                From="0.0" To="1" Duration="0:0:0.3"
                                             AccelerationRatio="1"
                                AutoReverse="False" RepeatBehavior="1x"/>

                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Grid.Triggers>

              

                <!--MENU BUTTONS-->


                <!--Load VIEW Buttons-->

                <!--DTEQ-->



                <!--Buttons beside Dteq Grid-->
                <Grid  x:Name="dteqButtonsStackPanel"
                   Grid.Column="1" Grid.Row="2"
                   Margin=" 0 50 0 0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Vertical"
                        Grid.Row="0"
                        Margin="0,0,0,0">

                        <!--<Button Content="AutoSize Cables"
                        Command="{Binding SizeCablesCommand}"/>-->

                        <!--<Button Content="Calc. Cable Amps" Name ="btnCalcCableAmps" 
                        Command="{Binding CalculateAllCableAmpsCommand}"/>-->

                        <Button Content="Delete Selected"
                        Style="{StaticResource RedButton}"
                        Command="{Binding DeleteDteqCommand}"
                        CommandParameter="{Binding SelectedDteq}" />
                    </StackPanel>

                    <Button x:Name ="btnAddEquipmentPanelView" Content="Add Equipment" 
                        Grid.Row="1"
                        VerticalAlignment="Bottom"
                        Margin="0 0 0 20"                         
                        PreviewMouseLeftButtonDown="AddEquipmentPanelViewToggle_PreviewMouseLeftButtonDown"/>
                </Grid>


                <!--Buttons beside load grid-->
                <ScrollViewer Grid.Column="1" Grid.Row="4" 
                              VerticalScrollBarVisibility="Auto"
                              HorizontalScrollBarVisibility="Auto">

                    <DockPanel  
                            Grid.Column="1" Grid.Row="4"
                            Margin="0,75,0,0">



                        <Button Content="Load List" Height="25" Width="100"
                                Command="{Binding GetLoadListCommand}"
                                DockPanel.Dock="Top"/>

                        <!--Ordering-->
                        <orderControls:LoadOrderingControl DockPanel.Dock="Top"/>

                        <Button Content="Delete Selected" Height="25" Width="100"
                                Style="{StaticResource RedButton}"
                                Command="{Binding DeleteLoadCommand}" 
                                CommandParameter="{Binding SelectedLoad}" 
                                DockPanel.Dock="Top"/>


                    </DockPanel>
                </ScrollViewer>

                <!--DTEQ GRID-->
                <Grid Grid.Row="2" Grid.Column="3" Grid.ColumnSpan="1"
                      >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*" x:Name="dteqGridRow"/>
                    </Grid.RowDefinitions>

                    <!--Title-->
                    <TextBlock Text="Distribution Equipment"
                                Grid.Row="0" Grid.Column="0"
                                   Margin="10 5 0 0"
                                   Width="200"
                                   HorizontalAlignment="Left"
                                   FontSize="14" 
                                   FontWeight="SemiBold"/>

                    <!--DTEQ Column Toggle Buttons-->
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" 
                                Grid.Row="0" Grid.Column="1" 
                                Margin="0 0 50 0">


                        <!--<Button 
                                Width="80" Height="17"
                                Margin="5 0"
                                VerticalAlignment="Bottom"
                                Command="{Binding Path=ToggleRowDetailViewCommand}"
                                >
                            <TextBlock Text="Row Details" Margin="0 -1 0 0"/>
                        </Button>-->

                        <Button 
                                Width="80" Height="17"
                                Margin="5 0"
                                VerticalAlignment="Bottom"
                                Command="{Binding TogglePowerViewDteqCommand}"
                                >
                            <TextBlock Text="Power Data" Margin="0 -1 0 0"/>
                        </Button>

                        <Button 
                                Width="80" Height="17"
                                Margin="5 0"
                                VerticalAlignment="Bottom"
                                Command="{Binding ToggleOcpdViewDteqCommand}"
                                >
                            <TextBlock Text="OCDP Data" Margin="0 -1 0 0"/>
                        </Button>

                        <Button 
                                Width="80" Height="17"
                                Margin="5 0"
                                VerticalAlignment="Bottom"
                                Command="{Binding ToggleCableViewDteqCommand}"
                                >
                            <TextBlock Text="Cable Data" Margin="0 -1 0 0"/>
                        </Button>
                    </StackPanel>


                    <!--DTEQ DATA GRID-->
                    <!--Grid height is adjusted in the View.cs file by the method btnGrdSplitAdjust_PreviewMouseLeftButtonDown-->
                    <controls:ClippingBorder BorderBrush="{StaticResource ControlBorder}" BorderThickness="1"
                                Grid.Row="1" Grid.Column="1"
                                
                                Margin="5 5 0 5"
                                HorizontalAlignment="Left"
                              VerticalAlignment="Top"             
                               
                                CornerRadius="{StaticResource ControlCornerRadius}"
                                >   
                        <DataGrid x:Name="dgdDteq" 
                              Grid.Row="1" Grid.Column="1"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Top"
                                  BorderThickness="0"
                              Height="{Binding DteqGridHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              
                              SelectedItem="{Binding SelectedDteq, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              ItemsSource="{Binding DteqCollectionView}"
                              
                          
                              IsSynchronizedWithCurrentItem="True"
                              FrozenColumnCount="1"
                          
                              RowHeaderWidth="0"
                          
                              d:Height="250"
                              
                              CanUserAddRows="False"
                              CanUserDeleteRows="False"
                              AutoGenerateColumns="False"
                              EnableRowVirtualization="True"
                              EnableColumnVirtualization="True"
                              ScrollViewer.CanContentScroll="True"
                              VirtualizingPanel.IsVirtualizing="True"
                              SelectionChanged="dgdDteq_SelectionChanged"
                              VirtualizingPanel.VirtualizationMode="Recycling"
                              RowDetailsVisibilityMode="{Binding ToggleRowDetailViewProp}" MouseLeave="dgdDteq_MouseLeave" >
                            <!--ItemsSource="{Binding DteqList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"-->

                            <DataGrid.Resources>
                                <Style x:Key="errorStyle" TargetType="{x:Type TextBlock}">
                                    <Setter Property="Padding" Value="0"/>
                                    <Setter Property="ToolTipService.InitialShowDelay" Value="100"/>
                                    <Style.Triggers>
                                        <Trigger Property="Validation.HasError" Value="True">
                                            <Setter Property="Background" Value="{StaticResource ErrorColor_Base}"/>
                                            <Setter Property="Foreground" Value="{StaticResource ErrorColor_Base}"/>
                                            <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>

                                <viewModifiers:BindingProxy x:Key="PowerViewProxy" Data="{Binding DteqGridViewModifier.Power}" />
                                <viewModifiers:BindingProxy x:Key="OcpdViewProxy" Data="{Binding DteqGridViewModifier.Ocpd}" />
                                <viewModifiers:BindingProxy x:Key="CableViewProxy" Data="{Binding DteqGridViewModifier.Cable}" />
                            </DataGrid.Resources>

                            <DataGrid.Columns>
                                <!--Basic-->
                                <!--Textblock cell padding style in this.resources Move to ResDict-->

                                <!--Validation Icon-->
                                <DataGridTemplateColumn Width="25"
                                                    HeaderStyle="{StaticResource DataGridColumnHeaderWithFilterBase}"
                                                    >
                                    <DataGridTemplateColumn.Header>

                                        <Grid>
                                          
                                        </Grid>
                                    </DataGridTemplateColumn.Header>

                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <iconControls:ErrorIcon
                                                Visibility="{Binding IsValid, 
                                                Converter={StaticResource BoolToVisInvert}, 
                                                ConverterParameter=Inverted}"
                                                ToolTipService.InitialShowDelay="250">
                                                <iconControls:ErrorIcon.ToolTip>
                                                    <ToolTip>
                                                        <StackPanel Orientation="Vertical">
                                                            <!--<TextBlock Text="Validation Failures:"/>-->
                                                            <TextBlock Text="{Binding IsInvalidMessage}"
                                                                       TextAlignment="Left"/>
                                                        </StackPanel>
                                                    </ToolTip>
                                                </iconControls:ErrorIcon.ToolTip>
                                            </iconControls:ErrorIcon>
                                                

                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    
                                </DataGridTemplateColumn>
                                
                                
                                <!--Tag-->
                                <DataGridTextColumn x:Name="dteqTag"
                                                MinWidth="75"
                                                Binding="{Binding Tag, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                ElementStyle="{StaticResource ColumnElementStyle}"
                                                HeaderStyle="{StaticResource DataGridColumnHeaderWithFilterBase}">

                                    <DataGridTextColumn.Header>

                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <TextBlock Text="Tag" 
                                                        Grid.Row="0" Grid.ColumnSpan="2"
                                                        VerticalAlignment="Center" HorizontalAlignment="Center" Padding="5 2 5 2"/>
                                            <!--Text="{Binding Filter}"-->

                                            <!--<Button Style="{StaticResource FilterButton}"/>-->
                                            <TextBox x:Name="txtDteqTagFilter" 
                                                 Style="{StaticResource FilterTextBoxBase}"
                                                 PreviewKeyDown="DteqGridFilter" />

                                        </Grid>
                                    </DataGridTextColumn.Header>

                                </DataGridTextColumn>

                                <!--Description-->
                                <DataGridTextColumn x:Name="dteqDescription"
                                                MinWidth="150"
                                                Binding="{Binding Description, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                HeaderStyle="{StaticResource DataGridColumnHeaderWithFilterBase}">

                                    <DataGridTextColumn.Header>

                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <TextBlock Text="Description" 
                                                        Grid.Row="0" Grid.ColumnSpan="2"
                                                        VerticalAlignment="Center" HorizontalAlignment="Center" Padding="5 2 5 2"/>
                                            <!--Text="{Binding Filter}"-->


                                            <!--<Button Style="{StaticResource FilterButton}"/>-->
                                            <TextBox x:Name="txtDteqDescriptionFilter" 
                                                 Style="{StaticResource FilterTextBoxBase}"
                                                 PreviewKeyDown="DteqGridFilter" />


                                        </Grid>
                                    </DataGridTextColumn.Header>
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="HorizontalAlignment" Value="Left" />
                                            <Setter Property="Margin" Value="5 0"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                    <DataGridTextColumn.EditingElementStyle>
                                        <Style TargetType="{x:Type TextBox}">
                                            <Setter Property="TextAlignment" Value="Left" />
                                            <Setter Property="BorderThickness" Value="0"/>
                                        </Style>
                                    </DataGridTextColumn.EditingElementStyle>
                                </DataGridTextColumn>

                                <!--Area-->
                                <DataGridTemplateColumn x:Name="dteqArea"
                                                    Width="75"
                                                    SortMemberPath="Area.Tag"
                                                    HeaderStyle="{StaticResource DataGridColumnHeaderWithFilterBase}"
                                             Visibility="{Binding Data, Converter={StaticResource BoolToVis}, Source={StaticResource AreaViewProxy}}"
                                                    >
                                    <DataGridTemplateColumn.Header>

                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <TextBlock Text="Area" 
                                                   Grid.Row="0" Grid.ColumnSpan="2"
                                                   VerticalAlignment="Center" HorizontalAlignment="Center" Padding="5 2 5 2"/>
                                            <!--Text="{Binding Filter}"-->

                                            <!--<Button Style="{StaticResource FilterButton}"/>-->
                                            <TextBox x:Name="txtDteqAreaFilter" 
                                                 Style="{StaticResource FilterTextBoxBase}"
                                                 PreviewKeyDown="DteqGridFilter" />

                                        </Grid>
                                    </DataGridTemplateColumn.Header>

                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Area.Tag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                   MouseLeftButtonDown="FastEditEvent" />


                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <ComboBox ItemsSource="{Binding DataContext.ListManager.AreaList, Mode=TwoWay, 
                                                                            RelativeSource={RelativeSource AncestorType={x:Type 
                                                                            UserControl}, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged}"
                                                  SelectedItem="{Binding Area, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  DisplayMemberPath="Tag"
                                                  Text="{Binding Area.Tag}"
                                                  HorizontalContentAlignment="Left"
                                                  IsEditable="False" IsTextSearchEnabled="True"
                                                  IsSynchronizedWithCurrentItem="False"                                             
                                                  BorderThickness="0"
                                                  Template="{DynamicResource ComboBoxBase}"
                                                  >
                                                <!--IsDropDownOpen="True"-->

                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="auto"/>
                                                                <ColumnDefinition Width="auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <TextBlock Grid.Column="0" Text="{Binding Tag}" HorizontalAlignment="Left" TextAlignment="Left" Width="35" Margin="10 0"/>
                                                            <TextBlock Grid.Column="1" Text="{Binding Name}" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                            </ComboBox>

                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>

                                <!--Fed From Model-->
                                <DataGridTemplateColumn x:Name="dteqFedFrom" MinWidth="75"
                                                    SortMemberPath="FedFrom.Tag"
                                                    HeaderStyle="{StaticResource DataGridColumnHeaderWithFilterBase}">
                                    <DataGridTemplateColumn.Header>

                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <TextBlock Text="Fed From" 
                                                   Grid.Row="0" Grid.ColumnSpan="2"
                                                   VerticalAlignment="Center" HorizontalAlignment="Center" Padding="5 2 5 2"/>
                                            <!--Text="{Binding Filter}"-->

                                            <!--<Button Style="{StaticResource FilterButton}"/>-->
                                            <TextBox x:Name="txtDteqFedFromFilter" 
                                                 Style="{StaticResource FilterTextBoxBase}"
                                                 PreviewKeyDown="DteqGridFilter" />

                                        </Grid>
                                    </DataGridTemplateColumn.Header>

                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding FedFrom.Tag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                   MouseLeftButtonDown="FastEditEvent">
                                                <TextBlock.Style>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding FedFrom.Tag}" Value="* Deleted *">
                                                                <Setter Property="Foreground"  Value="{StaticResource ErrorColor_Base}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>

                                            <!-- CAUSES Disapearing when inside "Text" : UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True-->

                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <ComboBox ItemsSource="{Binding DataContext.ListManager.DteqList, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type UserControl}, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged}"
                                                  SelectedItem="{Binding FedFrom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  DisplayMemberPath="Tag"
                                                  HorizontalContentAlignment="Center"
                                                  IsEditable="False" IsTextSearchEnabled="False" IsReadOnly="True" TextSearch.Text=""
                                                  IsSynchronizedWithCurrentItem="False"
                                                  BorderThickness="0"
                                                  Template="{DynamicResource ComboBoxBase}"
                                                  />
                                            <!--IsDropDownOpen="True"-->
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>

                                <!--Line Voltage Type-->
                                <DataGridTemplateColumn  Header=" Line &#xA; Voltage "
                                                     SortMemberPath="LineVoltage">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding LineVoltageType.VoltageString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                   TextAlignment="Left"
                                                   Padding="5 0"
                                                   MouseLeftButtonDown="FastEditEvent"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>

                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <ComboBox ItemsSource="{Binding DataContext.TypeManager.VoltageTypes, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged}"
                                                  SelectedItem="{Binding LineVoltageType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  DisplayMemberPath="VoltageString"
                                                  HorizontalContentAlignment="Left"
                                                  IsEditable="False" IsTextSearchEnabled="True"
                                                  IsSynchronizedWithCurrentItem="False"
                                                  BorderThickness="0"
                                                  Padding="5 0 0 0"
                                                  Template="{DynamicResource ComboBoxBase}"
                                              
                                                  />
                                            <!--IsDropDownOpen="True"-->
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>

                                <!--Load Voltage Type-->
                                <DataGridTemplateColumn Header=" Load &#xA; Voltage "
                                                    SortMemberPath="LoadVoltage">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding LoadVoltageType.VoltageString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                   TextAlignment="Left"
                                                   Padding="5 0 0 0"
                                                   MouseLeftButtonDown="FastEditEvent"
                                                   />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>

                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <ComboBox ItemsSource="{Binding DataContext.TypeManager.VoltageTypes, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"
                                                  SelectedItem="{Binding LoadVoltageType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  DisplayMemberPath="VoltageString"
                                                  HorizontalContentAlignment="Left"
                                                  IsEditable="False" IsTextSearchEnabled="True"
                                                  IsSynchronizedWithCurrentItem="False"
                                                  BorderThickness="0"
                                                  Padding="5 0 0 0"
                                                  Template="{DynamicResource ComboBoxBase}"
                                                  />
                                            <!--IsDropDownOpen="True"-->
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>

                                <!--Size-->
                                <DataGridTextColumn Header="Size" x:Name="dteqSize"
                                    MinWidth="50"
                                    Binding="{Binding Size, Mode=TwoWay, NotifyOnSourceUpdated=True, StringFormat=\{0:N0\}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="HorizontalAlignment" Value="Right" />
                                            <Setter Property="Margin" Value="5 0"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>

                                <!--Unit-->
                                <DataGridTextColumn Header="Unit"
                                                MinWidth="40"
                                                IsReadOnly="True"
                                                TextBlock.TextAlignment="Left"
                                                Binding="{Binding Unit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="HorizontalAlignment" Value="Left" />
                                            <Setter Property="Margin" Value="5 0"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>

                                <!--Type-->
                                <DataGridTextColumn Header="EQ Type" x:Name="dteqType"
                                                MinWidth="75"
                                                Binding="{Binding Type, ValidatesOnDataErrors=True}"
                                                IsReadOnly="True">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="HorizontalAlignment" Value="Left" />
                                            <Setter Property="Margin" Value="5 0"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>

                                <!--Percent Loaded-->
                                <DataGridTemplateColumn Header=" Percent &#xA;Loaded"
                                    x:Name="dteqPercentLoaded"
                                    MinWidth="35"
                                    MaxWidth="55"
                                    IsReadOnly="True">

                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                <TextBlock Text="{Binding PercentLoaded, Mode=TwoWay, NotifyOnSourceUpdated=True, StringFormat=\{0:N0\}  %, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                       Background="{Binding PercentLoaded, Converter={StaticResource PercentLoadedToColor}}"
                                                       Height="20" Width="75"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Stretch"
                                                       TextAlignment="Center"
                                                       Margin="0"
                                                       Padding="0 2 0 0"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <!--Running Amps-->
                                <DataGridTextColumn Header=" Running &#xA;Amps" x:Name="dteqRunningAmps"
                                    Binding="{Binding RunningAmps, Mode=TwoWay, NotifyOnSourceUpdated=True, StringFormat=\{0:N0\}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                    IsReadOnly="True"/>

                                <!--FLA-->
                                <DataGridTextColumn Header=" FLA / Max &#xA;Amps" x:Name="dteqFla" 
                                    MinWidth="40"
                                    Binding="{Binding Fla, Mode=TwoWay, NotifyOnSourceUpdated=True, StringFormat=\{0:N0\}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                    IsReadOnly="True"/>


                                <!--Power Factor-->
                                <DataGridTextColumn Header=" PF " x:Name="dteqPowerFactor" 
                                             Width="*" MinWidth ="40"
                                            Binding="{Binding PowerFactor, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                            IsReadOnly="True"
                                            Visibility="{Binding Data, Converter={StaticResource BoolToVis}, Source={StaticResource PowerViewProxy}}"/>

                                <DataGridTextColumn Header=" Conn &#xA; kVA " x:Name="dteqConnectedKva"
                                            Width="*" MinWidth ="40"
                                    Binding="{Binding ConnectedKva, Mode=TwoWay, NotifyOnSourceUpdated=True, StringFormat=\{0:N0\}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                    IsReadOnly="True"
                                    Visibility="{Binding Data, Converter={StaticResource BoolToVis}, Source={StaticResource PowerViewProxy}}"/>

                                <DataGridTextColumn Header=" Dem &#xA; kVA " x:Name="dteqDemandKva"
                                            Width="*" MinWidth ="40"
                                    Binding="{Binding DemandKva, Mode=TwoWay, NotifyOnSourceUpdated=True, StringFormat=\{0:N0\}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                    IsReadOnly="True"
                                    Visibility="{Binding Data, Converter={StaticResource BoolToVis}, Source={StaticResource PowerViewProxy}}"/>

                                <DataGridTextColumn Header=" Dem &#xA; kW " x:Name="dteqDemandKw" 
                                            Width="*" MinWidth ="40"
                                    Binding="{Binding DemandKw, Mode=TwoWay, NotifyOnSourceUpdated=True, StringFormat=\{0:N0\}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                    IsReadOnly="True"
                                    Visibility="{Binding Data, Converter={StaticResource BoolToVis}, Source={StaticResource PowerViewProxy}}"/>

                                <DataGridTextColumn Header=" Dem &#xA; kVAR " x:Name="dteqDemandKvar" 
                                            Width="*" MinWidth ="40"
                                    Binding="{Binding DemandKvar, Mode=TwoWay, NotifyOnSourceUpdated=True, StringFormat=\{0:N0\}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                    IsReadOnly="True"
                                    Visibility="{Binding Data, Converter={StaticResource BoolToVis}, Source={StaticResource PowerViewProxy}}"/>

                                <!--OCPD-->
                                <DataGridTextColumn Header=" OCPD &#xA; Type "
                                            Width="*" MinWidth ="100"
                                    Binding="{Binding ProtectionDevice.Type, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                    HeaderStyle="{StaticResource OcpdColumnHeader}" 
                                    Visibility="{Binding Data, Converter={StaticResource BoolToVis}, Source={StaticResource OcpdViewProxy}}"/>

                                <DataGridTextColumn Header=" OCPD &#xA; Trip "
                                            Width="*" MinWidth ="40"
                                    Binding="{Binding ProtectionDevice.TripAmps, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                    HeaderStyle="{StaticResource OcpdColumnHeader}" 
                                    Visibility="{Binding Data, Converter={StaticResource BoolToVis}, Source={StaticResource OcpdViewProxy}}"/>

                                <DataGridTextColumn Header=" OCPD &#xA; Frame "
                                            Width="*" MinWidth ="40"
                                    Binding="{Binding ProtectionDevice.FrameAmps, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                    HeaderStyle="{StaticResource OcpdColumnHeader}" 
                                    Visibility="{Binding Data, Converter={StaticResource BoolToVis}, Source={StaticResource OcpdViewProxy}}"/>

                                <DataGridCheckBoxColumn Header="Main Lugs Only"
                                                    Binding="{Binding IsMainLugsOnly, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Visibility="{Binding Data, Converter={StaticResource BoolToVis}, Source={StaticResource OcpdViewProxy}}"/>


                                <!--CABLE-->
                                <DataGridTextColumn Header=" Cable &#xA; Qty " x:Name="dteqCableQty"
                                            Width="*" MinWidth ="50"
                                    Binding="{Binding PowerCable.QtyParallel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                    HeaderStyle="{StaticResource CableHeaderColumn}" 
                                    Visibility="{Binding Data, Converter={StaticResource BoolToVis}, Source={StaticResource CableViewProxy}}"/>

                                <DataGridTextColumn Header=" Cable &#xA; Size " x:Name="dteqCableSize" 
                                            Width="*" MinWidth ="50"
                                    Binding="{Binding PowerCable.Size, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                    HeaderStyle="{StaticResource CableHeaderColumn}" 
                                    Visibility="{Binding Data, Converter={StaticResource BoolToVis}, Source={StaticResource CableViewProxy}}"/>

                                <DataGridTextColumn Header=" Base &#xA; Amps " x:Name="dteqCableBaseAmps" 
                                            Width="*" MinWidth ="50"
                                    Binding="{Binding PowerCable.BaseAmps, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                    HeaderStyle="{StaticResource CableHeaderColumn}" 
                                    Visibility="{Binding Data, Converter={StaticResource BoolToVis}, Source={StaticResource CableViewProxy}}"/>

                                <!--<DataGridTextColumn Header="   Req'd&#x0a;Sz. Amps" x:Name="dteqCableRequiredSizingAmps" 
                                    Binding="{Binding Path=PowerCable.RequiredSizingAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                    HeaderStyle="{StaticResource CableHeaderColumn}" 
                                            Visibility="{Binding Data, Converter={StaticResource BoolToVis}, Source={StaticResource CableViewProxy}}"/>-->


                                <DataGridTextColumn Header=" Cable &#xA;Derating" x:Name="dteqCableDerating" 
                                            Width="*" MinWidth ="60"
                                    Binding="{Binding PowerCable.Derating, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                    HeaderStyle="{StaticResource CableHeaderColumn}" 
                                    Visibility="{Binding Data, Converter={StaticResource BoolToVis}, Source={StaticResource CableViewProxy}}"/>

                                <DataGridTextColumn Header="Derated &#xA;Amps" x:Name="dteqCableDeratedAmps" 
                                            Width="*"  MinWidth ="60"
                                    Binding="{Binding PowerCable.DeratedAmps, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                    HeaderStyle="{StaticResource CableHeaderColumn}" 
                                            Visibility="{Binding Data, Converter={StaticResource BoolToVis}, Source={StaticResource CableViewProxy}}"/>

                                <DataGridTextColumn Header="Req'd&#xA;Amps" x:Name="dteqCableRequiredAmps" 
                                            Width="*" MinWidth ="50"
                                    Binding="{Binding PowerCable.RequiredAmps, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                    HeaderStyle="{StaticResource CableHeaderColumn}" 
                                            Visibility="{Binding Data, Converter={StaticResource BoolToVis}, Source={StaticResource CableViewProxy}}"/>
                            </DataGrid.Columns>

                            <DataGrid.RowDetailsTemplate>
                                <DataTemplate>
                                    <Border BorderThickness="0" Background="Beige" Padding="10">
                                        <Grid Margin="5,0,0,0" MinWidth="650" HorizontalAlignment="Left">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="125"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                        </Grid>
                                    </Border>
                                </DataTemplate>
                            </DataGrid.RowDetailsTemplate>

                            <DataGrid.RowValidationErrorTemplate>
                                <ControlTemplate>
                                    <Grid Margin="5,2,0,0"
                                    ToolTip="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}"
                                    ToolTipService.InitialShowDelay="50">

                                        <!--<Ellipse StrokeThickness="0" Fill="Red" 
                                    Width="{TemplateBinding FontSize}" 
                                    Height="{TemplateBinding FontSize}" />-->
                                        <TextBlock Text="X" FontSize="15" 
                                        FontWeight="UltraBold" Foreground="{StaticResource ErrorColor_Base}" 
                                        HorizontalAlignment="Stretch"  />
                                    </Grid>
                                </ControlTemplate>
                            </DataGrid.RowValidationErrorTemplate>
                        </DataGrid>
                    </controls:ClippingBorder>
                </Grid>

                <!--ADD EQUIPMENT-->
                <ScrollViewer Grid.Row="3" Grid.Column="3" Grid.ColumnSpan="2"
                              Margin="0 0 5 0"
                              VerticalScrollBarVisibility="Auto"
                              HorizontalScrollBarVisibility="Auto"
                              x:Name="gridAdding" >

                    <Border BorderBrush="DarkGray" BorderThickness="0"
                            Margin="0"
                            Padding="0 10 0 0"
                            >
                        <Grid Grid.Row="3"  
                              Grid.Column="3" Grid.ColumnSpan="2" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="10"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="15"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <!--ADD Dteq-->
                            <subViews:AddDteqView Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="20" />

                            <!--ADD Load-->
                            <subViews:AddLoadView Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="20" FedFromVisibility="Visible" Margin="0 0 0 15"/>


                        </Grid>
                    </Border>

                </ScrollViewer>

                <!--LOAD GRID-->
                <Grid Grid.Row="4" Grid.Column="3" Grid.ColumnSpan="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!--Load List Header/Contents-->
                    <TextBlock Margin="10 20 0 0"
                               Grid.Row="0" Grid.Column="0"
                               Width="200"
                               HorizontalAlignment="Left"
                               FontSize="14" 
                               FontWeight="SemiBold">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Text" Value="Load List" />

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding LoadListLoaded}" Value="False">
                                        <Setter Property="Text" Value="{Binding SelectedDteq.Tag, StringFormat=\{0:N0\} Loads}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <!--Column Toggle Buttons-->
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" 
                                Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2"
                                Margin="0 0 50 5">

                        <Button 
                                Width="80" Height="17"
                                Margin="5 0"
                                VerticalAlignment="Bottom"
                                Command="{Binding TogglePowerViewLoadCommand}"
                                >
                            <TextBlock Text="Power Data" Margin="0 -1 0 0"/>
                        </Button>

                        <Button 
                                Width="80" Height="17"
                                Margin="5 0"
                                VerticalAlignment="Bottom"
                                Command="{Binding ToggleOcpdViewLoadCommand}"
                                >
                            <TextBlock Text="OCDP Data" Margin="0 -1 0 0"/>
                        </Button>

                        <Button 
                                Width="80" Height="17"
                                Margin="5 0"
                                VerticalAlignment="Bottom"
                                Command="{Binding ToggleCableViewLoadCommand}"
                                >
                            <TextBlock Text="Cable Data" Margin="0 -1 0 0"/>
                        </Button>
                        <Button 
                                Width="80" Height="17"
                                Margin="5 0"
                                VerticalAlignment="Bottom"
                                Command="{Binding ToggleCompViewLoadCommand}"
                                >
                            <TextBlock Text="Components" Margin="0 -1 0 0"/>
                        </Button>
                    </StackPanel>


                    <!--LOAD DATA GRID-->
                    <controls:ClippingBorder BorderBrush="{StaticResource ControlBorder}" BorderThickness="1"
                                             Grid.Row="1"  Grid.Column="0"
                                             Margin="5">
                        
                        <syncfusion:SfDataGrid x:Name="dgdAssignedLoads"  
                                               
                                ContextMenu="{StaticResource LoadContextMenu}"
                                               
                               Grid.Row="1"  Grid.Column="0"
                               ShowBusyIndicator="True"
                               BorderThickness="0"
                     
                               GridCopyOption="CopyData,IncludeHiddenColumn, IncludeHeaders"
                               GridPasteOption="PasteData, IncludeHiddenColumn, ExcludeFirstLine"
                                               
                               GridPasteContent="LoadGridPaste"
                                               
                               ColumnSizer="Star"
                               
                               ItemsSource="{Binding Path=AssignedLoads, Mode=OneWay, UpdateSourceTrigger=PropertyChanged,IsAsync=True}"

                               SelectedItem="{Binding SelectedLoad, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                               AutoGenerateColumns="False"
                               HorizontalAlignment="Stretch" 
                               
                               d:Height="440"
                               
                               RowHeaderWidth="30"
                               HeaderRowHeight="40"
                               RowHeight="20"
                                             
                                               
                               EditTrigger="OnDoubleTap"
                               Background="White"
                               CurrentCellBorderBrush="{StaticResource Dark}"
                               CurrentCellBorderThickness="1"
                             
                               NavigationMode="Cell"
                               SelectionMode="Extended"
                               FrozenColumnCount="1"
                               
                               AllowEditing="True"
                               AllowSorting="True" 
                               AllowFiltering="False" 
                               AllowTriStateSorting="False"
                               AllowDraggingColumns="True"
                               
                               ShowGroupDropArea="False"
                               AllowResizingColumns="True"
                               FilterRowPosition="FixedTop"
                               
                               SelectionChanged="dgdAssignedLoads_SelectionChanged_1"  
                               PreviewKeyDown="dgdAssignedLoads_PreviewKeyDown_1" PasteGridCellContent="dgdAssignedLoads_PasteGridCellContent"
                               >
                            <syncfusion:SfDataGrid.Resources>
                                <Style TargetType="syncfusion:GridFilterControl">
                                    <Setter Property="FontSize" Value="12" />
                                    <Setter Property="FontWeight" Value="Normal" />
                                    <Setter Property="FilterPopupWidth" Value="250"/>
                                    <Setter Property="FilterPopupHeight" Value="250"/>
                                    <Setter Property="MinWidth" Value="150"/>
                                    <Setter Property="MinHeight" Value="150"/>
                                </Style>
                            </syncfusion:SfDataGrid.Resources>

                            <!--<syncfusion:SfDataGrid.ContextMenu>
                                <ContextMenu>
                                 
                                </ContextMenu>
                            </syncfusion:SfDataGrid.ContextMenu>-->

                            <syncfusion:SfDataGrid.Columns>

                                <!--Line Break code:     &#xA;    -->

                                <!--Validation Icon-->
                                <syncfusion:GridTemplateColumn HeaderText="" MappingName="IsValid"
                                        Width="25"
                                        TextAlignment="Center"
                                        AllowSorting="True" 
                                        AllowEditing="False"
                                        AllowDragging="False"
                                        AllowFiltering="False"
                                        UseBindingValue="True"
                                        ImmediateUpdateColumnFilter="True"
                                        FilterRowOptionsVisibility="Collapsed"
                                        HorizontalHeaderContentAlignment="Center" 
                                         >
                                    <syncfusion:GridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <iconControls:ErrorIcon
                                                Visibility="{Binding IsValid, 
                                                Converter={StaticResource BoolToVisInvert}, 
                                                ConverterParameter=Inverted}"
                                                ToolTipService.InitialShowDelay="250">
                                                <iconControls:ErrorIcon.ToolTip>
                                                    <ToolTip>
                                                        <StackPanel Orientation="Vertical">
                                                            <!--<TextBlock Text="Validation Failures:"/>-->
                                                            <TextBlock Text="{Binding IsInvalidMessage}"
                                                                       TextAlignment="Left"/>
                                                        </StackPanel>
                                                    </ToolTip>
                                                </iconControls:ErrorIcon.ToolTip>
                                            </iconControls:ErrorIcon>
                                        </DataTemplate>
                                    </syncfusion:GridTemplateColumn.CellTemplate>
                                </syncfusion:GridTemplateColumn>

                                <!--Tag-->
                                <syncfusion:GridTextColumn HeaderText="Tag" MappingName="Tag"
                                           Width="75"
                                           TextAlignment="Left"
                                           AllowSorting="True" 
                                           AllowEditing="True"
                                           AllowDragging="True"
                                           AllowFiltering="True"
                                           UseBindingValue="True"
                                           FilterRowCondition="Contains"
                                           ImmediateUpdateColumnFilter="True"
                                           HorizontalHeaderContentAlignment="Center"
                                           
                                           >
                                    <syncfusion:GridTextColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Tag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                   Padding="5 0 0 0"
                                                   FontWeight="SemiBold"/>
                                        </DataTemplate>
                                    </syncfusion:GridTextColumn.CellTemplate>
                                </syncfusion:GridTextColumn>

                                <!--Description-->
                                <syncfusion:GridTextColumn HeaderText="Description" MappingName="Description" 
                                           Width="150"
                                           AllowEditing="True"
                                           AllowSorting="True"
                                           AllowDragging="True"
                                           AllowFiltering="True"
                                           UseBindingValue="True"
                                           FilterRowCondition="Contains"
                                           ImmediateUpdateColumnFilter="True"
                                           HorizontalHeaderContentAlignment="Center"
                                           >
                                <syncfusion:GridTextColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                               Padding="5 0 0 0"/>
                                    </DataTemplate>
                                </syncfusion:GridTextColumn.CellTemplate>
                            </syncfusion:GridTextColumn>

                                <!--Area-->
                                <syncfusion:GridComboBoxColumn HeaderText="Area" MappingName="Area"
                                               Width="75"
                                               AllowEditing="True"
                                               AllowDragging="True"
                                               AllowFiltering="True"
                                               ItemsSource="{Binding Path=DataContext.ListManager.AreaList, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                               DisplayMemberPath="Tag"
                                               UseBindingValue="True"
                                               FilterRowCondition="Contains"
                                               SortMode="Display"
                                               TextAlignment="Left"
                                               ImmediateUpdateColumnFilter="True"
                                               FilterRowOptionsVisibility="Collapsed" IsReadOnly="False"
                                               CellStyle="{StaticResource comboBoxCellStyle}"
                                               >
                                <syncfusion:GridComboBoxColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Area.Tag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                               Padding="5 0 0 0"
                                               TextAlignment="Left"
                                               />
                                    </DataTemplate>
                                </syncfusion:GridComboBoxColumn.CellTemplate>
                                </syncfusion:GridComboBoxColumn>

                                <!--FedFrom-->
                                <syncfusion:GridComboBoxColumn HeaderText="Fed From" MappingName="FedFrom"
                                               Width="85"
                                               AllowEditing="True"
                                               AllowFiltering="True"
                                               ItemsSource="{Binding Path=DataContext.ListManager.IDteqList, 
                                                            RelativeSource={RelativeSource Mode=FindAncestor, 
                                                            AncestorType={x:Type Window}}}"
                                               DisplayMemberPath="Tag"
                                               UseBindingValue="True"
                                               FilterRowCondition="Contains"
                                               SortMode="Display"
                                               TextAlignment="Left"
                                               ImmediateUpdateColumnFilter="True"
                                               FilterRowOptionsVisibility="Collapsed"
                                               CellStyle="{StaticResource comboBoxCellStyle}"
                                               >
                                <syncfusion:GridComboBoxColumn.CellTemplate>
                                    <DataTemplate>
                                        <!--Needs to be FedFromTag because the column display value doesn't update on multichange whent the binding is FedFrom.Tag-->
                                        <TextBlock Text="{Binding FedFromTag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                               TextAlignment="Left"
                                               Padding="5 0 0 0"/>
                                    </DataTemplate>
                                </syncfusion:GridComboBoxColumn.CellTemplate>
                                </syncfusion:GridComboBoxColumn>


                                <!--VoltageType-->
                                <syncfusion:GridComboBoxColumn HeaderText="Voltage" MappingName="VoltageType"
                                               Width="75"
                                               AllowEditing="True"
                                               AllowFiltering="True"
                                               ItemsSource="{Binding Path=DataContext.TypeManager.VoltageTypes, 
                                                                     RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}},Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                               DisplayMemberPath="VoltageString"
                                               UseBindingValue="True"
                                               FilterRowCondition="Contains"
                                               SortMode="Display"
                                               TextAlignment="Left" 
                                               Padding="5 0 0 0"
                                               ImmediateUpdateColumnFilter="True"
                                               FilterRowOptionsVisibility="Collapsed"
                                               CellStyle="{StaticResource comboBoxCellStyle}"
                                              
                                               >
                                    <syncfusion:GridComboBoxColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding VoltageType.VoltageString,
                                                                  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged }"
                                                   TextAlignment="Left"
                                                   Padding="5 0 0 0"
                                                   Background="{Binding Converter={StaticResource VoltageToColorConverter}}"/>
                                        </DataTemplate>
                                    </syncfusion:GridComboBoxColumn.CellTemplate>
                                </syncfusion:GridComboBoxColumn>


                                <!--Size-->
                                <syncfusion:GridTextColumn HeaderText="Size" MappingName="Size"
                                           Width="50"
                                           AllowEditing="True"
                                           AllowFiltering="True"
                                           UseBindingValue="True"
                                           FilterRowCondition="Contains"
                                           ImmediateUpdateColumnFilter="True"
                                           FilterRowOptionsVisibility="Collapsed"
                                           TextAlignment="Right"
                                           />

                                <!--Unit-->
                                <syncfusion:GridTextColumn HeaderText="Unit" MappingName="Unit"
                                           Width="50"
                                           AllowEditing="False"
                                           AllowFiltering="True"
                                           UseBindingValue="True"
                                           FilterRowCondition="Contains"
                                           ImmediateUpdateColumnFilter="True"
                                           FilterRowOptionsVisibility="Collapsed"
                                           />

                                <!--Type-->
                                <syncfusion:GridTextColumn HeaderText="Type" MappingName="Type"
                                           Width="75"
                                           AllowEditing="False"
                                           AllowFiltering="True"
                                           UseBindingValue="True"
                                           FilterRowCondition="Contains"
                                           ImmediateUpdateColumnFilter="True"
                                           FilterRowOptionsVisibility="Collapsed"/>
                                <!--<syncfusion:GridComboBoxColumn HeaderText="Load&#x0a;Type" MappingName="Type"
                                               Width="75"
                                               AllowEditing="False"
                                               AllowFiltering="True"
                                               ItemsSource="{Binding Source={h:EnumBindingSource {x:Type edt:LoadTypes}}}"
                                               
                                               UseBindingValue="True"
                                               FilterRowCondition="Contains"
                                               SortMode="Display"
                                               TextAlignment="Left" 
                                               FilterRowOptionsVisibility="Collapsed"
                                              
                                               CellStyle="{StaticResource comboBoxCellStyle}"
                                               >
                                    <syncfusion:GridComboBoxColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                   TextAlignment="Left"
                                                   Padding="5 0 0 0"/>
                                        </DataTemplate>
                                    </syncfusion:GridComboBoxColumn.CellTemplate>
                                </syncfusion:GridComboBoxColumn>-->


                                <!--Fla-->
                                <syncfusion:GridTextColumn HeaderText="FLA" MappingName="Fla"
                                           Width="50"
                                           AllowEditing="False"
                                           UseBindingValue="True"
                                           FilterRowCondition="Contains"
                                           TextAlignment="Center"
                                           ImmediateUpdateColumnFilter="True"
                                           FilterRowOptionsVisibility="Collapsed"/>


                                <!--<syncfusion:GridTextColumn HeaderText="Running&#x0a;Amps" MappingName="RunningAmps"
                                           Width="60"
                                           AllowEditing="False"
                                           UseBindingValue="True"
                                           FilterRowCondition="Contains"
                                           TextAlignment="Center"/>-->

                                <!--Demand Factor-->
                                <syncfusion:GridTextColumn HeaderText="Demand&#x0a;Factor" MappingName="DemandFactor"
                                           Width="60"
                                           AllowEditing="True"
                                           UseBindingValue="True"
                                           FilterRowCondition="Contains"
                                           ImmediateUpdateColumnFilter="True"
                                           FilterRowOptionsVisibility="Collapsed"
                                           TextAlignment="Center"
                                           IsHidden="{Binding DataContext.LoadGridViewModifier.PowerInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"/>

                                <syncfusion:GridTextColumn HeaderText="Power&#x0a;Factor" MappingName="PowerFactor"
                                           Width="60"
                                           UseBindingValue="True"
                                           FilterRowCondition="LessThanOrEqual"
                                           TextAlignment="Left"
                                           FilterRowOptionsVisibility="Collapsed"
                                           FilterRowEditorType="MultiSelectComboBox"
                                           IsHidden="{Binding DataContext.LoadGridViewModifier.PowerInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"/>

                                
                                <syncfusion:GridTextColumn HeaderText="Efficiency" MappingName="Efficiency"
                                           Width="60"
                                           UseBindingValue="True"
                                           FilterRowCondition="LessThanOrEqual"
                                           TextAlignment="Center"
                                           FilterRowOptionsVisibility="Collapsed"
                                           FilterRowEditorType="MultiSelectComboBox"
                                           IsHidden="{Binding DataContext.LoadGridViewModifier.PowerInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"/>

                               
                                <!--POWER-->

                                <!--Width="40"-->
                                <syncfusion:GridTextColumn HeaderText="Conn&#x0a;kVA" MappingName="ConnectedKva"
                                           MinimumWidth="40"
                                           AllowEditing="False"
                                           UseBindingValue="True"
                                           FilterRowCondition="LessThanOrEqual"
                                           TextAlignment="Center"
                                           FilterRowOptionsVisibility="Collapsed"
                                           IsHidden="{Binding DataContext.LoadGridViewModifier.PowerInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"/>

                                <!--Width="40"-->
                                <syncfusion:GridTextColumn HeaderText="Dem&#x0a;kVA" MappingName="DemandKva"
                                           MinimumWidth="40"
                                           AllowEditing="False"
                                           UseBindingValue="True"
                                           FilterRowEditorType="Numeric"
                                           FilterRowCondition="LessThanOrEqual"
                                           TextAlignment="Center"
                                           FilterRowOptionsVisibility="Collapsed"
                                           
                                           IsHidden="{Binding DataContext.LoadGridViewModifier.PowerInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"
                                           />

                                <!--Width="40"-->
                                <syncfusion:GridTextColumn HeaderText="Dem&#x0a;kW" MappingName="DemandKw"
                                           MinimumWidth="40"
                                           AllowEditing="False"
                                           UseBindingValue="True"
                                           FilterRowCondition="LessThanOrEqual"
                                           TextAlignment="Center"
                                           FilterRowOptionsVisibility="Collapsed"
                                           
                                           IsHidden="{Binding DataContext.LoadGridViewModifier.PowerInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"/>

                                <!--Width="40"-->
                                <syncfusion:GridTextColumn HeaderText="Dem&#x0a;kVAR" MappingName="DemandKvar"
                                           MinimumWidth="40"
                                           AllowEditing="False"
                                           UseBindingValue="True"
                                           FilterRowCondition="LessThanOrEqual"
                                           TextAlignment="Center"
                                           FilterRowOptionsVisibility="Collapsed"
                                           
                                           IsHidden="{Binding DataContext.LoadGridViewModifier.PowerInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"/>

                                <!--PdType-->
                                <syncfusion:GridComboBoxColumn HeaderText="OCPD&#x0a;Type" MappingName="ProtectionDevice.Type"
                                               Width="100"
                                               AllowEditing="True"
                                               AllowFiltering="True"
                                               ItemsSource="{Binding Path=DataContext.TypeManager.OcpdTypes, 
                                                                    RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                    AncestorType={x:Type Window}}}"
                                               
                                               DisplayMemberPath="Type"
                                               SelectedValuePath="Type"
                                               UseBindingValue="True"
                                               FilterRowCondition="LessThanOrEqual"
                                               SortMode="Display"
                                               TextAlignment="Left" 
                                               FilterRowOptionsVisibility="Collapsed"
                                               IsHidden="{Binding DataContext.LoadGridViewModifier.OcpdInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"
                                               CellStyle="{StaticResource comboBoxCellStyle}"
                                               >
                                    <syncfusion:GridComboBoxColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding PdType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                   TextAlignment="Left"
                                                   Padding="5 0 0 0"/>
                                        </DataTemplate>
                                    </syncfusion:GridComboBoxColumn.CellTemplate>
                                </syncfusion:GridComboBoxColumn>

                                <!--Width="60"-->
                                <syncfusion:GridTextColumn HeaderText="PD / MCP&#x0a;Trip" MappingName="ProtectionDevice.TripAmps"
                                           MinimumWidth="60"
                                           AllowEditing="False"
                                           UseBindingValue="True"
                                           FilterRowCondition="LessThanOrEqual"
                                           TextAlignment="Center"
                                           FilterRowOptionsVisibility="Collapsed"
                                           
                                           IsHidden="{Binding DataContext.LoadGridViewModifier.OcpdInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"/>

                                <!--Width="60"-->
                                <syncfusion:GridTextColumn HeaderText="PD / MCP&#x0a;Frame" MappingName="ProtectionDevice.FrameAmps"
                                           MinimumWidth="60"
                                           AllowEditing="False"
                                           UseBindingValue="True"
                                           FilterRowCondition="LessThanOrEqual"
                                           TextAlignment="Center"
                                           FilterRowOptionsVisibility="Collapsed"
                                           
                                           IsHidden="{Binding DataContext.LoadGridViewModifier.OcpdInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"/>

                                <!--Width="60"-->
                                <syncfusion:GridTextColumn HeaderText="Starter&#x0a;Size" MappingName="ProtectionDevice.StarterSize"
                                           MinimumWidth="60"
                                           AllowEditing="False"
                                           UseBindingValue="True"
                                           FilterRowCondition="Contains"
                                           TextAlignment="Center"
                                           ImmediateUpdateColumnFilter="True"
                                           FilterRowOptionsVisibility="Collapsed"
                                           CellStyleSelector="{StaticResource NonMotorLoadVisibilityStyleSelector}"
                                           IsHidden="{Binding DataContext.LoadGridViewModifier.OcpdInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"
                                           />

                                <!--COMPONENTS-->

                                <!--Comp CheckBoxes-->
                                <!--These checkboxes are single click but have had some rendering issues-->
                                <syncfusion:GridCheckBoxColumn HeaderText="Local&#x0a;Disc." MappingName="DisconnectBool" 
                                               Width="45"
                                               UseBindingValue="True"
                                               AllowEditing="True"
                                               FilterRowCondition="Equals"
                                               IsHidden="{Binding DataContext.LoadGridViewModifier.CompInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"
                                               FilterRowEditorType="MultiSelectComboBox"
                                               
                                               />

                                <syncfusion:GridCheckBoxColumn HeaderText="Drive" MappingName="StandAloneStarterBool" 
                                               Width="45"
                                               AllowEditing="True"
                                               UseBindingValue="True"
                                               FilterRowCondition="Equals"
                                               IsHidden="{Binding DataContext.LoadGridViewModifier.CompInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"
                                               CellStyleSelector="{StaticResource NonMotorLoadVisibilityStyleSelector}"
                                               FilterRowEditorType="MultiSelectComboBox"
                                               />


                               <syncfusion:GridCheckBoxColumn HeaderText="LCS" MappingName="LcsBool" 
                                               Width="45"
                                               AllowEditing="True"
                                               UseBindingValue="True"
                                               IsHidden="{Binding DataContext.LoadGridViewModifier.CompInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"
                                               CellStyleSelector="{StaticResource NonMotorLoadVisibilityStyleSelector}"
                                               FilterRowEditorType="MultiSelectComboBox"
                                               />

                                <!--Comp Tags-->
                                <!--Width="100"-->
                                <syncfusion:GridTextColumn HeaderText="Local&#x0a;Disc. Tag" MappingName="Disconnect.Tag"
                                           MinimumWidth="100"
                                           AllowEditing="True"
                                           AllowFiltering="True"
                                           UseBindingValue="True"
                                           FilterRowCondition="Contains"
                                           ImmediateUpdateColumnFilter="True"
                                           IsHidden="{Binding DataContext.LoadGridViewModifier.CompInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"/>

                                <!--Width="100"-->
                                <syncfusion:GridTextColumn HeaderText="Drive/Starter&#x0a;Tag" MappingName="StandAloneStarter.Tag"
                                           MinimumWidth="100"
                                           AllowEditing="True"
                                           AllowFiltering="True"
                                           UseBindingValue="True"
                                           FilterRowCondition="Contains"
                                           ImmediateUpdateColumnFilter="True"
                                           IsHidden="{Binding DataContext.LoadGridViewModifier.CompInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"/>

                                <!--Width="100"-->
                                <syncfusion:GridTextColumn HeaderText="Lcs&#x0a;Tag" MappingName="Lcs.Tag"
                                           MinimumWidth="100"
                                           AllowEditing="True"
                                           AllowFiltering="True"
                                           UseBindingValue="True"
                                           FilterRowCondition="Contains"
                                           ImmediateUpdateColumnFilter="True"
                                           IsHidden="{Binding DataContext.LoadGridViewModifier.CompInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}" />



                            </syncfusion:SfDataGrid.Columns>

                        </syncfusion:SfDataGrid>
                    </controls:ClippingBorder>
                </Grid>


                <!--Property Pane-->
                <Expander x:Name="propertyGridExpander"
                          Grid.Row="2"
                          Grid.Column="5"
                          IsExpanded="True"
                          Margin="0"
                          Width="25"
                          Height="25"
                          VerticalAlignment="Top"
                          HorizontalAlignment="Right"
                          ExpandDirection="Left"
                          />
                <Grid Grid.Row="2" Grid.RowSpan="3"
                      Grid.Column="5"
                      Visibility="{Binding ElementName=propertyGridExpander, Path=IsExpanded, 
                                           Converter={StaticResource BoolToVisInvert},
                                           ConverterParameter=Normal}"
                   >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <TextBlock Text="Selected Item Details"
                           Grid.Row="2"         
                           VerticalAlignment="Bottom"
                           Margin="10 0 0 5"
                           Visibility="Visible"/>

                    <Border Grid.Row="1"
                        BorderThickness="1" BorderBrush="Black" Background="{StaticResource BackgroundLight}"
                        Margin="0 0 0 1">
                        <ContentControl x:Name="LoadDetailsContent" 
                                        Content="{Binding}">
                            <ContentControl.Resources>
                                <DataTemplate DataType="{x:Type electricalViewModels:MjeqViewModel}">
                                    <mjeqSubViews:LoadTabsView DataContext="{Binding}"/>
                                </DataTemplate>
                            </ContentControl.Resources>
                        </ContentControl>
                    </Border>
                </Grid>

                <GridSplitter Grid.Column="4" HorizontalAlignment="Center" VerticalAlignment="Stretch"   
                              Grid.Row="0" Grid.RowSpan="6"
                              Background="Transparent"
                              Width="{StaticResource GridSplitterWidth}" 
                              />


                <!--Below Dteq Grid-->
                <GridSplitter  Grid.Row="2" Grid.ColumnSpan="5" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"   
                           Height="{StaticResource GridSplitterWidth}"
                           Background="{StaticResource GridSplitterColor}"
                           ShowsPreview="False"/>

                <!--Above Load Grid-->
                <GridSplitter  Grid.Row="3" Grid.ColumnSpan="10"  HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
                           Height="{StaticResource GridSplitterWidth}" Background="{StaticResource GridSplitterColor}"
                           Visibility="Collapsed"/>

                <!--Visibility="{Binding ElectricalViewGridSplitterVisibility}"/>-->

                <!--Above Status Strip-->
                <!--<GridSplitter  Grid.Row="4" Grid.ColumnSpan="10" Panel.ZIndex="2" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
                           Height="{StaticResource GridSplitterWidth}" Background="{StaticResource GridSplitterColor}"
                           Visibility="{Binding ElectricalViewGridSplitterVisibility}"/>-->
            </Grid>



        </Grid>
    </DockPanel>

</UserControl>
