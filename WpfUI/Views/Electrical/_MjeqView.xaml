<UserControl x:Class="WpfUI.Views.Electrical._MjeqView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             
             xmlns:local="clr-namespace:WpfUI.Views"
             xmlns:root="clr-namespace:WpfUI"
             
             xmlns:rules="clr-namespace:WpfUI.ValidationRules"
             xmlns:converters="clr-namespace:WpfUI.Converters"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
              
             xmlns:h="clr-namespace:WpfUI.Helpers"
             xmlns:commands="clr-namespace:WpfUI.Commands"
             xmlns:viewModifiers="clr-namespace:WpfUI.ViewModifiers"
             xmlns:views="clr-namespace:WpfUI.Views"
             xmlns:subViews="clr-namespace:WpfUI.Views.EquipmentSubViews"
             
             xmlns:edt="clr-namespace:EDTLibrary;assembly=EDTLibrary"
             xmlns:edtDteqModels="clr-namespace:EDTLibrary.Models.DistributionEquipment;assembly=EDTLibrary"
             xmlns:edtLoadModels="clr-namespace:EDTLibrary.Models.Loads;assembly=EDTLibrary"
              
             xmlns:sf="http://schemas.syncfusion.com/wpf"
             xmlns:styleSelectors="clr-namespace:WpfUI.SyncFusion.StyleSelectors"
             
             x:Name="eqView"
              
             mc:Ignorable="d"
             d:Width="1500" d:Height="1000"
             Background="#FFDAEEF1" 
             PreviewKeyDown="eqView_PreviewKeyDown" Unloaded="eqView_Unloaded" MouseLeave="eqView_MouseLeave" Loaded="eqView_Loaded" 
             >

    <!--#FFDAEEF1-->


    <UserControl.Resources>
        <!--Background="#FFBDCCCA">-->

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../Styles/EdtStyle_Teal.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <styleSelectors:NonMotorLoadVisibilityStyleSelector x:Key="NonMotorLoadVisibilityStyleSelector"/>


            <viewModifiers:BindingProxy x:Key="AreaViewProxy" Data="{Binding AreaColumnVisible}" />


            <BooleanToVisibilityConverter x:Key="BoolToVis"/>

            <!--For quick filtering of DteqGrid-->
            <CollectionViewSource x:Key="cvsIdteq" Source="{Binding ListManager.IDteqList}"
                                  Filter="cvsIdteq_Filter"/>

            <!--For FedFrom Comboboxes-->
            <CollectionViewSource x:Key="dteqList" Source="{Binding ListManager.DteqList}"/>


            <Style x:Key="ColumnElementStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="Margin" Value="10,0,10,0" />
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>


    <!--TOP-->
    <Grid Background="{StaticResource PageBackground}">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <!--Page Title-->
        <TextBlock Text="Major Equipment"
                       Grid.Row="0"
                       Grid.RowSpan="2"
                       Style="{StaticResource PageTitleStyle}"/>



        <!--Main Grid-->
        <Grid Grid.Row="2"
              x:Name="elecGrid"
              d:Opacity="1"
              Opacity="0.0"  Grid.IsSharedSizeScope="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="486*"/>
                <ColumnDefinition Width="1309*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="{Binding DteqGridBottom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" d:Height="300" MinHeight="300"/>
                <RowDefinition Height="{Binding LoadGridTop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" d:Height="125" />
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.Triggers>
                <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="elecGrid"
                                             BeginTime="0:0:0"
                                From="0.0" To="1" Duration="0:0:0.3"
                                             AccelerationRatio="1"
                                AutoReverse="False" RepeatBehavior="1x"/>

                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Grid.Triggers>



            <!--Dteq View Buttons-->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left"
                        Grid.Row="1" Grid.Column="3" Grid.ColumnSpan="2"
                        Height="20" Width="300"
                        Margin="200 5"
                        >

                <!--<Button Content="Load All"
                        Command="{Binding GetAllCommand}"/>

                <Button Content="Row Details"
                        Width="80" Height="20"
                        Margin="5 0"
                        Command="{Binding Path=ToggleRowDetailViewCommand}"
                        />

                <Button Content="Loading Data"
                        Width="80" Height="20"
                        Margin="5 0"
                        Command="{Binding Path=ToggleLoadingViewDteqCommand}"
                        />

                <Button Content="OCDP Data"
                        Width="80" Height="20"
                        Margin="5 0"
                        Command="{Binding Path=ToggleOcpdViewDteqCommand}"
                        />

                <Button Content="Cable Data"
                        Width="80" Height="20"
                        Margin="5 0"
                        Command="{Binding Path=ToggleCableViewDteqCommand}"
                        />-->
            </StackPanel>

            <!--MENU BUTTONS-->


            <!--Load VIEW Buttons-->

            <!--DTEQ-->


            <!--LOADS-->
            <!--Grid-->
            <!--Dteq-->
            <Grid  x:Name="dteqButtonsStackPanel"
                   Grid.Column="1" Grid.Row="2"
                   Margin=" 0 50 0 0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <StackPanel Orientation="Vertical"
                        Grid.Row="0"
                        Margin="0,0,0,0">

                    <Button Content="Load All"
                        Command="{Binding GetAllCommand}"/>

                    <Button Content="Save All"
                        Command="{Binding SaveAllCommand}"/>

                    <Button Content="AutoSize Cables"
                        Command="{Binding SizeCablesCommand}"/>

                    <!--<Button Content="Calc. Cable Amps" Name ="btnCalcCableAmps" 
                        Command="{Binding CalculateAllCableAmpsCommand}"/>-->

                    <Button Content="Delete Selected"
                        Style="{StaticResource RedButton}"
                        Command="{Binding DeleteDteqCommand}"
                        CommandParameter="{Binding SelectedDteq}" />
                </StackPanel>

                <Button x:Name ="btnAddEquipmentPanelView" Content="Add Equipment" 
                        Grid.Row="1"
                        VerticalAlignment="Bottom"
                        Margin="0 0 0 20"                         
                        PreviewMouseLeftButtonDown="AddEquipmentPanelViewToggle_PreviewMouseLeftButtonDown"/>
            </Grid>

            <!--ADD Buttons-->
            <StackPanel Orientation="Vertical"
                        Grid.Column="1" Grid.Row="3"
                        Margin="0,10,0,0">

                <Button Content="Add Dist. Eq." Height="25" Width="100"
                        x:Name="btnAddDteq"
                        Style="{StaticResource GreenButton}"
                        Command="{Binding AddDteqCommand}"
                        CommandParameter="{Binding DteqToAddValidator}"
                        Margin="10,13,10,15" PreviewMouseLeftButtonDown="btnAddDteq_PreviewMouseLeftButtonDown" MouseLeave="btnAddDteq_MouseLeave" 
                        Visibility="Visible" IsDefault="True"
                         />

                <Button Content="Add Load"  Height="25" Width="100"
                        x:Name="btnAddLoad"
                        Style="{StaticResource GreenButton}"
                        Command="{Binding AddLoadCommand}"
                        CommandParameter="{Binding LoadToAddValidator}"
                        Margin="10,21,10,10" 
                        Visibility="Visible" PreviewMouseLeftButtonDown="btnAddLoad_PreviewMouseLeftButtonDown" MouseLeave="btnAddLoad_MouseLeave" 
                        />

            </StackPanel>

            <!--Load-->

            <StackPanel Orientation="Vertical" 
                        x:Name="loadButtonsStackPanel"
                        Grid.Column="1" Grid.Row="4"
                        Margin="0,75,0,50">



                <Button x:Name ="btnLoadList" Content="Load List" Height="25" Width="100"
                        Command="{Binding GetLoadListCommand}"/>

                <Button x:Name ="btnCalculateSelectedLoad" Content="Calculate" Height="25" Width="100"
                        Command="{Binding CalculateLoad}"/>

                <!--<Button x:Name ="btnSaveLoadList" Content="Save Load List" Height="25" Width="100"
                        Command="{Binding SaveLoadListCommand}"/>-->

                <Button x:Name ="btnDeleteLoad" Content="Delete Selected" Height="25" Width="100"
                        Style="{StaticResource RedButton}"
                        Command="{Binding DeleteLoadCommand}" 
                        CommandParameter="{Binding SelectedLoad}" />


                <Button x:Name ="btnCalculate" Content="Calculate All"  Height="25" Width="100"
                        Command="{Binding CalculateAllCommand}"
                        FontWeight="Bold"
                        Margin="0 50 0 0"/>


            </StackPanel>


            <!--GRID-->
            <Grid Grid.Row="2" Grid.Column="3" Grid.ColumnSpan="2"
                  >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto" MinWidth="550" SharedSizeGroup="A"/>
                    <!--Details Column-->
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*" x:Name="dteqGridRow"/>
                </Grid.RowDefinitions>

                <!--Title-->
                <TextBlock Text="Distribution Equipment"
                            Grid.Row="0" Grid.Column="0"
                               Margin="10 5 0 0"
                               Width="200"
                               HorizontalAlignment="Left"
                               FontSize="14" 
                               FontWeight="SemiBold"/>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" 
                            Grid.Row="0" Grid.Column="1"
                            Grid.ColumnSpan="2">


                    <!--<Button 
                            Width="80" Height="17"
                            Margin="5 0"
                            VerticalAlignment="Bottom"
                            Command="{Binding Path=ToggleRowDetailViewCommand}"
                            >
                        <TextBlock Text="Row Details" Margin="0 -1 0 0"/>
                    </Button>-->

                    <Button 
                            Width="80" Height="17"
                            Margin="5 0"
                            VerticalAlignment="Bottom"
                            Command="{Binding TogglePowerViewDteqCommand}"
                            >
                        <TextBlock Text="Power Data" Margin="0 -1 0 0"/>
                    </Button>

                    <Button 
                            Width="80" Height="17"
                            Margin="5 0"
                            VerticalAlignment="Bottom"
                            Command="{Binding ToggleOcpdViewDteqCommand}"
                            >
                        <TextBlock Text="OCDP Data" Margin="0 -1 0 0"/>
                    </Button>

                    <Button 
                            Width="80" Height="17"
                            Margin="5 0"
                            VerticalAlignment="Bottom"
                            Command="{Binding ToggleCableViewDteqCommand}"
                            >
                        <TextBlock Text="Cable Data" Margin="0 -1 0 0"/>
                    </Button>
                </StackPanel>

                <!--DETAILS VIEW-->
                <!--Dteq-->
                <TextBlock Text="Distribution Equipment Details" 
                           Grid.Row="0" Grid.Column="3" 
                           VerticalAlignment="Bottom"
                           Margin="10,0,0,0"/>
                <Border BorderThickness="1 1 1 1" BorderBrush="Black" Background="Transparent"
                        Grid.Row="1" Grid.Column="3" Margin="5">
                    <ContentControl x:Name="DteqDetailsContent"
                                    Grid.Row="1" Grid.Column="3"/>
                </Border>

                <GridSplitter Grid.Column="2" HorizontalAlignment="Center"   
                              Width="3" Background="AliceBlue"
                              Margin="2 0" Grid.Row="0" Grid.RowSpan="2"
                              Visibility="{Binding ElectricalViewGridSplitterVisibility}"/>


                <!--ItemsSource="{Binding Source={StaticResource cvsIdteq}}"-->

                <!--DTEQ-->
                <!--DATA GRID-->

                <!--Grid height is adjusted in the View.cs file by the method btnGrdSplitAdjust_PreviewMouseLeftButtonDown-->
                <DataGrid x:Name="dgdDteq" 
                          Grid.Column="0"
                          SelectedItem="{Binding SelectedDteq, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          
                          ItemsSource="{Binding DteqCollectionView}"
                          IsSynchronizedWithCurrentItem="True"
                          FrozenColumnCount="1"
                          Margin="5,5,5 5"
                          
                          RowHeaderWidth="0"
                          
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top"
                          d:Height="250"
                          Height="{Binding DteqGridHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          AutoGenerateColumns="False"
                          EnableRowVirtualization="True"
                          EnableColumnVirtualization="True"
                          ScrollViewer.CanContentScroll="True"
                          VirtualizingPanel.IsVirtualizing="True"
                          SelectionChanged="dgdDteq_SelectionChanged"
                          VirtualizingPanel.VirtualizationMode="Recycling"
                          RowDetailsVisibilityMode="{Binding ToggleRowDetailViewProp}" Grid.ColumnSpan="2" Grid.Row="1" MouseLeave="dgdDteq_MouseLeave" >
                    <!--ItemsSource="{Binding DteqList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"-->

                    <DataGrid.Resources>
                        <Style x:Key="errorStyle" TargetType="{x:Type TextBlock}">
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="ToolTipService.InitialShowDelay" Value="100"/>
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="True">
                                    <Setter Property="Background" Value="{StaticResource ErrorColor_Base}"/>
                                    <Setter Property="Foreground" Value="{StaticResource ErrorColor_Base}"/>
                                    <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>

                        <viewModifiers:BindingProxy x:Key="PowerViewProxy" Data="{Binding DteqGridViewModifier.Power}" />
                        <viewModifiers:BindingProxy x:Key="OcpdViewProxy" Data="{Binding DteqGridViewModifier.Ocpd}" />
                        <viewModifiers:BindingProxy x:Key="CableViewProxy" Data="{Binding DteqGridViewModifier.Cable}" />
                    </DataGrid.Resources>

                    <DataGrid.Columns>
                        <!--Basic-->
                        <!--Textblock cell padding style in this.resources Move to ResDict-->

                        <!--LOADING-->


                        <!--POWER-->
                        <!--Tag-->
                        <DataGridTextColumn x:Name="dteqTag"
                                            MinWidth="75"
                                            Binding="{Binding Tag, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                            ElementStyle="{StaticResource ColumnElementStyle}"
                                            HeaderStyle="{StaticResource DataGridColumnHeaderWithFilterBase}">

                            <DataGridTextColumn.Header>

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="Tag" 
                                                    Grid.Row="0" Grid.ColumnSpan="2"
                                                    VerticalAlignment="Center" HorizontalAlignment="Center" Padding="5 2 5 2"/>
                                    <!--Text="{Binding Filter}"-->

                                    <!--<Button Style="{StaticResource FilterButton}"/>-->
                                    <TextBox x:Name="txtDteqTagFilter" 
                                             Style="{StaticResource FilterTextBoxBase}"
                                             PreviewKeyDown="DteqGridFilter" />

                                </Grid>
                            </DataGridTextColumn.Header>

                        </DataGridTextColumn>

                        <!--Description-->
                        <DataGridTextColumn x:Name="dteqDescription"
                                            MinWidth="150"
                                            Binding="{Binding Description, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                            HeaderStyle="{StaticResource DataGridColumnHeaderWithFilterBase}">

                            <DataGridTextColumn.Header>

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="Description" 
                                                    Grid.Row="0" Grid.ColumnSpan="2"
                                                    VerticalAlignment="Center" HorizontalAlignment="Center" Padding="5 2 5 2"/>
                                    <!--Text="{Binding Filter}"-->


                                    <!--<Button Style="{StaticResource FilterButton}"/>-->
                                    <TextBox x:Name="txtDteqDescriptionFilter" 
                                             Style="{StaticResource FilterTextBoxBase}"
                                             PreviewKeyDown="DteqGridFilter" />


                                </Grid>
                            </DataGridTextColumn.Header>
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                    <Setter Property="Margin" Value="5 0"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                            <DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="{x:Type TextBox}">
                                    <Setter Property="TextAlignment" Value="Left" />
                                    <Setter Property="BorderThickness" Value="0"/>
                                </Style>
                            </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>

                        <!--Area-->
                        <DataGridTemplateColumn x:Name="dteqArea"
                                                Width="75"
                                                SortMemberPath="Area.Tag"
                                                HeaderStyle="{StaticResource DataGridColumnHeaderWithFilterBase}"
                                         Visibility="{Binding Data, Converter={StaticResource BoolToVis}, Source={StaticResource AreaViewProxy}}"
                                                >
                            <DataGridTemplateColumn.Header>

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="Area" 
                                               Grid.Row="0" Grid.ColumnSpan="2"
                                               VerticalAlignment="Center" HorizontalAlignment="Center" Padding="5 2 5 2"/>
                                    <!--Text="{Binding Filter}"-->

                                    <!--<Button Style="{StaticResource FilterButton}"/>-->
                                    <TextBox x:Name="txtDteqAreaFilter" 
                                             Style="{StaticResource FilterTextBoxBase}"
                                             PreviewKeyDown="DteqGridFilter" />

                                </Grid>
                            </DataGridTemplateColumn.Header>

                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Area.Tag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                               MouseLeftButtonDown="FastEditEvent" />


                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <ComboBox ItemsSource="{Binding DataContext.ListManager.AreaList, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type UserControl}, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged}"
                                              SelectedItem="{Binding Area, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              DisplayMemberPath="Tag"
                                              Text="{Binding Area.Tag}"
                                              HorizontalContentAlignment="Left"
                                              IsEditable="False" IsTextSearchEnabled="True"
                                              IsSynchronizedWithCurrentItem="False"                                             
                                              BorderThickness="0"
                                              Template="{DynamicResource ComboBoxBase}"
                                              >
                                        <!--IsDropDownOpen="True"-->

                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="auto"/>
                                                        <ColumnDefinition Width="auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Grid.Column="0" Text="{Binding Tag}" HorizontalAlignment="Left" TextAlignment="Left" Width="35" Margin="10 0"/>
                                                    <TextBlock Grid.Column="1" Text="{Binding Name}" />
                                                </Grid>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>

                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <!--Fed From Model-->
                        <DataGridTemplateColumn x:Name="dteqFedFrom" MinWidth="75"
                                                SortMemberPath="FedFrom.Tag"
                                                HeaderStyle="{StaticResource DataGridColumnHeaderWithFilterBase}">
                            <DataGridTemplateColumn.Header>

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="Fed From" 
                                               Grid.Row="0" Grid.ColumnSpan="2"
                                               VerticalAlignment="Center" HorizontalAlignment="Center" Padding="5 2 5 2"/>
                                    <!--Text="{Binding Filter}"-->

                                    <!--<Button Style="{StaticResource FilterButton}"/>-->
                                    <TextBox x:Name="txtDteqFedFromFilter" 
                                             Style="{StaticResource FilterTextBoxBase}"
                                             PreviewKeyDown="DteqGridFilter" />

                                </Grid>
                            </DataGridTemplateColumn.Header>

                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding FedFrom.Tag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                               MouseLeftButtonDown="FastEditEvent">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding FedFrom.Tag}" Value="* Deleted *">
                                                        <Setter Property="Foreground"  Value="{StaticResource ErrorColor_Base}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>

                                    <!-- CAUSES Disapearing when inside "Text" : UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True-->

                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <ComboBox ItemsSource="{Binding DataContext.ListManager.DteqList, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type UserControl}, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged}"
                                              SelectedItem="{Binding FedFrom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              DisplayMemberPath="Tag"
                                              HorizontalContentAlignment="Center"
                                              IsEditable="False" IsTextSearchEnabled="False" IsReadOnly="True" TextSearch.Text=""
                                              IsSynchronizedWithCurrentItem="False"
                                              BorderThickness="0"
                                              Template="{DynamicResource ComboBoxBase}"
                                              />
                                    <!--IsDropDownOpen="True"-->
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <!--Line Voltage-->
                        <DataGridTemplateColumn  Header=" Line &#xA; Voltage "
                                                 SortMemberPath="LineVoltage">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding LineVoltage, Mode=TwoWay, StringFormat=\{0:N0\} V, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                               MouseLeftButtonDown="FastEditEvent"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>

                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <ComboBox ItemsSource="{Binding DataContext.TypeManager.VoltageTypes, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged}"
                                              SelectedValue="{Binding LineVoltage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              DisplayMemberPath="Voltage"
                                              SelectedValuePath="Voltage"
                                              HorizontalContentAlignment="Center"
                                              IsEditable="False" IsTextSearchEnabled="True"
                                              IsSynchronizedWithCurrentItem="False"
                                              BorderThickness="0"
                                              
                                              Template="{DynamicResource ComboBoxBase}"
                                              
                                              />
                                    <!--IsDropDownOpen="True"-->
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <!--Line Voltage Type-->
                        <DataGridTemplateColumn  Header=" Line &#xA; Voltage "
                                                 SortMemberPath="LineVoltage">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding LineVoltageType.VoltageString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                               TextAlignment="Left"
                                               Padding="5 0"
                                               MouseLeftButtonDown="FastEditEvent"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>

                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <ComboBox ItemsSource="{Binding DataContext.TypeManager.VoltageTypes, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged}"
                                              SelectedItem="{Binding LineVoltageType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              DisplayMemberPath="VoltageString"
                                              HorizontalContentAlignment="Left"
                                              IsEditable="False" IsTextSearchEnabled="True"
                                              IsSynchronizedWithCurrentItem="False"
                                              BorderThickness="0"
                                              Padding="5 0 0 0"
                                              Template="{DynamicResource ComboBoxBase}"
                                              
                                              />
                                    <!--IsDropDownOpen="True"-->
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <!--Load Voltage-->
                        <DataGridTemplateColumn Header=" Load &#xA; Voltage " 
                                                SortMemberPath="LoadVoltage">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding LoadVoltage, Mode=TwoWay, StringFormat=\{0:N0\} V, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                               MouseLeftButtonDown="FastEditEvent"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>

                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <ComboBox ItemsSource="{Binding DataContext.TypeManager.VoltageTypes, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"
                                              SelectedValue="{Binding LoadVoltage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              DisplayMemberPath="Voltage"
                                              SelectedValuePath="Voltage"
                                              HorizontalContentAlignment="Center"
                                              IsEditable="False" IsTextSearchEnabled="True"
                                              IsSynchronizedWithCurrentItem="False"
                                              BorderThickness="0"
                                              Template="{DynamicResource ComboBoxBase}"
                                              />
                                    <!--IsDropDownOpen="True"-->
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <!--Load Voltage Type-->
                        <DataGridTemplateColumn Header=" Load &#xA; Voltage "
                                                SortMemberPath="LoadVoltage">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding LoadVoltageType.VoltageString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                               TextAlignment="Left"
                                               Padding="5 0 0 0"
                                               MouseLeftButtonDown="FastEditEvent"
                                               />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>

                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <ComboBox ItemsSource="{Binding DataContext.TypeManager.VoltageTypes, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"
                                              SelectedItem="{Binding LoadVoltageType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              DisplayMemberPath="VoltageString"
                                              HorizontalContentAlignment="Left"
                                              IsEditable="False" IsTextSearchEnabled="True"
                                              IsSynchronizedWithCurrentItem="False"
                                              BorderThickness="0"
                                              Padding="5 0 0 0"
                                              Template="{DynamicResource ComboBoxBase}"
                                              />
                                    <!--IsDropDownOpen="True"-->
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <!--Size-->
                        <DataGridTextColumn Header="Size" x:Name="dteqSize"
                                MinWidth="50"
                                Binding="{Binding Size, Mode=TwoWay, NotifyOnSourceUpdated=True, StringFormat=\{0:N0\}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                    <Setter Property="Margin" Value="5 0"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <!--Unit-->
                        <DataGridTextColumn Header="Unit"
                                            MinWidth="40"
                                            IsReadOnly="True"
                                            TextBlock.TextAlignment="Left"
                                            Binding="{Binding Unit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                    <Setter Property="Margin" Value="5 0"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <!--Type-->
                        <DataGridTextColumn Header="EQ Type" x:Name="dteqType"
                                            MinWidth="75"
                                            Binding="{Binding Type, ValidatesOnDataErrors=True}"
                                            IsReadOnly="True">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                    <Setter Property="Margin" Value="5 0"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <!--Percent Loaded-->
                        <DataGridTemplateColumn Header=" Percent &#xA;Loaded"
                                x:Name="dteqPercentLoaded"
                                MinWidth="35"
                                MaxWidth="55"
                                IsReadOnly="True">

                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <TextBlock Text="{Binding PercentLoaded, Mode=TwoWay, NotifyOnSourceUpdated=True, StringFormat=\{0:N0\}  %, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                   Background="{Binding PercentLoaded, Converter={StaticResource PercentLoadedToColor}}"
                                                   Height="20" Width="75"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Stretch"
                                                   TextAlignment="Center"
                                                   Margin="0"
                                                   Padding="0 2 0 0"/>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--Running Amps-->
                        <DataGridTextColumn Header=" Running &#xA;Amps" x:Name="dteqRunningAmps"
                                Binding="{Binding RunningAmps, Mode=TwoWay, NotifyOnSourceUpdated=True, StringFormat=\{0:N0\}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                IsReadOnly="True"/>

                        <!--FLA-->
                        <DataGridTextColumn Header=" FLA / Max &#xA;Amps" x:Name="dteqFla" 
                                MinWidth="40"
                                Binding="{Binding Fla, Mode=TwoWay, NotifyOnSourceUpdated=True, StringFormat=\{0:N0\}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                IsReadOnly="True"/>


                        <!--Power Factor-->
                        <DataGridTextColumn Header=" PF " x:Name="dteqPowerFactor" 
                                        Width="40"
                                        Binding="{Binding PowerFactor, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        IsReadOnly="True"
                                        Visibility="{Binding Data, Converter={StaticResource BoolToVis}, Source={StaticResource PowerViewProxy}}"/>

                        <DataGridTextColumn Header=" Conn &#xA; kVA " x:Name="dteqConnectedKva"
                                Binding="{Binding ConnectedKva, Mode=TwoWay, NotifyOnSourceUpdated=True, StringFormat=\{0:N0\}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                IsReadOnly="True"
                                Visibility="{Binding Data, Converter={StaticResource BoolToVis}, Source={StaticResource PowerViewProxy}}"/>

                        <DataGridTextColumn Header=" Dem &#xA; kVA " x:Name="dteqDemandKva"
                                Binding="{Binding DemandKva, Mode=TwoWay, NotifyOnSourceUpdated=True, StringFormat=\{0:N0\}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                IsReadOnly="True"
                                Visibility="{Binding Data, Converter={StaticResource BoolToVis}, Source={StaticResource PowerViewProxy}}"/>

                        <DataGridTextColumn Header=" Dem &#xA; kW " x:Name="dteqDemandKw" 
                                Binding="{Binding DemandKw, Mode=TwoWay, NotifyOnSourceUpdated=True, StringFormat=\{0:N0\}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                IsReadOnly="True"
                                Visibility="{Binding Data, Converter={StaticResource BoolToVis}, Source={StaticResource PowerViewProxy}}"/>

                        <DataGridTextColumn Header=" Dem &#xA; kVAR " x:Name="dteqDemandKvar" 
                                Binding="{Binding DemandKvar, Mode=TwoWay, NotifyOnSourceUpdated=True, StringFormat=\{0:N0\}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                IsReadOnly="True"
                                Visibility="{Binding Data, Converter={StaticResource BoolToVis}, Source={StaticResource PowerViewProxy}}"/>

                        <!--OCPD-->
                        <DataGridTextColumn Header=" OCPD &#xA; Type "
                                Binding="{Binding PdType, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource OcpdColumnHeader}" 
                                Visibility="{Binding Data, Converter={StaticResource BoolToVis}, Source={StaticResource OcpdViewProxy}}"/>

                        <DataGridTextColumn Header=" OCPD &#xA; Trip "
                                Binding="{Binding PdSizeTrip, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource OcpdColumnHeader}" 
                                Visibility="{Binding Data, Converter={StaticResource BoolToVis}, Source={StaticResource OcpdViewProxy}}"/>

                        <DataGridTextColumn Header=" OCPD &#xA; Frame "
                                Binding="{Binding PdSizeFrame, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource OcpdColumnHeader}" 
                                Visibility="{Binding Data, Converter={StaticResource BoolToVis}, Source={StaticResource OcpdViewProxy}}"/>


                        <!--CABLE-->
                        <DataGridTextColumn Header=" Cable &#xA; Qty " x:Name="dteqCableQty"
                                Binding="{Binding PowerCable.QtyParallel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource CableHeaderColumn}" 
                                Visibility="{Binding Data, Converter={StaticResource BoolToVis}, Source={StaticResource CableViewProxy}}"/>

                        <DataGridTextColumn Header=" Cable &#xA; Size " x:Name="dteqCableSize" 
                                Binding="{Binding PowerCable.Size, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource CableHeaderColumn}" 
                                Visibility="{Binding Data, Converter={StaticResource BoolToVis}, Source={StaticResource CableViewProxy}}"/>

                        <DataGridTextColumn Header=" Base &#xA; Amps " x:Name="dteqCableBaseAmps" 
                                Binding="{Binding PowerCable.BaseAmps, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource CableHeaderColumn}" 
                                Visibility="{Binding Data, Converter={StaticResource BoolToVis}, Source={StaticResource CableViewProxy}}"/>

                        <!--<DataGridTextColumn Header="   Req'd&#x0a;Sz. Amps" x:Name="dteqCableRequiredSizingAmps" 
                                Binding="{Binding Path=PowerCable.RequiredSizingAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource CableHeaderColumn}" 
                                        Visibility="{Binding Data, Converter={StaticResource BoolToVis}, Source={StaticResource CableViewProxy}}"/>-->


                        <DataGridTextColumn Header=" Cable &#xA;Derating" x:Name="dteqCableDerating" 
                                Binding="{Binding PowerCable.Derating, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource CableHeaderColumn}" 
                                Visibility="{Binding Data, Converter={StaticResource BoolToVis}, Source={StaticResource CableViewProxy}}"/>

                        <DataGridTextColumn Header="Derated &#xA;Amps" x:Name="dteqCableDeratedAmps" 
                                Binding="{Binding PowerCable.DeratedAmps, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource CableHeaderColumn}" 
                                        Visibility="{Binding Data, Converter={StaticResource BoolToVis}, Source={StaticResource CableViewProxy}}"/>

                        <DataGridTextColumn Header="Req'd&#xA;Amps" x:Name="dteqCableRequiredAmps" 
                                Binding="{Binding PowerCable.RequiredAmps, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource CableHeaderColumn}" 
                                        Visibility="{Binding Data, Converter={StaticResource BoolToVis}, Source={StaticResource CableViewProxy}}"/>
                    </DataGrid.Columns>

                    <DataGrid.RowDetailsTemplate>
                        <DataTemplate>
                            <Border BorderThickness="0" Background="Beige" Padding="10">
                                <Grid Margin="5,0,0,0" MinWidth="650" HorizontalAlignment="Left">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="125"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                </Grid>
                            </Border>
                        </DataTemplate>
                    </DataGrid.RowDetailsTemplate>

                    <DataGrid.RowValidationErrorTemplate>
                        <ControlTemplate>
                            <Grid Margin="5,2,0,0"
                                ToolTip="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}"
                                ToolTipService.InitialShowDelay="50">

                                <!--<Ellipse StrokeThickness="0" Fill="Red" 
                                Width="{TemplateBinding FontSize}" 
                                Height="{TemplateBinding FontSize}" />-->
                                <TextBlock Text="X" FontSize="15" 
                                    FontWeight="UltraBold" Foreground="{StaticResource ErrorColor_Base}" 
                                    HorizontalAlignment="Stretch"  />
                            </Grid>
                        </ControlTemplate>
                    </DataGrid.RowValidationErrorTemplate>
                </DataGrid>
            </Grid>

            <!--ADD EQUIPMENT-->
            <Grid x:Name="gridAdding" Grid.Row="3"  
                  Grid.Column="3" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="0"/>
                    <RowDefinition Height="0"/>
                    <RowDefinition Height="15"/>
                    <RowDefinition Height="0"/>
                    <RowDefinition Height="0"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <!--ADD Dteq-->
                <Button Content="Add Dist. Eq." Height="23" Width="100"
                        Grid.Row="3" Grid.Column="1"
                        Style="{StaticResource GreenButton}"
                        Command="{Binding AddDteqCommand}"
                        CommandParameter="{Binding DteqToAddValidator}"
                        Margin="0 0 10 0" PreviewMouseLeftButtonDown="btnAddDteq_PreviewMouseLeftButtonDown" MouseLeave="btnAddDteq_MouseLeave" 
                         Visibility="Collapsed"/>
                
                <subViews:AddDteqView Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="20" />


                <!--ADD Load-->
                <Button Content="Add Load"  Height="23" Width="100"
                        Grid.Row="6" Grid.Column="1"
                        Style="{StaticResource GreenButton}"
                        Command="{Binding AddLoadCommand}"
                        CommandParameter="{Binding LoadToAddValidator}"
                        Margin="0 0 10 0" 
                        Visibility="Collapsed"/>

                <subViews:AddLoadView Grid.Row="7" Grid.Column="1" Grid.ColumnSpan="20" />

                
            </Grid>


            <Grid Grid.Row="4" Grid.Column="3" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto" MinWidth="550" SharedSizeGroup="A"/>
                    <!--Details Column-->

                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <!--Load List Header/Contents-->
                <TextBlock Margin="10 20 0 0"
                           Grid.Row="0" Grid.Column="0"
                           Width="200"
                           HorizontalAlignment="Left"
                           FontSize="14" 
                           FontWeight="SemiBold">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Text" Value="Load List" />

                            <Style.Triggers>
                                <DataTrigger Binding="{Binding LoadListLoaded}" Value="False">
                                    <Setter Property="Text" Value="{Binding SelectedDteq.Tag, StringFormat=\{0:N0\} Loads}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <!--Column Toggle Buttons-->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" 
                            Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2">



                    <!--<Button 
                            Width="80" Height="17"
                            Margin="5 0"
                            VerticalAlignment="Bottom"
                            Command="{Binding Path=ToggleRowDetailViewCommand}"
                            >
                        <TextBlock Text="Row Details" Margin="0 -1 0 0"/>
                    </Button>-->

                    <Button 
                            Width="80" Height="17"
                            Margin="5 0"
                            VerticalAlignment="Bottom"
                            Command="{Binding TogglePowerViewLoadCommand}"
                            >
                        <TextBlock Text="Power Data" Margin="0 -1 0 0"/>
                    </Button>

                    <Button 
                            Width="80" Height="17"
                            Margin="5 0"
                            VerticalAlignment="Bottom"
                            Command="{Binding ToggleOcpdViewLoadCommand}"
                            >
                        <TextBlock Text="OCDP Data" Margin="0 -1 0 0"/>
                    </Button>

                    <Button 
                            Width="80" Height="17"
                            Margin="5 0"
                            VerticalAlignment="Bottom"
                            Command="{Binding ToggleCableViewLoadCommand}"
                            >
                        <TextBlock Text="Cable Data" Margin="0 -1 0 0"/>
                    </Button>
                    <Button 
                            Width="80" Height="17"
                            Margin="5 0"
                            VerticalAlignment="Bottom"
                            Command="{Binding ToggleCompViewLoadCommand}"
                            >
                        <TextBlock Text="Components" Margin="0 -1 0 0"/>
                    </Button>
                </StackPanel>

                <!--LOAD-->
                <!--DETAILS VIEW-->
                <TextBlock Text="Load Details"
                           Grid.Row="0" Grid.Column="3" 
                           VerticalAlignment="Bottom"
                           Margin="10 0 0 0"/>

                <Border Grid.Row="1" Grid.Column="3" 
                        BorderThickness="1" BorderBrush="Black" Background="Transparent"
                        Margin="5">

                    <ContentControl x:Name="LoadDetailsContent" 
                                    Grid.Row="0" Grid.Column="3"
                                    />
                </Border>

                <GridSplitter Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Stretch"   
                              Grid.Row="0" Grid.RowSpan="2"
                              Width="3" Background="AliceBlue"
                              Margin="2 0" 
                              Visibility="{Binding ElectricalViewGridSplitterVisibility}"/>

                <!--LOAD-->
                <!--DATA GRID-->

                <!--ItemsSource="{Binding Path=AssignedLoads, Mode=OneWay, UpdateSourceTrigger=PropertyChanged,IsAsync=True}"-->

                <sf:SfDataGrid x:Name="dgdAssignedLoads"  
                               Grid.Row="1"  Grid.Column="0" Grid.ColumnSpan="3"
                               
                               ItemsSource="{Binding Path=AssignedLoads, Mode=OneWay, UpdateSourceTrigger=PropertyChanged,IsAsync=True}"

                               CurrentItem="{Binding SelectedLoad, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                               SelectedItem="{Binding SelectedLoad, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                               SelectedItems="{Binding SelectedLoads, UpdateSourceTrigger=PropertyChanged}"
                               AutoGenerateColumns="False"
                               HorizontalAlignment="Left" 
                               Margin="5 5 13 5"
                               d:Height="440"
                               
                               HeaderRowHeight="40"
                               RowHeight="20"
                               
                               EditTrigger="OnDoubleTap"
                               Background="White"
                               CurrentCellBorderBrush="Black"
                               CurrentCellBorderThickness="0"
                             
                               RowSelectionBrush="{StaticResource RowSelectionBrush_Teal}"
                               
                               NavigationMode="Cell"
                               SelectionMode="Extended"
                               FrozenColumnCount="1"
                               
                               AllowEditing="True"
                               AllowSorting="True" 
                               AllowFiltering="False" 
                               AllowTriStateSorting="False"
                               AllowDraggingColumns="True"
                               
                               ShowGroupDropArea="False"
                               AllowResizingColumns="True"
                               ColumnSizer="AutoLastColumnFill"
                               SelectionChanged="dgdAssignedLoads_SelectionChanged_1"  
                               FilterRowPosition="FixedTop"
                               PreviewKeyDown="dgdAssignedLoads_PreviewKeyDown_1" CurrentCellActivated="dgdAssignedLoads_CurrentCellActivated"
                               >

                    <sf:SfDataGrid.Resources>




                    </sf:SfDataGrid.Resources>

                    <sf:SfDataGrid.ContextMenu>
                        <ContextMenu >
                            <MenuItem Header="Move to Area" PreviewMouseDown="LoadGridContextMenu_SetArea" Height="25"/>
                            <MenuItem Header="Set FedFrom" PreviewMouseDown="LoadGridContextMenu_SetFedFrom" Height="20"/>
                            <MenuItem Header="Add" Height="20" >
                                <MenuItem.Icon>
                                    <Image Source="../../ResourceFiles/MenuIcons/plus24.png"
                                           Height="10"/>
                                </MenuItem.Icon>
                                <MenuItem Header="Add Disconnect" Height="20" PreviewMouseDown="LoadGridContextMenu_AddDiscoonnect" />
                                <MenuItem Header="Add Drive" Height="20" PreviewMouseDown="LoadGridContextMenu_AddDrive"/>
                                <MenuItem Header="Add LCS" Height="20" PreviewMouseDown="LoadGridContextMenu_AddLcs"/>
                            </MenuItem>
                            <MenuItem Header="Remove" Height="20">
                                <MenuItem.Icon>
                                    <Image Source="../../ResourceFiles/MenuIcons/minus24.png"
                                           Height="10"/>
                                </MenuItem.Icon>
                                <MenuItem Header="Remove Disconnect" Height="20" PreviewMouseDown="LoadGridContextMenu_RemoveDiscoonnect"/>
                                <MenuItem Header="Remove Drive" Height="20" PreviewMouseDown="LoadGridContextMenu_RemoveDrive"/>
                                <MenuItem Header="Remove LCS" Height="20" PreviewMouseDown="LoadGridContextMenu_RemoveLcs"/>
                            </MenuItem>
                            <Separator/>
                            <MenuItem Header="Delete" Height="20" PreviewMouseDown="LoadGridContextMenu_Delete"/>

                        </ContextMenu>
                    </sf:SfDataGrid.ContextMenu>

                    <sf:SfDataGrid.Columns>

                        <!--Line Break code:     &#xA;    -->

                        <!--Tag-->
                        <sf:GridTextColumn HeaderText="Tag" MappingName="Tag"
                                           Width="75"
                                           TextAlignment="Center"
                                           AllowSorting="True" 
                                           AllowEditing="True"
                                           AllowDragging="True"
                                           AllowFiltering="True"
                                           UseBindingValue="True"
                                           FilterRowCondition="Contains"
                                           ImmediateUpdateColumnFilter="True"
                                           HorizontalHeaderContentAlignment="Center"
                                           
                                           >
                            <sf:GridTextColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Tag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                               Padding="5 0 0 0"
                                               FontWeight="SemiBold"/>
                                </DataTemplate>
                            </sf:GridTextColumn.CellTemplate>
                        </sf:GridTextColumn>

                        <!--Description-->
                        <sf:GridTextColumn HeaderText="Description" MappingName="Description" 
                                           Width="150"
                                           AllowEditing="True"
                                           AllowSorting="True"
                                           AllowDragging="True"
                                           AllowFiltering="True"
                                           UseBindingValue="True"
                                           FilterRowCondition="Contains"
                                           ImmediateUpdateColumnFilter="True"
                                           HorizontalHeaderContentAlignment="Center"
                                           >
                            <sf:GridTextColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                               Padding="5 0 0 0"/>
                                </DataTemplate>
                            </sf:GridTextColumn.CellTemplate>
                        </sf:GridTextColumn>

                        <!--Area-->
                        <sf:GridComboBoxColumn HeaderText="Area" MappingName="Area"
                                               Width="75"
                                               AllowEditing="True"
                                               AllowDragging="True"
                                               AllowFiltering="True"
                                               ItemsSource="{Binding Path=DataContext.ListManager.AreaList, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                               DisplayMemberPath="Tag"
                                               UseBindingValue="True"
                                               FilterRowCondition="Contains"
                                               SortMode="Display"
                                               TextAlignment="Left"
                                           ImmediateUpdateColumnFilter="True"
                                           FilterRowOptionsVisibility="Collapsed" IsReadOnly="False"
                                               CellStyle="{StaticResource comboBoxCellStyle}"
                                               >
                            <sf:GridComboBoxColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Area.Tag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                               Padding="5 0 0 0"
                                               TextAlignment="Left"
                                               />
                                </DataTemplate>
                            </sf:GridComboBoxColumn.CellTemplate>
                        </sf:GridComboBoxColumn>

                        <!--FedFrom-->
                        <sf:GridComboBoxColumn HeaderText="Fed From" MappingName="FedFrom"
                                               Width="75"
                                               AllowEditing="True"
                                               AllowFiltering="True"
                                               ItemsSource="{Binding Path=DataContext.ListManager.DteqList, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                               DisplayMemberPath="Tag"
                                               UseBindingValue="True"
                                               FilterRowCondition="Contains"
                                               SortMode="Display"
                                               TextAlignment="Left"
                                               ImmediateUpdateColumnFilter="True"
                                           FilterRowOptionsVisibility="Collapsed"
                                               CellStyle="{StaticResource comboBoxCellStyle}"
                                               >
                            <sf:GridComboBoxColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding FedFrom.Tag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                               TextAlignment="Left"
                                               Padding="5 0 0 0"/>
                                </DataTemplate>
                            </sf:GridComboBoxColumn.CellTemplate>
                        </sf:GridComboBoxColumn>

                        <!--Voltage-->
                        <sf:GridComboBoxColumn HeaderText="Voltage" MappingName="Voltage"
                                               Width="75"
                                               AllowEditing="True"
                                               AllowFiltering="True"
                                               ItemsSource="{Binding Path=DataContext.TypeManager.VoltageTypes, 
                                                                     RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}},Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                               DisplayMemberPath="Voltage"
                                               SelectedValuePath="Voltage"
                                               UseBindingValue="True"
                                               FilterRowCondition="Contains"
                                               SortMode="Display"
                                               TextAlignment="Left" 
                                               Padding="5 0 0 0"
                                               ImmediateUpdateColumnFilter="True"
                                               FilterRowOptionsVisibility="Collapsed"
                                               CellStyle="{StaticResource comboBoxCellStyle}"
                                               >
                            <sf:GridComboBoxColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Voltage, StringFormat=\{0:N0\} V,
                                                              Mode=TwoWay, UpdateSourceTrigger=PropertyChanged }"
                                               TextAlignment="Left"
                                               Padding="5 0 0 0"/>
                                </DataTemplate>
                            </sf:GridComboBoxColumn.CellTemplate>
                        </sf:GridComboBoxColumn>

                        <!--VoltageType-->
                        <sf:GridComboBoxColumn HeaderText="Voltage" MappingName="VoltageType"
                                               Width="75"
                                               AllowEditing="True"
                                               AllowFiltering="True"
                                               ItemsSource="{Binding Path=DataContext.TypeManager.VoltageTypes, 
                                                                     RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}},Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                               DisplayMemberPath="VoltageString"
                                               UseBindingValue="True"
                                               FilterRowCondition="Contains"
                                               SortMode="Display"
                                               TextAlignment="Left" 
                                               Padding="5 0 0 0"
                                               ImmediateUpdateColumnFilter="True"
                                               FilterRowOptionsVisibility="Collapsed"
                                               CellStyle="{StaticResource comboBoxCellStyle}"
                                               >
                            <sf:GridComboBoxColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding VoltageType.VoltageString,
                                                              Mode=TwoWay, UpdateSourceTrigger=PropertyChanged }"
                                               TextAlignment="Left"
                                               Padding="5 0 0 0"/>
                                </DataTemplate>
                            </sf:GridComboBoxColumn.CellTemplate>
                        </sf:GridComboBoxColumn>


                        <!--Size-->
                        <sf:GridTextColumn HeaderText="Size" MappingName="Size"
                                           Width="50"
                                           AllowEditing="True"
                                           AllowFiltering="True"
                                           UseBindingValue="True"
                                           FilterRowCondition="Contains"
                                           ImmediateUpdateColumnFilter="True"
                                           FilterRowOptionsVisibility="Collapsed"
                                           TextAlignment="Right"
                                           />

                        <!--Unit-->
                        <sf:GridTextColumn HeaderText="Unit" MappingName="Unit"
                                           Width="50"
                                           AllowEditing="False"
                                           AllowFiltering="True"
                                           UseBindingValue="True"
                                           FilterRowCondition="Contains"
                                           ImmediateUpdateColumnFilter="True"
                                           FilterRowOptionsVisibility="Collapsed"
                                           />

                        <!--Type-->
                        <sf:GridTextColumn HeaderText="Load&#x0a;Type" MappingName="Type"
                                           Width="60"
                                           AllowEditing="False"
                                           UseBindingValue="True"
                                           FilterRowCondition="Contains"
                                           TextAlignment="Center"
                                           AllowFiltering="True"
                                           ImmediateUpdateColumnFilter="True"
                                           FilterRowOptionsVisibility="Collapsed"
                                           />


                        <sf:GridTextColumn HeaderText="FLA" MappingName="Fla"
                                           Width="50"
                                           AllowEditing="False"
                                           UseBindingValue="True"
                                           FilterRowCondition="Contains"
                                           TextAlignment="Center"
                                           ImmediateUpdateColumnFilter="True"
                                           FilterRowOptionsVisibility="Collapsed"
                                           />

                        <!--<sf:GridTextColumn HeaderText="Running&#x0a;Amps" MappingName="RunningAmps"
                                           Width="60"
                                           AllowEditing="False"
                                           UseBindingValue="True"
                                           FilterRowCondition="Contains"
                                           TextAlignment="Center"/>-->

                        <sf:GridTextColumn HeaderText="Load&#x0a;Factor" MappingName="LoadFactor"
                                           Width="60"
                                           AllowEditing="True"
                                           UseBindingValue="True"
                                           FilterRowCondition="Contains"
                                           ImmediateUpdateColumnFilter="True"
                                           FilterRowOptionsVisibility="Collapsed"
                                           TextAlignment="Center"
                                           IsHidden="{Binding DataContext.LoadGridViewModifier.PowerInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"/>

                        <sf:GridTextColumn HeaderText="Efficiency" MappingName="Efficiency"
                                           Width="60"
                                           UseBindingValue="True"
                                           FilterRowCondition="LessThanOrEqual"
                                           TextAlignment="Center"
                                           FilterRowOptionsVisibility="Collapsed"
                                           FilterRowEditorType="MultiSelectComboBox"
                                           IsHidden="{Binding DataContext.LoadGridViewModifier.PowerInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"/>

                        <sf:GridTextColumn HeaderText="PF  " MappingName="PowerFactor"
                                           Width="60"
                                           UseBindingValue="True"
                                           FilterRowCondition="LessThanOrEqual"
                                           TextAlignment="Center"
                                           HorizontalHeaderContentAlignment="Center"
                                           FilterRowOptionsVisibility="Collapsed"
                                           FilterRowEditorType="MultiSelectComboBox"

                                           IsHidden="{Binding DataContext.LoadGridViewModifier.PowerInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"/>

                        <!--POWER-->
                        <sf:GridTextColumn HeaderText="Conn&#x0a;kVA" MappingName="ConnectedKva"
                                           Width="40"
                                           AllowEditing="False"
                                           UseBindingValue="True"
                                           FilterRowCondition="LessThanOrEqual"
                                           TextAlignment="Center"
                                           FilterRowOptionsVisibility="Collapsed"
                                           
                                           IsHidden="{Binding DataContext.LoadGridViewModifier.PowerInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"/>

                        <sf:GridTextColumn HeaderText="Dem&#x0a;kVA" MappingName="DemandKva"
                                           Width="40"
                                           AllowEditing="False"
                                           UseBindingValue="True"
                                           FilterRowEditorType="Numeric"
                                           FilterRowCondition="LessThanOrEqual"
                                           TextAlignment="Center"
                                           FilterRowOptionsVisibility="Collapsed"
                                           
                                           IsHidden="{Binding DataContext.LoadGridViewModifier.PowerInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"
                                           />

                        <sf:GridTextColumn HeaderText="Dem&#x0a;kW" MappingName="DemandKw"
                                           Width="40"
                                           AllowEditing="False"
                                           UseBindingValue="True"
                                           FilterRowCondition="LessThanOrEqual"
                                           TextAlignment="Center"
                                           FilterRowOptionsVisibility="Collapsed"
                                           
                                           IsHidden="{Binding DataContext.LoadGridViewModifier.PowerInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"/>

                        <sf:GridTextColumn HeaderText="Dem&#x0a;kVAR" MappingName="DemandKvar"
                                           Width="40"
                                           AllowEditing="False"
                                           UseBindingValue="True"
                                           FilterRowCondition="LessThanOrEqual"
                                           TextAlignment="Center"
                                           FilterRowOptionsVisibility="Collapsed"
                                           
                                           IsHidden="{Binding DataContext.LoadGridViewModifier.PowerInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"/>

                        <sf:GridComboBoxColumn HeaderText="OCPD&#x0a;Type" MappingName="PdType"
                                               Width="80"
                                               AllowEditing="True"
                                               AllowFiltering="True"
                                               ItemsSource="{Binding Path=DataContext.TypeManager.OcpdTypes, 
                                                                    RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                    AncestorType={x:Type Window}}}"
                                               
                                               DisplayMemberPath="Type"
                                               SelectedValuePath="Type"
                                               UseBindingValue="True"
                                               FilterRowCondition="LessThanOrEqual"
                                               SortMode="Display"
                                               TextAlignment="Center" 
                                               FilterRowOptionsVisibility="Collapsed"
                                               IsHidden="{Binding DataContext.LoadGridViewModifier.OcpdInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"
                                               CellStyle="{StaticResource comboBoxCellStyle}"
                                               >
                            <sf:GridComboBoxColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding PdType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                               TextAlignment="Center"
                                               Padding="5 0 0 0"/>
                                </DataTemplate>
                            </sf:GridComboBoxColumn.CellTemplate>
                        </sf:GridComboBoxColumn>

                        <sf:GridTextColumn HeaderText="PD / MCP&#x0a;Trip" MappingName="PdSizeTrip"
                                           Width="60"
                                           AllowEditing="False"
                                           UseBindingValue="True"
                                           FilterRowCondition="LessThanOrEqual"
                                           TextAlignment="Center"
                                           FilterRowOptionsVisibility="Collapsed"
                                           
                                           IsHidden="{Binding DataContext.LoadGridViewModifier.OcpdInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"/>

                        <sf:GridTextColumn HeaderText="PD / MCP&#x0a;Frame" MappingName="PdSizeFrame"
                                           Width="60"
                                           AllowEditing="False"
                                           UseBindingValue="True"
                                           FilterRowCondition="LessThanOrEqual"
                                           TextAlignment="Center"
                                           FilterRowOptionsVisibility="Collapsed"
                                           
                                           IsHidden="{Binding DataContext.LoadGridViewModifier.OcpdInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"/>

                        <sf:GridTextColumn HeaderText="Starter&#x0a;Size" MappingName="StarterSize"
                                           Width="60"
                                           AllowEditing="False"
                                           UseBindingValue="True"
                                           FilterRowCondition="Contains"
                                           TextAlignment="Center"
                                           ImmediateUpdateColumnFilter="True"
                                           FilterRowOptionsVisibility="Collapsed"
                                           CellStyleSelector="{StaticResource NonMotorLoadVisibilityStyleSelector}"
                                           IsHidden="{Binding DataContext.LoadGridViewModifier.OcpdInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"
                                           />

                        <!--COMPONENTS-->
                        <!--These checkboxes have no rendering issues but require double click-->
                        <!--Disconnect-->
                        <!--<sf:GridTemplateColumn HeaderText="Local&#x0a;Disc." MappingName="DisconnectBool"
                                               Width="45"
                                               IsHidden="{Binding DataContext.LoadGridViewModifier.CompInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"
                                           FilterRowOptionsVisibility="Collapsed"
                                           UseBindingValue="True"
                                           FilterRowEditorType="MultiSelectComboBox"
                                               
                                               >
                            <sf:GridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox  IsChecked="{Binding DisconnectBool, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                               HorizontalAlignment="Center" VerticalAlignment="Center"
                                               Visibility="Visible"/>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Type}" Value="XFR">
                                            <Setter Property="Visibility" Value="Hidden" />
                                            <Setter Property="ToolTip" Value="Disabled for Distribution Equipment."/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="SWG">
                                            <Setter Property="Visibility" Value="Hidden" />
                                            <Setter Property="ToolTip" Value="Disabled for Distribution Equipment."/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="MCC">
                                            <Setter Property="Visibility" Value="Hidden" />
                                            <Setter Property="ToolTip" Value="Disabled for Distribution Equipment."/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </sf:GridTemplateColumn.CellTemplate>
                        </sf:GridTemplateColumn>-->

                        <!--Drive-->
                        <!--<sf:GridTemplateColumn HeaderText="Drive" MappingName="DriveBool"
                                               Width="45"
                                               IsHidden="{Binding DataContext.LoadGridViewModifier.CompInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"
                                           FilterRowOptionsVisibility="Collapsed"
                                           UseBindingValue="True"
                                           FilterRowEditorType="MultiSelectComboBox"
                                               
                                               >
                            <sf:GridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox  IsChecked="{Binding DriveBool, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                               HorizontalAlignment="Center" VerticalAlignment="Center"
                                               Visibility="{Binding Type, Converter={StaticResource LscOwnerTypeVisibilityConverter}}" >
                                    </CheckBox>
                                </DataTemplate>
                            </sf:GridTemplateColumn.CellTemplate>
                            
                        </sf:GridTemplateColumn>-->

                        <!--Lcs-->
                        <!--<sf:GridTemplateColumn HeaderText="LCS" MappingName="LcsBool"
                                               Width="45"
                                               IsHidden="{Binding DataContext.LoadGridViewModifier.CompInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"
                                           FilterRowOptionsVisibility="Collapsed"
                                           UseBindingValue="True"
                                           FilterRowEditorType="MultiSelectComboBox"
                                               
                                               >
                            <sf:GridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox  IsChecked="{Binding LcsBool, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                               HorizontalAlignment="Center" VerticalAlignment="Center"
                                               Visibility="{Binding Type, Converter={StaticResource LscOwnerTypeVisibilityConverter}}"/>
                                </DataTemplate>
                            </sf:GridTemplateColumn.CellTemplate>
                        </sf:GridTemplateColumn>-->

                        <!--Comp CheckBoxes-->
                        <!--These checkboxes are single click but have had some rendering issues-->
                        <sf:GridCheckBoxColumn HeaderText="Local&#x0a;Disc." MappingName="DisconnectBool" 
                                               Width="45"
                                               UseBindingValue="True"
                                               AllowEditing="True"
                                               FilterRowCondition="Equals"
                                               IsHidden="{Binding DataContext.LoadGridViewModifier.CompInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"
                                               FilterRowEditorType="MultiSelectComboBox"
                                               
                                               />

                        <sf:GridCheckBoxColumn HeaderText="Drive" MappingName="DriveBool" 
                                               Width="45"
                                               AllowEditing="True"
                                               UseBindingValue="True"
                                               FilterRowCondition="Equals"
                                               IsHidden="{Binding DataContext.LoadGridViewModifier.CompInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"
                                               CellStyleSelector="{StaticResource NonMotorLoadVisibilityStyleSelector}"
                                               FilterRowEditorType="MultiSelectComboBox"
                                               />


                        <sf:GridCheckBoxColumn HeaderText="LCS" MappingName="LcsBool" 
                                               Width="45"
                                               AllowEditing="True"
                                               UseBindingValue="True"
                                               IsHidden="{Binding DataContext.LoadGridViewModifier.CompInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"
                                               CellStyleSelector="{StaticResource NonMotorLoadVisibilityStyleSelector}"
                                               FilterRowEditorType="MultiSelectComboBox"
                                               />

                        <!--Comp Tags-->
                        <sf:GridTextColumn HeaderText="Local&#x0a;Disc. Tag" MappingName="Disconnect.Tag"
                                           Width="100"
                                           AllowEditing="True"
                                           AllowFiltering="True"
                                           UseBindingValue="True"
                                           FilterRowCondition="Contains"
                                           ImmediateUpdateColumnFilter="True"
                                           IsHidden="{Binding DataContext.LoadGridViewModifier.CompInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"/>

                        <sf:GridTextColumn HeaderText="Drive&#x0a;Tag" MappingName="Drive.Tag"
                                           Width="100"
                                           AllowEditing="True"
                                           AllowFiltering="True"
                                           UseBindingValue="True"
                                           FilterRowCondition="Contains"
                                           ImmediateUpdateColumnFilter="True"
                                           IsHidden="{Binding DataContext.LoadGridViewModifier.CompInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"/>

                        <sf:GridTextColumn HeaderText="Lcs&#x0a;Tag" MappingName="Lcs.Tag"
                                           Width="100"
                                           AllowEditing="True"
                                           AllowFiltering="True"
                                           UseBindingValue="True"
                                           FilterRowCondition="Contains"
                                           ImmediateUpdateColumnFilter="True"
                                           IsHidden="{Binding DataContext.LoadGridViewModifier.CompInv, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}" />



                    </sf:SfDataGrid.Columns>
                </sf:SfDataGrid>

                <!--***********************************-->
                <!--******   BOTTOM STATUS BAR   ******-->
                <!--***********************************-->

                <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2"
                            Margin="10 0 0 5">


                    <TextBlock Text="{Binding DataContext.LoadGridViewModifier.Power, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}" FontWeight="Bold" Margin="10 0 0 0" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>

                    <TextBlock Text="DTEQ" FontWeight="Bold" Margin="10 0 0 0" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="   Id:  " FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="{Binding SelectedDteq.Id}" Margin="0" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>

                    <TextBlock Text="   Supplier: " FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="{Binding SelectedDteq.FedFrom.Tag}" Margin="0" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text=", " FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="{Binding SelectedDteq.FedFromId}" Margin="0" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>


                    <TextBlock Text="   Cable Id:  " FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="{Binding SelectedDteq.PowerCable.Id}" Margin="0" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>

                    <TextBlock Text="   Loads:  " FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="{Binding SelectedDteq.AssignedLoads.Count}" Margin="0" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>

                    <TextBlock Text="   Area Id:  " FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="{Binding SelectedDteq.Area.Id}" Margin="0" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>



                    <TextBlock Text="        |       " FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>

                    <TextBlock Text="LOAD" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="   Id:  " FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="{Binding SelectedLoad.Id}" Margin="0" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="   Fed From Id:  " FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="{Binding SelectedLoad.FedFromId}" Margin="0" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>

                    <TextBlock Text="   Cable Id:  " FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="{Binding SelectedLoad.PowerCable.Id}" Margin="0" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>


                    <TextBlock Text="        |       " FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="Counts" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>

                    <TextBlock Text="   Dteq:  " FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="{Binding ListManager.IDteqList.Count}" Margin="0" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="   loads:  " FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="{Binding ListManager.LoadList.Count}" Margin="0" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="   Cables:  " FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="{Binding ListManager.CableList.Count}" Margin="0" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>


                    <TextBlock Text="        |       " FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="Cables" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>

                    <TextBlock Text="   D:  " FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="{Binding SelectedDteq.PowerCable.Type}" Margin="0" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="   L:  " FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="{Binding SelectedLoad.PowerCable.Type}" Margin="0" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="{Binding SelectedDteq.SCCR}" Margin="0" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                </StackPanel>

                <!--***********************************-->
                <!--***********************************-->
                <!--***********************************-->
            </Grid>

            <!--Below Dteq Grid-->
            <GridSplitter  Grid.Row="2" Grid.ColumnSpan="5" Panel.ZIndex="2" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"   
                           Height="3" Background="AliceBlue"
                           Margin="0"
                           Visibility="{Binding ElectricalViewGridSplitterVisibility}"/>

            <!--Above Load Grid-->
            <GridSplitter  Grid.Row="3" Grid.ColumnSpan="5" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
                           Height="3" Background="AliceBlue"
                           Margin="0"
                           Visibility="{Binding ElectricalViewGridSplitterVisibility}"/>
        </Grid>



    </Grid>


</UserControl>
