<UserControl x:Class="WpfUI.Views.Electrical._MjeqView"
             x:Name="eqView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             
             xmlns:local="clr-namespace:WpfUI.Views"
             xmlns:root="clr-namespace:WpfUI"
             
             xmlns:rules="clr-namespace:WpfUI.ValidationRules"
             xmlns:converters="clr-namespace:WpfUI.Converters"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
              
             xmlns:h="clr-namespace:WpfUI.Helpers"
             xmlns:commands="clr-namespace:WpfUI.Commands"
             xmlns:viewModifiers="clr-namespace:WpfUI.ViewModifiers"
             xmlns:views="clr-namespace:WpfUI.Views"
             xmlns:subViews="clr-namespace:WpfUI.Views.EquipmentSubViews"
             xmlns:edt="clr-namespace:EDTLibrary;assembly=EDTLibrary"
             xmlns:edtDteqModels="clr-namespace:EDTLibrary.Models.DistributionEquipment;assembly=EDTLibrary"
             xmlns:edtLoadModels="clr-namespace:EDTLibrary.Models.Loads;assembly=EDTLibrary"
              
             mc:Ignorable="d"
             d:Width="1500" d:Height="1000"
             Background="#FFDAEEF1" 
             PreviewKeyDown="eqView_PreviewKeyDown" Unloaded="eqView_Unloaded" MouseLeave="eqView_MouseLeave" 
             >

    <!--#FFDAEEF1-->


    <UserControl.Resources>
        <!--Background="#FFBDCCCA">-->

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../Styles/EdtStyle_Teal.xaml"/>
            </ResourceDictionary.MergedDictionaries>


            <viewModifiers:BindingProxy x:Key="AreaViewProxy" Data="{Binding AreaColumnVisible}" />

            <converters:PercentLoadedToColorConverter x:Key="PercentLoadedToColor"/>
            <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>

            <!--For quick filtering of DteqGrid-->
            <CollectionViewSource x:Key="cvsIdteq" Source="{Binding ListManager.IDteqList}"
                                  Filter="cvsIdteq_Filter"/>

            <!--For FedFrom Comboboxes-->
            <CollectionViewSource x:Key="dteqList" Source="{Binding ListManager.DteqList}"/>


            <Style x:Key="ColumnElementStyle" TargetType="TextBlock">
                <Setter Property="Margin" Value="10,0,10,0" />
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>


    <!--TOP-->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <!--Main Grid-->
        <Grid Grid.Row="1"
              x:Name="elecGrid"
              d:Opacity="1"
              Opacity="0.0"  Grid.IsSharedSizeScope="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="486*"/>
                <ColumnDefinition Width="1309*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="{Binding DteqGridBottom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" d:Height="300" MinHeight="300"/>
                <RowDefinition Height="{Binding LoadGridTop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" d:Height="125" />
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.Triggers>
                <EventTrigger RoutedEvent="Grid.Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="elecGrid"
                                             BeginTime="0:0:0"
                                From="0.0" To="1" Duration="0:0:0.5"
                                             AccelerationRatio="1"
                                AutoReverse="False" RepeatBehavior="1x"/>

                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Grid.Triggers>



            <!--Dteq View Buttons-->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left"
                        Grid.Row="1" Grid.Column="3" Grid.ColumnSpan="2"
                        Height="20" Width="300"
                        Margin="200 5"
                        >

                <!--<Button Content="Load All"
                        Command="{Binding GetAllCommand}"/>

                <Button Content="Row Details"
                        Width="80" Height="20"
                        Margin="5 0"
                        Command="{Binding Path=ToggleRowDetailViewCommand}"
                        />

                <Button Content="Loading Data"
                        Width="80" Height="20"
                        Margin="5 0"
                        Command="{Binding Path=ToggleLoadingViewDteqCommand}"
                        />

                <Button Content="OCDP Data"
                        Width="80" Height="20"
                        Margin="5 0"
                        Command="{Binding Path=ToggleOcpdViewDteqCommand}"
                        />

                <Button Content="Cable Data"
                        Width="80" Height="20"
                        Margin="5 0"
                        Command="{Binding Path=ToggleCableViewDteqCommand}"
                        />-->
            </StackPanel>

            <!--MENU BUTTONS-->
            <!--Dteq-->
            <Grid  x:Name="dteqButtonsStackPanel"
                   Grid.Column="1" Grid.Row="2"
                   Margin=" 0 50 0 0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <StackPanel Orientation="Vertical"
                        Grid.Row="0"
                        Margin="0,0,0,0">

                    <Button Content="Load All"
                        Command="{Binding GetAllCommand}"/>

                    <Button Content="Save All"
                        Command="{Binding SaveAllCommand}"/>

                    <Button Content="AutoSize Cables"
                        Command="{Binding SizeCablesCommand}"/>

                    <!--<Button Content="Calc. Cable Amps" Name ="btnCalcCableAmps" 
                        Command="{Binding CalculateAllCableAmpsCommand}"/>-->

                    <Button Content="Delete Selected"
                        Style="{StaticResource RedButton}"
                        Command="{Binding DeleteDteqCommand}"
                        CommandParameter="{Binding SelectedDteq}" />
                </StackPanel>

                <Button Name ="btnAddEquipmentPanelView" Content="Add Equipment" 
                        Grid.Row="1"
                        VerticalAlignment="Bottom"
                        Margin="0 0 0 20"                         
                        PreviewMouseLeftButtonDown="AddEquipmentPanelViewToggle_PreviewMouseLeftButtonDown"/>
            </Grid>

            <!--ADD Buttons-->
            <StackPanel Orientation="Vertical"
                        Grid.Column="1" Grid.Row="3"
                        Margin="0,10,0,0">

                <Button Content="Add Dist. Eq." Height="25" Width="100"
                        x:Name="btnAddDteq"
                        Style="{StaticResource GreenButton}"
                        Command="{Binding Path=AddDteqCommand}"
                        CommandParameter="{Binding DteqToAddValidator}"
                        Margin="10,13,10,15" PreviewMouseLeftButtonDown="btnAddDteq_PreviewMouseLeftButtonDown" MouseLeave="btnAddDteq_MouseLeave" 
                        Visibility="Visible" IsDefault="True"
                         />

                <Button Content="Add Load"  Height="25" Width="100"
                        x:Name="btnAddLoad"
                        Style="{StaticResource GreenButton}"
                        Command="{Binding Path=AddLoadCommand}"
                        CommandParameter="{Binding LoadToAddValidator}"
                        Margin="10,21,10,10" 
                        Visibility="Visible" PreviewMouseLeftButtonDown="btnAddLoad_PreviewMouseLeftButtonDown" MouseLeave="btnAddLoad_MouseLeave" 
                        />

            </StackPanel>

            <!--Load-->

            <StackPanel Orientation="Vertical" 
                        x:Name="loadButtonsStackPanel"
                        Grid.Column="1" Grid.Row="4"
                        Margin="0,75,0,50">



                <Button x:Name ="btnLoadList" Content="Load List" Height="25" Width="100"
                        Command="{Binding GetLoadListCommand}"/>

                <!--<Button x:Name ="btnSaveLoadList" Content="Save Load List" Height="25" Width="100"
                        Command="{Binding SaveLoadListCommand}"/>-->

                <Button x:Name ="btnDeleteLoad" Content="Delete Load" Height="25" Width="100"
                        Style="{StaticResource RedButton}"
                        Command="{Binding DeleteLoadCommand}" 
                        CommandParameter="{Binding SelectedLoad}" />


                <Button Name ="btnCalculate" Content="Calculate All"  Height="25" Width="100"
                        Command="{Binding CalculateAllCommand}"
                        FontWeight="Bold"
                        Margin="0 50 0 0"/>


            </StackPanel>


            <!--Load VIEW Buttons-->

            <!--DTEQ-->
            <!--GRID-->
            <Grid Grid.Row="2" Grid.Column="3" Grid.ColumnSpan="2"
                  >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto" MinWidth="485" SharedSizeGroup="A"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*" x:Name="dteqGridRow"/>
                </Grid.RowDefinitions>

                <!--Title-->
                <TextBlock Text="Distribution Equipment"
                            Grid.Row="0" Grid.Column="0"
                               Margin="10 5 0 0"
                               Width="200"
                               HorizontalAlignment="Left"
                               FontSize="14" 
                               FontWeight="SemiBold"/>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" 
                            Grid.Row="0" Grid.Column="1"
                            Grid.ColumnSpan="2">


                    <!--<Button 
                            Width="80" Height="17"
                            Margin="5 0"
                            VerticalAlignment="Bottom"
                            Command="{Binding Path=ToggleRowDetailViewCommand}"
                            >
                        <TextBlock Text="Row Details" Margin="0 -1 0 0"/>
                    </Button>-->

                    <Button 
                            Width="80" Height="17"
                            Margin="5 0"
                            VerticalAlignment="Bottom"
                            Command="{Binding Path=TogglePowerViewDteqCommand}"
                            >
                        <TextBlock Text="Power Data" Margin="0 -1 0 0"/>
                    </Button>

                    <Button 
                            Width="80" Height="17"
                            Margin="5 0"
                            VerticalAlignment="Bottom"
                            Command="{Binding Path=ToggleOcpdViewDteqCommand}"
                            >
                        <TextBlock Text="OCDP Data" Margin="0 -1 0 0"/>
                    </Button>

                    <Button 
                            Width="80" Height="17"
                            Margin="5 0"
                            VerticalAlignment="Bottom"
                            Command="{Binding Path=ToggleCableViewDteqCommand}"
                            >
                        <TextBlock Text="Cable Data" Margin="0 -1 0 0"/>
                    </Button>
                </StackPanel>

                <!--DETAILS VIEW-->
                <!--Dteq-->
                <TextBlock Text="Distribution Equipment Details" 
                           Grid.Row="0" Grid.Column="3" 
                           VerticalAlignment="Bottom"
                           Margin="10,0,0,0"/>
                <Border BorderThickness="1 1 1 1" BorderBrush="Black" Background="Transparent"
                        Grid.Row="1" Grid.Column="3" Margin="5">
                    <ContentControl x:Name="DteqDetailsContent"
                                    Grid.Row="1" Grid.Column="3">
                    </ContentControl>
                </Border>

                <GridSplitter Grid.Column="2" HorizontalAlignment="Center"   
                              Width="3" Background="AliceBlue"
                              Margin="2 0" Grid.Row="0" Grid.RowSpan="2"
                              Visibility="{Binding ElectricalViewGridSplitterVisibility}"/>


                <!--ItemsSource="{Binding Source={StaticResource cvsIdteq}}"-->

                <!--DTEQ-->
                <!--DATA GRID-->

                <!--Grid height is adjusted in the View.cs file by the method btnGrdSplitAdjust_PreviewMouseLeftButtonDown-->
                <DataGrid x:Name="dgdDteq" 
                          Grid.Column="0"
                          SelectedItem="{Binding SelectedDteq, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          
                          ItemsSource="{Binding DteqCollectionView}"
                          IsSynchronizedWithCurrentItem="True"
                          FrozenColumnCount="1"
                          Margin="5,5,5 5"
                          
                          
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top"
                          d:Height="250"
                          Height="{Binding DteqGridHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          AutoGenerateColumns="False"
                          EnableRowVirtualization="True"
                          EnableColumnVirtualization="True"
                          ScrollViewer.CanContentScroll="True"
                          VirtualizingPanel.IsVirtualizing="True"
                          SelectionChanged="dgdDteq_SelectionChanged"
                          VirtualizingStackPanel.VirtualizationMode="Recycling"
                          RowDetailsVisibilityMode="{Binding ToggleRowDetailViewProp}" Grid.ColumnSpan="2" Grid.Row="1" MouseLeave="dgdDteq_MouseLeave" >
                    <!--ItemsSource="{Binding DteqList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"-->


                    <DataGrid.Resources>
                        <Style x:Key="errorStyle" TargetType="{x:Type TextBlock}">
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="ToolTipService.InitialShowDelay" Value="100"/>
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="True">
                                    <Setter Property="Background" Value="Red"/>
                                    <Setter Property="Foreground" Value="Red"/>
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>

                        <viewModifiers:BindingProxy x:Key="PowerViewProxy" Data="{Binding DteqGridViewModifier.Power}" />
                        <viewModifiers:BindingProxy x:Key="OcpdViewProxy" Data="{Binding DteqGridViewModifier.Ocpd}" />
                        <viewModifiers:BindingProxy x:Key="CableViewProxy" Data="{Binding DteqGridViewModifier.Cable}" />
                    </DataGrid.Resources>

                    <DataGrid.Columns>
                        <!--Basic-->
                        <!--Textblock cell padding style in this.resources Move to ResDict-->

                        <!--Tag-->
                        <DataGridTextColumn x:Name="dteqTag"
                                            MinWidth="75"
                                            Binding="{Binding Path=Tag, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                            ElementStyle="{StaticResource ColumnElementStyle}"
                                            HeaderStyle="{StaticResource DataGridColumnHeaderWithFilterBase}">

                            <DataGridTextColumn.Header>

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="Tag" 
                                                    Grid.Row="0" Grid.ColumnSpan="2"
                                                    VerticalAlignment="Center" HorizontalAlignment="Center" Padding="5 2 5 2"/>
                                    <!--<Button Style="{StaticResource FilterButton}"/>-->
                                    <TextBox x:Name="txtDteqTagFilter" 
                                             Style="{StaticResource FilterTextBoxBase}"
                                             PreviewKeyDown="DteqGridFilter" />
                                    <!--Text="{Binding Filter}"-->

                                </Grid>
                            </DataGridTextColumn.Header>

                        </DataGridTextColumn>

                        <!--Description-->
                        <DataGridTextColumn x:Name="dteqDescription"
                                            MinWidth="150"
                                            Binding="{Binding Path=Description, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                            HeaderStyle="{StaticResource DataGridColumnHeaderWithFilterBase}">

                            <DataGridTextColumn.Header>

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="Description" 
                                                    Grid.Row="0" Grid.ColumnSpan="2"
                                                    VerticalAlignment="Center" HorizontalAlignment="Center" Padding="5 2 5 2"/>
                                    <!--<Button Style="{StaticResource FilterButton}"/>-->
                                    <TextBox x:Name="txtDteqDescriptionFilter" 
                                             Style="{StaticResource FilterTextBoxBase}"
                                             PreviewKeyDown="DteqGridFilter" />
                                    <!--Text="{Binding Filter}"-->


                                </Grid>
                            </DataGridTextColumn.Header>
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                    <Setter Property="Margin" Value="5 0"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                            <DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="TextBox">
                                    <Setter Property="TextAlignment" Value="Left" />
                                    <Setter Property="BorderThickness" Value="0"/>
                                </Style>
                            </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>

                        <!--Area-->
                        <DataGridTemplateColumn x:Name="dteqArea"
                                                Width="75"
                                                SortMemberPath="Area.Tag"
                                                HeaderStyle="{StaticResource DataGridColumnHeaderWithFilterBase}"
                                        Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource AreaViewProxy}}"
                                                >
                            <DataGridTemplateColumn.Header>

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="Area" 
                                               Grid.Row="0" Grid.ColumnSpan="2"
                                               VerticalAlignment="Center" HorizontalAlignment="Center" Padding="5 2 5 2"/>
                                    <!--<Button Style="{StaticResource FilterButton}"/>-->
                                    <TextBox x:Name="txtDteqAreaFilter" 
                                             Style="{StaticResource FilterTextBoxBase}"
                                             PreviewKeyDown="DteqGridFilter" />
                                    <!--Text="{Binding Filter}"-->

                                </Grid>
                            </DataGridTemplateColumn.Header>

                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Area.Tag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                               MouseLeftButtonDown="FastEditEvent" />

                                    <!-- CAUSES Disapearing when inside "Text" : UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True-->

                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <ComboBox ItemsSource="{Binding Path=DataContext.ListManager.AreaList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,
                                                                    RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"
                                              SelectedItem="{Binding Area, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              DisplayMemberPath="Tag"
                                              Text="{Binding Area.Tag}"
                                              HorizontalContentAlignment="Left"
                                              IsEditable="False" IsTextSearchEnabled="True"
                                              IsSynchronizedWithCurrentItem="False"                                             
                                              BorderThickness="0"
                                              Template="{DynamicResource ComboBoxBase}"
                                              >
                                        <!--IsDropDownOpen="True"-->

                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="auto"/>
                                                        <ColumnDefinition Width="auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Grid.Column="0" Text="{Binding Tag}" HorizontalAlignment="Left" TextAlignment="Left" Width="35" Margin="10 0"/>
                                                    <TextBlock Grid.Column="1" Text="{Binding Name}" />
                                                </Grid>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>

                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>



                        <!--Fed From Model-->
                        <DataGridTemplateColumn x:Name="dteqFedFrom" MinWidth="75"
                                                SortMemberPath="FedFrom.Tag"
                                                HeaderStyle="{StaticResource DataGridColumnHeaderWithFilterBase}">
                            <DataGridTemplateColumn.Header>

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="Fed From" 
                                               Grid.Row="0" Grid.ColumnSpan="2"
                                               VerticalAlignment="Center" HorizontalAlignment="Center" Padding="5 2 5 2"/>
                                    <!--<Button Style="{StaticResource FilterButton}"/>-->
                                    <TextBox x:Name="txtDteqFedFromFilter" 
                                             Style="{StaticResource FilterTextBoxBase}"
                                             PreviewKeyDown="DteqGridFilter" />
                                    <!--Text="{Binding Filter}"-->

                                </Grid>
                            </DataGridTemplateColumn.Header>

                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding FedFrom.Tag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                               MouseLeftButtonDown="FastEditEvent">

                                    </TextBlock>

                                    <!-- CAUSES Disapearing when inside "Text" : UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True-->

                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <ComboBox ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}},Path=DataContext.ListManager.DteqList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              SelectedItem="{Binding FedFrom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              DisplayMemberPath="Tag"
                                              HorizontalContentAlignment="Center"
                                              IsEditable="False" IsTextSearchEnabled="False" IsReadOnly="True" TextSearch.Text=""
                                              IsSynchronizedWithCurrentItem="False"
                                              BorderThickness="0"
                                              Template="{DynamicResource ComboBoxBase}"
                                              />
                                    <!--IsDropDownOpen="True"-->
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>


                        <!--Line Voltage-->
                        <DataGridTemplateColumn  Header=" Line &#x0a; Voltage " x:Name="dteqLineVoltage"
                                                 SortMemberPath="LineVoltage">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding LineVoltage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N0}, ValidatesOnDataErrors=True}"
                                               MouseLeftButtonDown="FastEditEvent"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>

                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <ComboBox ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}},Path=DataContext.TypeManager.VoltageTypes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              SelectedValue="{Binding Path=LineVoltage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              DisplayMemberPath="Voltage"
                                              SelectedValuePath="Voltage"
                                              HorizontalContentAlignment="Center"
                                              IsEditable="False" IsTextSearchEnabled="True"
                                              IsSynchronizedWithCurrentItem="False"
                                              BorderThickness="0"
                                              Template="{DynamicResource ComboBoxBase}"
                                              
                                              />
                                    <!--IsDropDownOpen="True"-->
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <!--Load Voltage-->
                        <DataGridTemplateColumn Header=" Load &#x0a; Voltage " x:Name="dteqLoadVoltage"
                                                SortMemberPath="LoadVoltage">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding LoadVoltage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N0}, ValidatesOnDataErrors=True}"
                                               MouseLeftButtonDown="FastEditEvent"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>

                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <ComboBox ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}},Path=DataContext.TypeManager.VoltageTypes}"
                                              SelectedValue="{Binding Path=LoadVoltage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              DisplayMemberPath="Voltage"
                                              SelectedValuePath="Voltage"
                                              HorizontalContentAlignment="Center"
                                              IsEditable="False" IsTextSearchEnabled="True"
                                              IsSynchronizedWithCurrentItem="False"
                                              BorderThickness="0"
                                              Template="{DynamicResource ComboBoxBase}"
                                              />
                                    <!--IsDropDownOpen="True"-->
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <!--Size-->
                        <DataGridTextColumn Header="Size" x:Name="dteqSize"
                                MinWidth="50"
                                Binding="{Binding Path=Size,  StringFormat={}{0:N0}, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                    <Setter Property="Margin" Value="5 0"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <!--Unit-->
                        <DataGridTextColumn Header="Unit"
                                            MinWidth="40"
                                            IsReadOnly="True"
                                            TextBlock.TextAlignment="Left"
                                            Binding="{Binding Unit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                    <Setter Property="Margin" Value="5 0"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <!--Type-->
                        <DataGridTextColumn Header="EQ Type" x:Name="dteqType"
                                            MinWidth="75"
                                            Binding="{Binding Type, ValidatesOnDataErrors=True}"
                                            IsReadOnly="True">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                    <Setter Property="Margin" Value="5 0"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <!--LOADING-->
                        <!--Percent Loaded-->
                        <DataGridTemplateColumn Header=" Percent &#x0a;Loaded"
                                x:Name="dteqPercentLoaded"
                                MinWidth="35"
                                MaxWidth="55"
                                IsReadOnly="True">

                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <TextBlock Text="{Binding PercentLoaded, StringFormat={}{0:N0}  %, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                   Background="{Binding PercentLoaded, Converter={StaticResource PercentLoadedToColor}}"
                                                   Height="20" Width="75"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Stretch"
                                                   TextAlignment="Center"
                                                   Margin="0"
                                                   Padding="0 2 0 0"/>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--Running Amps-->
                        <DataGridTextColumn Header=" Running &#x0a;Amps" x:Name="dteqRunningAmps"
                                Binding="{Binding Path=RunningAmps,  StringFormat={}{0:N0}, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                IsReadOnly="True"/>

                        <!--FLA-->
                        <DataGridTextColumn Header=" FLA / Max &#x0a;Amps" x:Name="dteqFla" 
                                MinWidth="40"
                                Binding="{Binding Path=Fla,  StringFormat={}{0:N0}, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                IsReadOnly="True"/>


                        <!--POWER-->
                        <!--Power Factor-->
                        <DataGridTextColumn Header=" PF " x:Name="dteqPowerFactor" 
                                        Width="40"
                                        Binding="{Binding Path=PowerFactor, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        IsReadOnly="True"
                                        Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource PowerViewProxy}}"/>

                        <DataGridTextColumn Header=" Conn &#x0a; kVA " x:Name="dteqConnectedKva"
                                Binding="{Binding Path=ConnectedKva,  StringFormat={}{0:N0}, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                IsReadOnly="True"
                                Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource PowerViewProxy}}"/>

                        <DataGridTextColumn Header=" Dem &#x0a; kVA " x:Name="dteqDemandKva"
                                Binding="{Binding Path=DemandKva,  StringFormat={}{0:N0}, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                IsReadOnly="True"
                                Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource PowerViewProxy}}"/>

                        <DataGridTextColumn Header=" Dem &#x0a; kW " x:Name="dteqDemandKw" 
                                Binding="{Binding Path=DemandKw,  StringFormat={}{0:N0}, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                IsReadOnly="True"
                                Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource PowerViewProxy}}"/>

                        <DataGridTextColumn Header=" Dem &#x0a; kVAR " x:Name="dteqDemandKvar" 
                                Binding="{Binding Path=DemandKvar,  StringFormat={}{0:N0}, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                IsReadOnly="True"
                                Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource PowerViewProxy}}"/>

                        <!--OCPD-->
                        <DataGridTextColumn Header=" OCPD &#x0a; Type "
                                Binding="{Binding PdType, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource OcpdColumnHeader}" 
                                Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource OcpdViewProxy}}"/>

                        <DataGridTextColumn Header=" OCPD &#x0a; Trip "
                                Binding="{Binding PdSizeTrip, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource OcpdColumnHeader}" 
                                Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource OcpdViewProxy}}"/>

                        <DataGridTextColumn Header=" OCPD &#x0a; Frame "
                                Binding="{Binding PdSizeFrame, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource OcpdColumnHeader}" 
                                Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource OcpdViewProxy}}"/>


                        <!--CABLE-->
                        <DataGridTextColumn Header=" Cable &#x0a; Qty " x:Name="dteqCableQty"
                                Binding="{Binding Path=PowerCable.QtyParallel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource CableHeaderColumn}" 
                                Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource CableViewProxy}}"/>

                        <DataGridTextColumn Header=" Cable &#x0a; Size " x:Name="dteqCableSize" 
                                Binding="{Binding Path=PowerCable.Size, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource CableHeaderColumn}" 
                                Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource CableViewProxy}}"/>

                        <DataGridTextColumn Header=" Base &#x0a; Amps " x:Name="dteqCableBaseAmps" 
                                Binding="{Binding Path=PowerCable.BaseAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource CableHeaderColumn}" 
                                Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource CableViewProxy}}"/>

                        <!--<DataGridTextColumn Header="   Req'd&#x0a;Sz. Amps" x:Name="dteqCableRequiredSizingAmps" 
                                Binding="{Binding Path=PowerCable.RequiredSizingAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource CableHeaderColumn}" 
                                        Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource CableViewProxy}}"/>-->


                        <DataGridTextColumn Header=" Cable &#x0a;Derating" x:Name="dteqCableDerating" 
                                Binding="{Binding Path=PowerCable.Derating, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource CableHeaderColumn}" 
                                Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource CableViewProxy}}"/>

                        <DataGridTextColumn Header="Derated &#x0a;Amps" x:Name="dteqCableDeratedAmps" 
                                Binding="{Binding Path=PowerCable.DeratedAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource CableHeaderColumn}" 
                                        Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource CableViewProxy}}"/>

                        <DataGridTextColumn Header="Req'd&#x0a;Amps" x:Name="dteqCableRequiredAmps" 
                                Binding="{Binding Path=PowerCable.RequiredAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource CableHeaderColumn}" 
                                        Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource CableViewProxy}}"/>
                    </DataGrid.Columns>

                    <DataGrid.RowDetailsTemplate>
                        <DataTemplate>
                            <Border BorderThickness="0" Background="Beige" Padding="10">
                                <Grid Margin="5,0,0,0" MinWidth="650" HorizontalAlignment="Left">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="125"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                    </Grid.RowDefinitions>

                                </Grid>
                            </Border>
                        </DataTemplate>
                    </DataGrid.RowDetailsTemplate>

                    <DataGrid.RowValidationRules>
                        <!--<rules:InvalidFedFromRule ValidatesOnTargetUpdated="True" ValidationStep="UpdatedValue" />-->
                    </DataGrid.RowValidationRules>

                    <DataGrid.RowValidationErrorTemplate>
                        <ControlTemplate>
                            <Grid Margin="5,2,0,0"
                                ToolTip="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Path=(Validation.Errors)[0].ErrorContent}"
                                ToolTipService.InitialShowDelay="50">

                                <!--<Ellipse StrokeThickness="0" Fill="Red" 
                                Width="{TemplateBinding FontSize}" 
                                Height="{TemplateBinding FontSize}" />-->
                                <TextBlock Text="X" FontSize="15" 
                                    FontWeight="UltraBold" Foreground="Red" 
                                    HorizontalAlignment="Stretch"  />
                            </Grid>
                        </ControlTemplate>
                    </DataGrid.RowValidationErrorTemplate>
                </DataGrid>
            </Grid>

            <!--ADD EQUIPMENT-->
            <Grid x:Name="gridAdding" Grid.Row="3"  
                  Grid.Column="3" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="15"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>


                <!--ADD DTEQ-->
                <!--Tags-->
                <TextBlock Text="Tag" Margin="10 5 0 5"
                    Grid.Row="1" Grid.Column="2" FontSize="10" />

                <TextBlock Text="Type" Margin="10 5 0 5"
                    Grid.Row="1" Grid.Column="3" FontSize="10" />

                <TextBlock Text="Description" Margin="10 5 0 5"
                    Grid.Row="1" Grid.Column="4" FontSize="10" />

                <TextBlock Text="Area" Margin="10 5 0 5"
                    Grid.Row="1" Grid.Column="5" FontSize="10" />

                <TextBlock Text="Fed From" Margin="10 5 0 5"
                    Grid.Row="1" Grid.Column="6" FontSize="10" />

                <TextBlock Text="Size" Margin="10 5 0 5"
                    Grid.Row="1" Grid.Column="7" FontSize="10" />

                <TextBlock Text="Unit" Margin="10 5 0 5"
                     Grid.Row="1" Grid.Column="8" FontSize="10" />

                <TextBlock Text="Line Voltage" Margin="10 5 0 5"
                    Grid.Row="1" Grid.Column="9" FontSize="10" />

                <TextBlock Text="Load Voltage" Margin="10 5 0 5"
                    Grid.Row="1" Grid.Column="10" FontSize="10" />


                <!--ADD DTEQ-->
                <Button Content="Add Dist. Eq." Height="23" Width="100"
                        Grid.Row="2" Grid.Column="1"
                        Style="{StaticResource GreenButton}"
                        Command="{Binding Path=AddDteqCommand}"
                        CommandParameter="{Binding DteqToAddValidator}"
                        Margin="0 0 10 0" PreviewMouseLeftButtonDown="btnAddDteq_PreviewMouseLeftButtonDown" MouseLeave="btnAddDteq_MouseLeave" 
                         Visibility="Collapsed"/>
                <!--TextBoxes/Combo Boxes-->

                <TextBox x:Name ="txtDteqTag"  
                        Grid.Row="2" Grid.Column="2"
                        Width="75" Height="23"
                        Text="{Binding DteqToAddValidator.Tag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        PreviewMouseDown="txtDteqTag_PreviewMouseDown" LostFocus="txtDteqTag_LostFocus"
                        Margin="5 0 5 0"/>

                <ComboBox Grid.Row="2" Grid.Column="3"
                          Template="{DynamicResource ComboBoxBase}"
                        d:Text="MCC"
                        ItemsSource="{Binding Source={h:EnumBindingSource {x:Type edt:DteqTypes}}}"
                        Text="{Binding DteqToAddValidator.Type}"                       
                        IsEditable="False" IsTextSearchEnabled="True"
                        Margin="5 0 5 0"/>


                <TextBox Grid.Row="2" Grid.Column="4"
                        MinWidth="100" Height="23"
                        Text="{Binding DteqToAddValidator.Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        Margin="5 0 5 0">

                </TextBox>

                <ComboBox Grid.Row="2" Grid.Column="5"
                          Template="{DynamicResource ComboBoxBase}"
                          Width="75"
                          ItemsSource="{Binding ListManager.AreaList}"
                          SelectedValuePath="Tag"
                          DisplayMemberPath="Tag"
                          SelectedValue="{Binding DteqToAddValidator.AreaTag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=False}"
                          IsSynchronizedWithCurrentItem="False"
                          Text="{Binding DteqToAddValidator.AreaTag}"
                          IsEditable="False" IsTextSearchEnabled="True"
                          Margin="5 0 5 0"/>

                <ComboBox Grid.Row="2" Grid.Column="6"
                          Template="{DynamicResource ComboBoxBase}"
                          Width="75"
                          ItemsSource="{Binding Source={StaticResource dteqList}}"
                          DisplayMemberPath="Tag"
                          IsSynchronizedWithCurrentItem="False"
                          Text="{Binding DteqToAddValidator.FedFromTag}"
                          IsEditable="False" IsTextSearchEnabled="True"
                          Margin="5 0 5 0"/>



                <TextBox Grid.Row="2" Grid.Column="7"
                            Width="50" Height="23"
                            d:Text="10000"
                            Text="{Binding DteqToAddValidator.Size, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Margin="5 0 5 0">

                </TextBox>

                <ComboBox Grid.Row="2" Grid.Column="8"
                          Template="{DynamicResource ComboBoxBase}"
                          Width="50"
                          d:Text="13800"
                          ItemsSource="{Binding Source={h:EnumBindingSource {x:Type edt:Units}}}"
                          SelectedValue="{Binding DteqToAddValidator.Unit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=False}"
                          Text="{Binding DteqToAddValidator.Unit}"
                          Margin="5 0 5 0"/>

                <ComboBox Grid.Row="2" Grid.Column="9"
                            Width="65"
                            d:Text="4160"
                            ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}},Path=DataContext.VoltageTypes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            SelectedValue="{Binding DteqToAddValidator.LineVoltage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=False}"
                            Text="{Binding DteqToAddValidator.LoadVoltage}"
                            IsEditable="True" IsTextSearchEnabled="True"
                            HorizontalContentAlignment="Center"
                            Margin="5 0 5 0"/>

                <ComboBox Grid.Row="2" Grid.Column="10"
                            Width="65"
                            d:Text="4160"
                            ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}},Path=DataContext.VoltageTypes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            SelectedValue="{Binding DteqToAddValidator.LoadVoltage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=False}"
                            Text="{Binding DteqToAddValidator.LoadVoltage}"
                            IsEditable="True" IsTextSearchEnabled="True"
                            HorizontalContentAlignment="Center"
                            Margin="5 0 5 0"/>

                <!--ADD LOAD-->
                <!--
                <StackPanel Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="10">
                    <Expander x:Name="ExportExpander" 
                              Header="Add Load" ExpandDirection="Right">

                        <subViews:AddLoadView Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="11"
                                      DataContext="{Binding}"/>
                    </Expander>
                </StackPanel>-->

                <!--Tags-->
                <TextBlock Text="Tag" Margin="10 5 0 5"
                    Grid.Row="4" Grid.Column="2" FontSize="10" />
                <TextBlock Text="Type" Margin="10 5 0 5"
                    Grid.Row="4" Grid.Column="3" FontSize="10" />

                <TextBlock Text="Description" Margin="10 5 0 5"
                    Grid.Row="4" Grid.Column="4" FontSize="10" />

                <TextBlock Text="Area" Margin="10 5 0 5"
                    Grid.Row="4" Grid.Column="5" FontSize="10" />
                <TextBlock Text="Fed From" Margin="10 5 0 5"
                    Grid.Row="4" Grid.Column="6" FontSize="10" />

                <TextBlock Text="Size" Margin="10 5 0 5"
                    Grid.Row="4" Grid.Column="7" FontSize="10" />
                <TextBlock Text="Unit" Margin="10 5 0 5"
                    Grid.Row="4" Grid.Column="8" FontSize="10" />

                <TextBlock Text="Voltage" Margin="10 5 0 5"
                    Grid.Row="4" Grid.Column="9" FontSize="10" />
                <TextBlock Text="Load Factor" Margin="10 5 0 5"
                    Grid.Row="4" Grid.Column="10" FontSize="10" />


                <!--ADD LOAD-->
                <Button Content="Add Load"  Height="23" Width="100"
                        Grid.Row="5" Grid.Column="1"
                        Style="{StaticResource GreenButton}"
                        Command="{Binding Path=AddLoadCommand}"
                        CommandParameter="{Binding LoadToAddValidator}"
                        Margin="0 0 10 0" 
                        Visibility="Collapsed"/>
                <!--Text/Combo Boxes-->
                <TextBox x:Name ="txtLoadTag"  
                    Grid.Row="5" Grid.Column="2"
                    Width="75" Height="23"
                    Text="{Binding LoadToAddValidator.Tag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    PreviewMouseDown="txtLoadTag_PreviewMouseDown" LostFocus="txtLoadTag_LostFocus"
                    Margin="5,0,5,0" VerticalAlignment="Bottom">
                </TextBox>

                <ComboBox Grid.Row="5" Grid.Column="3" 
                          Template="{DynamicResource ComboBoxBase}"
                            d:Text="MOTOR"
                            MinWidth="100"
                            ItemsSource="{Binding Source={h:EnumBindingSource {x:Type edt:LoadTypes}}}"
                            SelectedValue="{Binding LoadToAddValidator.Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=False}"
                            Text="{Binding LoadToAddValidator.Type}"
                            IsEditable="False" IsTextSearchEnabled="True"  
                            Margin="5 0 5 0"/>

                <TextBox Grid.Row="5" Grid.Column="4"
                    MinWidth="100" Height="23"
                    Text="{Binding LoadToAddValidator.Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Margin="5 0 5 0">
                </TextBox>

                <ComboBox Grid.Row="5" Grid.Column="5" 
                          Template="{DynamicResource ComboBoxBase}"
                          
                          Width="75"
                          ItemsSource="{Binding ListManager.AreaList}"
                          SelectedValuePath="Tag"
                          DisplayMemberPath="Tag"
                          SelectedValue="{Binding LoadToAddValidator.AreaTag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=False}"
                          IsSynchronizedWithCurrentItem="False"
                          Text="{Binding LoadToAddValidator.AreaTag}"
                          IsEditable="False" IsTextSearchEnabled="True"  
                          Margin="5 0 5 0"/>

                <!--Fed From-->
                <ComboBox Grid.Row="5" Grid.Column="6" 
                          Template="{DynamicResource ComboBoxBase}"
                          
                          Width="75"
                          ItemsSource="{Binding Source={StaticResource dteqList}}"
                          SelectedValuePath="Tag"
                          DisplayMemberPath="Tag"
                          SelectedValue="{Binding LoadToAddValidator.FedFromTag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=False}"
                          IsSynchronizedWithCurrentItem="False"
                          Text="{Binding LoadToAddValidator.FedFromTag}"
                          IsEditable="False" IsTextSearchEnabled="True"  
                          Margin="5 0 5 0"/>




                <TextBox Grid.Row="5" Grid.Column="7"
                    Width="50" Height="23"
                    Text="{Binding LoadToAddValidator.Size, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Margin="5 0 5 0">

                </TextBox>

                <ComboBox Grid.Row="5" Grid.Column="8"
                          Template="{DynamicResource ComboBoxBase}"
                          Width="50"
                          ItemsSource="{Binding Source={h:EnumBindingSource {x:Type edt:Units}}}"
                          SelectedValue="{Binding LoadToAddValidator.Unit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=False}"
                          Text="{Binding LoadToAddValidator.Unit}"
                          Margin="5 0 5 0"/>

                <ComboBox Grid.Row="5" Grid.Column="9"
                    MinWidth="65"
                    d:Text="13800"
                    ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}},Path=DataContext.VoltageTypes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    SelectedValue="{Binding LoadToAddValidator.Voltage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=False}"
                    Text="{Binding LoadToAddValidator.Voltage}"
                    IsEditable="True" IsTextSearchEnabled="True"
                          HorizontalContentAlignment="Center"
                    Margin="5 0 5 0"/>

                <TextBox Grid.Row="5" Grid.Column="10"
                    MinWidth="60" Height="23"
                    Text="{Binding LoadToAddValidator.LoadFactor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Margin="5 0 5 0">
                </TextBox>
            </Grid>


            <!--LOADS-->
            <!--Grid-->
            <!--<Grid Grid.Row="{StaticResource load}" Grid.Column="3">-->
            <Grid Grid.Row="4" Grid.Column="3" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto" MinWidth="485" SharedSizeGroup="A"/>

                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>


                <TextBlock Margin="10 20 0 0"
                           Grid.Row="0" Grid.Column="0"
                           Width="200"
                           
                           HorizontalAlignment="Left"
                           FontSize="14" 
                           FontWeight="SemiBold">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Text" Value="Load List" />

                            <Style.Triggers>
                                <DataTrigger Binding="{Binding LoadListLoaded}" Value="False">
                                    <Setter Property="Text" Value="{Binding SelectedDteq.Tag, StringFormat={}{0:N0} Loads }"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" 
                            Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2">



                    <!--<Button 
                            Width="80" Height="17"
                            Margin="5 0"
                            VerticalAlignment="Bottom"
                            Command="{Binding Path=ToggleRowDetailViewCommand}"
                            >
                        <TextBlock Text="Row Details" Margin="0 -1 0 0"/>
                    </Button>-->

                    <Button 
                            Width="80" Height="17"
                            Margin="5 0"
                            VerticalAlignment="Bottom"
                            Command="{Binding Path=TogglePowerViewLoadCommand}"
                            >
                        <TextBlock Text="Power Data" Margin="0 -1 0 0"/>
                    </Button>

                    <Button 
                            Width="80" Height="17"
                            Margin="5 0"
                            VerticalAlignment="Bottom"
                            Command="{Binding Path=ToggleOcpdViewLoadCommand}"
                            >
                        <TextBlock Text="OCDP Data" Margin="0 -1 0 0"/>
                    </Button>

                    <Button 
                            Width="80" Height="17"
                            Margin="5 0"
                            VerticalAlignment="Bottom"
                            Command="{Binding Path=ToggleCableViewLoadCommand}"
                            >
                        <TextBlock Text="Cable Data" Margin="0 -1 0 0"/>
                    </Button>
                    <Button 
                            Width="80" Height="17"
                            Margin="5 0"
                            VerticalAlignment="Bottom"
                            Command="{Binding Path=ToggleCompViewLoadCommand}"
                            >
                        <TextBlock Text="Components" Margin="0 -1 0 0"/>
                    </Button>
                </StackPanel>



                <!--LOAD-->
                <!--DETAILS VIEW-->
                <TextBlock Text="Load Details"
                           Grid.Row="0" Grid.Column="3" 
                           VerticalAlignment="Bottom"
                           Margin="10 0 0 0"/>

                <Border Grid.Row="1" Grid.Column="3" 
                        BorderThickness="1" BorderBrush="Black" Background="Transparent"
                        Margin="5">

                    <ContentControl x:Name="LoadDetailsContent" 
                                    Grid.Row="0" Grid.Column="3"
                                    >

                    </ContentControl>
                </Border>

                <GridSplitter Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Stretch"   
                              Grid.Row="0" Grid.RowSpan="2"
                              Width="3" Background="AliceBlue"
                              Margin="2 0" 
                              Visibility="{Binding ElectricalViewGridSplitterVisibility}"/>

                <!--LOAD-->
                <!--DATA GRID-->
                <DataGrid x:Name="dgdAssignedLoads" 
                          Grid.Row="1"  Grid.Column="0" Grid.ColumnSpan="3"
                          HorizontalAlignment="Left" VerticalAlignment="Stretch" 
                          d:Height="440"
                          Margin="5 5 13 5"
                          FrozenColumnCount="1"
                          
                          
                          
                          ItemsSource="{Binding Path=AssignedLoads, Mode=OneWay, UpdateSourceTrigger=PropertyChanged,IsAsync=True}"
                          SelectedItem="{Binding SelectedLoad, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          AutoGenerateColumns="False"
                          EnableRowVirtualization="False"
                          EnableColumnVirtualization="False"
                          ScrollViewer.CanContentScroll="False"
                          VirtualizingPanel.IsVirtualizing="False"
                          VirtualizingStackPanel.VirtualizationMode="Recycling"
                          RowDetailsVisibilityMode="{Binding ToggleRowDetailViewProp}"
                          SelectionChanged="dgdAssignedLoads_SelectionChanged" PreviewKeyDown="dgdAssignedLoads_PreviewKeyDown" MouseLeave="dgdAssignedLoads_MouseLeave" 
                          BeginningEdit="dgdAssignedLoads_BeginningEdit" CellEditEnding="dgdAssignedLoads_CellEditEnding"
                          
                          >
                    <DataGrid.Resources>
                        <Style x:Key="errorStyle" TargetType="{x:Type TextBlock}">
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="ToolTipService.InitialShowDelay" Value="100"/>
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="True">
                                    <Setter Property="Background" Value="Red"/>
                                    <Setter Property="Foreground" Value="Red"/>
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>

                        <viewModifiers:BindingProxy x:Key="PowerViewProxy" Data="{Binding LoadGridViewModifier.Power}" />
                        <viewModifiers:BindingProxy x:Key="OcpdViewProxy" Data="{Binding LoadGridViewModifier.Ocpd}" />
                        <viewModifiers:BindingProxy x:Key="CableViewProxy" Data="{Binding LoadGridViewModifier.Cable}" />
                        <viewModifiers:BindingProxy x:Key="CompViewProxy" Data="{Binding LoadGridViewModifier.Comp}" />

                    </DataGrid.Resources>


                    <!--Height="{Binding LoadGridHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"-->
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Set FedFrom" PreviewMouseDown="LoadGridContextMenu_SetFedFrom" Height="20"/>
                            <MenuItem Header="Delete" Height="20" PreviewMouseDown="LoadGridContextMenu_Delete"/>
                        </ContextMenu>
                    </DataGrid.ContextMenu>

                    <DataGrid.Columns>
                        <!--Textblock cell padding style in this.resources Move to ResDict-->

                        <!--Tag-->
                        <DataGridTextColumn x:Name="loadTag"
                                            MinWidth="75"
                                            Binding="{Binding Path=Tag, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                            ElementStyle="{StaticResource ColumnElementStyle}"
                                            HeaderStyle="{StaticResource DataGridColumnHeaderWithFilterBase}">

                            <DataGridTextColumn.Header>

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="Tag" 
                                                    Grid.Row="0" Grid.ColumnSpan="2"
                                                    VerticalAlignment="Center" HorizontalAlignment="Center" Padding="5 2 5 2"/>
                                    <!--<Button Style="{StaticResource FilterButton}"/>-->
                                    <TextBox x:Name="txtLoadTagFilter" 
                                             Style="{StaticResource FilterTextBoxBase}"
                                             PreviewKeyDown="LoadGridFilter" />
                                    <!--Text="{Binding Filter}"-->

                                </Grid>
                            </DataGridTextColumn.Header>

                        </DataGridTextColumn>

                        <!--Description-->
                        <DataGridTextColumn x:Name="loadDescription" MinWidth="150" 
                                            Binding="{Binding Path=Description, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                            HeaderStyle="{StaticResource DataGridColumnHeaderWithFilterBase}">

                            <DataGridTextColumn.Header>

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="Description" 
                                                    Grid.Row="0" Grid.ColumnSpan="2"
                                                    VerticalAlignment="Center" HorizontalAlignment="Center" Padding="5 2 5 2"/>
                                    <!--<Button Style="{StaticResource FilterButton}"/>-->
                                    <TextBox x:Name="txtLoadDescriptionFilter" 
                                             Style="{StaticResource FilterTextBoxBase}"
                                             PreviewKeyDown="LoadGridFilter" />
                                    <!--Text="{Binding Filter}"-->

                                </Grid>
                            </DataGridTextColumn.Header>


                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                    <Setter Property="Margin" Value="5 0"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                            <DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="TextBox">
                                    <Setter Property="TextAlignment" Value="Left" />
                                    <Setter Property="BorderThickness" Value="0"/>
                                </Style>
                            </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>

                        <!--Area-->
                        <DataGridTemplateColumn x:Name="loadArea"
                                                MinWidth="75"
                                                CanUserSort="True"
                                                CanUserReorder="True"
                                                SortMemberPath="Area.Tag"
                                                HeaderStyle="{StaticResource DataGridColumnHeaderWithFilterBase}"
                                                Width="60">

                            <DataGridTemplateColumn.Header>

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="Area" 
                                               Grid.Row="0" Grid.ColumnSpan="2"
                                               VerticalAlignment="Center" HorizontalAlignment="Center" Padding="5 2 5 2"/>
                                    <!--<Button Style="{StaticResource FilterButton}"/>-->
                                    <TextBox x:Name="txtLoadAreaFilter" 
                                             Style="{StaticResource FilterTextBoxBase}"
                                             PreviewKeyDown="LoadGridFilter" />
                                    <!--Text="{Binding Filter}"-->

                                </Grid>
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Area.Tag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                               MouseLeftButtonDown="FastEditEvent" 
                                               />

                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <ComboBox ItemsSource="{Binding Path=DataContext.ListManager.AreaList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,
                                                                    RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"
                                              SelectedItem="{Binding Area, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              DisplayMemberPath="Tag"
                                              Text="{Binding Area.Tag}"
                                              HorizontalContentAlignment="Left"
                                              IsEditable="False" IsTextSearchEnabled="True"
                                              IsSynchronizedWithCurrentItem="False"                                             
                                              BorderThickness="0"
                                              Template="{DynamicResource ComboBoxBase}"
                                              >
                                        <!--IsDropDownOpen="True"-->

                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="auto"/>
                                                        <ColumnDefinition Width="auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Grid.Column="0" Text="{Binding Tag}" HorizontalAlignment="Left" TextAlignment="Left" Width="35" Margin="10 0"/>
                                                    <TextBlock Grid.Column="1" Text="{Binding Name}" />
                                                </Grid>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>

                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>





                        <!--Fed From Model-->
                        <DataGridTemplateColumn x:Name="loadFedFrom" MinWidth="75"
                                                CanUserSort="True"
                                                CanUserReorder="True"
                                                SortMemberPath="FedFrom.Tag"
                                                HeaderStyle="{StaticResource DataGridColumnHeaderWithFilterBase}">

                            <DataGridTemplateColumn.Header>

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="Fed From" 
                                               Grid.Row="0" Grid.ColumnSpan="2"
                                               VerticalAlignment="Center" HorizontalAlignment="Center" Padding="5 2 5 2"/>
                                    <!--<Button Style="{StaticResource FilterButton}"/>-->
                                    <TextBox x:Name="txtLoadFedFromFilter" 
                                             Style="{StaticResource FilterTextBoxBase}"
                                             PreviewKeyDown="LoadGridFilter" />
                                    <!--Text="{Binding Filter}"-->

                                </Grid>
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding FedFrom.Tag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                               MouseLeftButtonDown="FastEditEvent" />

                                    <!-- CAUSES Disapearing when inside "Text" : UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True-->

                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <ComboBox ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}},Path=DataContext.ListManager.DteqList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              SelectedItem="{Binding Path=FedFrom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              DisplayMemberPath="Tag"
                                              HorizontalContentAlignment="Center"
                                              IsEditable="False" IsTextSearchEnabled="False" IsReadOnly="True" TextSearch.Text=""
                                              IsSynchronizedWithCurrentItem="False"
                                              BorderThickness="0" 
                                              Template="{DynamicResource ComboBoxBase}"
                                              
                                              />
                                    <!--IsDropDownOpen="True"-->
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <!--Voltage-->
                        <DataGridTemplateColumn CanUserReorder="True"
                                                CanUserSort="True"
                                                SortMemberPath="Voltage"
                                                MinWidth="55"
                                                HeaderStyle="{StaticResource DataGridColumnHeaderWithFilterBase}">
                            <DataGridTemplateColumn.Header>

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="Voltage" 
                                               Grid.Row="0" Grid.ColumnSpan="2"
                                               VerticalAlignment="Center" HorizontalAlignment="Center" Padding="5 2 5 2"/>
                                    <!--<Button Style="{StaticResource FilterButton}"/>-->
                                    <TextBox x:Name="txtLoadVoltageFilter" 
                                             Style="{StaticResource FilterTextBoxBase}"
                                             PreviewKeyDown="LoadGridFilter" />
                                    <!--Text="{Binding Filter}"-->
                                </Grid>

                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Voltage, ValidatesOnDataErrors=True}"
                                               MouseLeftButtonDown="FastEditEvent"
                                              />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>

                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <ComboBox ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}},Path=DataContext.TypeManager.VoltageTypes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              SelectedValue="{Binding Voltage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              HorizontalContentAlignment="Center"
                                              DisplayMemberPath="Voltage"
                                              SelectedValuePath="Voltage"
                                              IsEditable="False" IsTextSearchEnabled="True"
                                              IsSynchronizedWithCurrentItem="False"
                                              BorderThickness="0"
                                              Width="50"
                                              Template="{DynamicResource ComboBoxBase}"
                                              
                                              />
                                    <!--IsDropDownOpen="True"-->
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <!--Size-->
                        <DataGridTextColumn x:Name="loadSize"
                                            CanUserReorder="True"
                                            CanUserSort="True"
                                            SortMemberPath="Size"
                                            HeaderStyle="{StaticResource DataGridColumnHeaderWithFilterBase}"
                                            Binding="{Binding Path=Size, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=Explicit, ValidatesOnDataErrors=True}" 
                                            >
                            <DataGridTextColumn.Header>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="Size"
                                                    Grid.Row="0" Grid.ColumnSpan="2"
                                                    VerticalAlignment="Center" HorizontalAlignment="Center" Padding="5 2 5 2"/>
                                    <!--<Button Style="{StaticResource FilterButton}"/>-->
                                    <TextBox x:Name="txtLoadSizeFilter" 
                                             Style="{StaticResource FilterTextBoxBase}"
                                             PreviewKeyDown="LoadGridFilter" />
                                    <!--Text="{Binding Filter}"-->

                                </Grid>
                            </DataGridTextColumn.Header>

                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                    <Setter Property="Margin" Value="5 0"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <!--Unit-->
                        <DataGridTextColumn MinWidth="40"
                                            Binding="{Binding Unit, ValidatesOnDataErrors=True}"
                                            HeaderStyle="{StaticResource DataGridColumnHeaderWithFilterBase}"
                                            IsReadOnly="True">
                            <DataGridTextColumn.Header>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="Unit"
                                                    Grid.Row="0" Grid.ColumnSpan="2"
                                                    VerticalAlignment="Center" HorizontalAlignment="Center" Padding="5 2 5 2"/>
                                    <!--<Button Style="{StaticResource FilterButton}"/>-->
                                    <TextBox x:Name="txtLoadUnitFilter" 
                                             Style="{StaticResource FilterTextBoxBase}"
                                             PreviewKeyDown="LoadGridFilter" />
                                    <!--Text="{Binding Filter}"-->

                                </Grid>
                            </DataGridTextColumn.Header>
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                    <Setter Property="Margin" Value="5 0"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <!--Type-->
                        <DataGridTextColumn x:Name="loadType"
                                            MinWidth="75"
                                            Binding="{Binding Type, ValidatesOnDataErrors=True}"
                                            HeaderStyle="{StaticResource DataGridColumnHeaderWithFilterBase}"
                                            IsReadOnly="True">
                            <DataGridTextColumn.Header>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="Load Type"
                                                    Grid.Row="0" Grid.ColumnSpan="2"
                                                    VerticalAlignment="Center" HorizontalAlignment="Center" Padding="5 2 5 2"/>
                                    <!--<Button Style="{StaticResource FilterButton}"/>-->
                                    <TextBox x:Name="txtLoadTypeFilter" 
                                             Style="{StaticResource FilterTextBoxBase}"
                                             PreviewKeyDown="LoadGridFilter" />
                                    <!--Text="{Binding Filter}"-->

                                </Grid>
                            </DataGridTextColumn.Header>
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                    <Setter Property="Margin" Value="5 0"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <!--LOADING-->

                        <DataGridTextColumn Header=" Load &#x0a;Facotor"
                                            MinWidth="50"
                                            Width="50"
                                            Binding="{Binding Path=LoadFactor, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                            IsReadOnly="True"/>


                        <!--Efficiency-->
                        <DataGridTemplateColumn Header="Eff"
                                                MinWidth="50"
                                                Width="50"
                                                IsReadOnly="True"
                                                SortMemberPath="Efficiency"
                                                >
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <TextBlock Text="{Binding Path=Efficiency, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                   HorizontalAlignment="Center"
                                                   Margin="0"/>
                                        <TextBlock Text=" %"
                                                   HorizontalAlignment="Center"/>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding Path=Efficiency, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                    BorderThickness="0"
                                    Margin="0"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>



                        <DataGridTextColumn Header="FLA"
                                            MinWidth="50"
                                            Width="50"
                                            Binding="{Binding Path=Fla, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                            IsReadOnly="True"/>

                        <!--POWER-->

                        <DataGridTextColumn Header=" PF " 
                                MinWidth="40"
                                Width="40"
                                Binding="{Binding Path=PowerFactor, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                            IsReadOnly="True"/>

                        <DataGridTextColumn Header="Running&#x0a;Amps"
                                IsReadOnly="True"
                                Binding="{Binding Path=RunningAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                Visibility="Hidden"            />

                        <DataGridTextColumn Header=" Conn &#x0a;kVA"
                                IsReadOnly="True"
                                Binding="{Binding Path=ConnectedKva, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                            Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource PowerViewProxy}}"
                                            />

                        <DataGridTextColumn Header=" Dem &#x0a;kVA"  
                                IsReadOnly="True"
                                Binding="{Binding Path=DemandKva, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                            Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource PowerViewProxy}}"
                                            />

                        <DataGridTextColumn Header=" Dem &#x0a;kW" 
                                IsReadOnly="True"
                                Binding="{Binding Path=DemandKw, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                            Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource PowerViewProxy}}"
                                            />

                        <DataGridTextColumn Header=" Dem &#x0a;kVAR" 
                                IsReadOnly="True"
                                Binding="{Binding Path=DemandKvar, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                            Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource PowerViewProxy}}"
                                            />

                        <!--OCPD-->
                        <DataGridTemplateColumn Header="PD / Starter&#x0a;Type" 
                                                HeaderStyle="{StaticResource OcpdColumnHeader}"
                                                SortMemberPath="PdType"
                                                MaxWidth="85"
                                                Width="85"
                                                Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource OcpdViewProxy}}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding PdType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                               MouseLeftButtonDown="FastEditEvent"/>

                                    <!-- CAUSES Disapearing when inside "Text" : UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True-->

                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <ComboBox ItemsSource="{Binding Path=DataContext.TypeManager.OcpdTypes, 
                                                                    RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                    AncestorType={x:Type Window}}}"
                                              SelectedValue="{Binding PdType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              SelectedValuePath="Type"
                                              HorizontalContentAlignment="Left"
                                              IsEditable="False" IsTextSearchEnabled="False" IsReadOnly="True" TextSearch.Text=""
                                              IsSynchronizedWithCurrentItem="False"
                                              BorderThickness="0"
                                              Template="{DynamicResource ComboBoxBase}"
                                              Padding="0 3 0 3">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Grid.Column="0" Text="{Binding Type}" HorizontalAlignment="Left" TextAlignment="Left" Width="75" Margin="15 0 0 0"/>
                                                    <TextBlock Grid.Column="1" Text="{Binding Description}" />
                                                </StackPanel>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>

                                    </ComboBox>
                                    <!--IsDropDownOpen="True"-->
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <!--Frame-->
                        <DataGridTextColumn Header="PD / MCP&#x0a;Frame" 
                                Binding="{Binding Path=PdSizeFrame, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource OcpdColumnHeader}" 
                                            Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource OcpdViewProxy}}"/>

                        <!--Trip-->
                        <DataGridTextColumn Header="PD Trip /&#x0a;Starter Size" 
                                Binding="{Binding Path=PdSizeTrip, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource OcpdColumnHeader}" 
                                            Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource OcpdViewProxy}}"/>



                        <!--COMPONENTS-->
                        <DataGridTemplateColumn  x:Name="loadDisconnect" 
                                                MinWidth="40"
                                                HeaderStyle="{StaticResource ComponentColumnHeader}" 
                                                Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource CompViewProxy}}">
                            <DataGridTemplateColumn.Header>
                                <TextBlock Text="Local &#x0a;Disc. Sw." ToolTip="The last component in the circuit before the load." ToolTipService.InitialShowDelay="50"/>

                            </DataGridTemplateColumn.Header>

                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding Path=DisconnectBool, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              HorizontalAlignment="Center"
                                              Command="{Binding Path=DataContext.ToggleLoadDisconnectCommand, 
                                                                RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"
                                              />
                                    <!--CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"-->

                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Type}" Value="XFR">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Setter Property="ToolTip" Value="Disabled for Distribution Equipment."/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="SWG">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Setter Property="ToolTip" Value="Disabled for Distribution Equipment."/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="MCC">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Setter Property="ToolTip" Value="Disabled for Distribution Equipment."/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="Drive" x:Name="loadDrive" 
                                                MinWidth="40"
                                                HeaderStyle="{StaticResource ComponentColumnHeader}" 
                                                Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource CompViewProxy}}">

                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding Path=DriveBool, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center"
                                              Command="{Binding Path=DataContext.ToggleLoadDriveCommand, 
                                                                RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type UserControl}}}"/>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Type}" Value="XFR">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Setter Property="ToolTip" Value="Disabled for Non Motor Loads"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="SWG">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Setter Property="ToolTip" Value="Disabled for Non Motor Loads"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="MCC">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Setter Property="ToolTip" Value="Disabled for Non Motor Loads"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="HEATER">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Setter Property="ToolTip" Value="Disabled for Non Motor Loads"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="PANEL">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Setter Property="ToolTip" Value="Disabled for Non Motor Loads"/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <CheckBox>
                                    </CheckBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="LCS"
                                                MinWidth="40"
                                                HeaderStyle="{StaticResource ComponentColumnHeader}" 
                                                Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource CompViewProxy}}">

                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding Path=LcsBool, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center"/>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Type}" Value="XFR">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Setter Property="ToolTip" Value="Disabled for Distribution Equipment."/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="SWG">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Setter Property="ToolTip" Value="Disabled for Distribution Equipment."/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="MCC">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Setter Property="ToolTip" Value="Disabled for Distribution Equipment."/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <CheckBox>
                                    </CheckBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>


                        <DataGridTextColumn Header="Local Disc.&#x0a;Tag"
                                MinWidth="75"
                                Binding="{Binding Path=Disconnect.Tag, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource ComponentColumnHeader}" 
                                Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource CompViewProxy}}"
                                            />

                        <DataGridTextColumn Header="Drive.&#x0a;Tag"
                                MinWidth="75"
                                Binding="{Binding Path=Drive.Tag, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource ComponentColumnHeader}" 
                                Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource CompViewProxy}}"/>

                        <DataGridTextColumn Header="Lcs&#x0a;Tag"
                                MinWidth="75"
                                Binding="{Binding Path=Lcs.Tag, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource ComponentColumnHeader}" 
                                Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource CompViewProxy}}"/>

                        <!--CABLE-->
                        <DataGridTextColumn Header="Cable&#x0a;Qty" x:Name="loadCableQty" 
                                Width="50"
                                Binding="{Binding Path=PowerCable.QtyParallel, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource CableHeaderColumn}" 
                                            Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource CableViewProxy}}"
                                            />

                        <DataGridTextColumn Header="Cable&#x0a;Size" x:Name="loadCableSize" 
                                Width="50"
                                Binding="{Binding Path=PowerCable.Size, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource CableHeaderColumn}" 
                                            Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource CableViewProxy}}"
                                            />

                        <DataGridTextColumn Header="Base&#x0a;Amps" x:Name="loadCableBaseAmps" 
                                Width="50"
                                Binding="{Binding Path=PowerCable.BaseAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource CableHeaderColumn}" 
                                            Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource CableViewProxy}}"
                                            />


                        <DataGridTextColumn Header="Cable&#x0a;Derating" x:Name="loadCableDerating" 
                                Width="60"
                                Binding="{Binding Path=PowerCable.Derating, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource CableHeaderColumn}" 
                                            Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource CableViewProxy}}"
                                            />

                        <DataGridTextColumn Header="Derated&#x0a;Amps" x:Name="loadCableDeratedAmps" 
                                Width="60"
                                Binding="{Binding Path=PowerCable.DeratedAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource CableHeaderColumn}" 
                                            Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource CableViewProxy}}"
                                            />

                        <DataGridTextColumn Header="Req'd&#x0a;Amps" x:Name="loadCableRequiredAmps" 
                                Width="50"
                                Binding="{Binding Path=PowerCable.RequiredAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                HeaderStyle="{StaticResource CableHeaderColumn}" 
                                            Visibility="{Binding Data, Converter={StaticResource BoolToVisibility}, Source={StaticResource CableViewProxy}}"
                                            />

                    </DataGrid.Columns>

                    <DataGrid.RowValidationErrorTemplate>
                        <ControlTemplate>
                            <Grid Margin="5,2,0,0"
                                ToolTip="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Path=(Validation.Errors)[0].ErrorContent}"
                                ToolTipService.InitialShowDelay="50">

                                <!--<Ellipse StrokeThickness="0" Fill="Red" 
                                Width="{TemplateBinding FontSize}" 
                                Height="{TemplateBinding FontSize}" />-->
                                <TextBlock Text="X" FontSize="15" 
                                    FontWeight="UltraBold" Foreground="Red" 
                                    HorizontalAlignment="Stretch"  />
                            </Grid>
                        </ControlTemplate>
                    </DataGrid.RowValidationErrorTemplate>

                </DataGrid>

                <!--***********************************-->
                <!--******   BOTTOM STATUS BAR   ******-->
                <!--***********************************-->

                <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2"
                            Margin="10 0 0 5">

                    <TextBlock Text="DTEQ" FontWeight="Bold" Margin="10 0 0 0" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="   Id:  " FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="{Binding SelectedDteq.Id}" Margin="0" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>

                    <TextBlock Text="   Supplier: " FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="{Binding SelectedDteq.FedFrom.Tag}" Margin="0" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text=", " FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="{Binding SelectedDteq.FedFromId}" Margin="0" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>


                    <TextBlock Text="   Cable Id:  " FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="{Binding SelectedDteq.PowerCable.Id}" Margin="0" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>

                    <TextBlock Text="   Loads:  " FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="{Binding SelectedDteq.AssignedLoads.Count}" Margin="0" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>

                    <TextBlock Text="   Area Id:  " FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="{Binding SelectedDteq.Area.Id}" Margin="0" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>



                    <TextBlock Text="        |       " FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>

                    <TextBlock Text="LOAD" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="   Id:  " FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="{Binding SelectedLoad.Id}" Margin="0" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="   Fed From Id:  " FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="{Binding SelectedLoad.FedFromId}" Margin="0" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>

                    <TextBlock Text="   Cable Id:  " FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="{Binding SelectedLoad.PowerCable.Id}" Margin="0" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>


                    <TextBlock Text="        |       " FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="Counts" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>

                    <TextBlock Text="   Dteq:  " FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="{Binding ListManager.IDteqList.Count}" Margin="0" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="   loads:  " FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="{Binding ListManager.LoadList.Count}" Margin="0" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="   Cables:  " FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="{Binding ListManager.CableList.Count}" Margin="0" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>


                    <TextBlock Text="        |       " FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="Cables" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>

                    <TextBlock Text="   D:  " FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="{Binding SelectedDteq.PowerCable.Type}" Margin="0" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="   L:  " FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="{Binding SelectedLoad.PowerCable.Type}" Margin="0" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="{Binding SelectedDteq.SCCR}" Margin="0" FontWeight="Bold" FontSize="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                </StackPanel>
                <!--***********************************-->
                <!--***********************************-->
                <!--***********************************-->
            </Grid>

            <!--Below Dteq Grid-->
            <GridSplitter  Grid.Row="2" Grid.ColumnSpan="5" Panel.ZIndex="2" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"   
                           Height="3" Background="AliceBlue"
                           Margin="0"
                           Visibility="{Binding ElectricalViewGridSplitterVisibility}"/>

            <!--Above Load Grid-->
            <GridSplitter  Grid.Row="3" Grid.ColumnSpan="5" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
                           Height="3" Background="AliceBlue"
                           Margin="0"
                           Visibility="{Binding ElectricalViewGridSplitterVisibility}"/>
        </Grid>



    </Grid>


</UserControl>
