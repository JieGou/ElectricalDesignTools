<UserControl x:Class="WpfUI.Views.Electrical.LoadListSubViews.CableSizingViewNarrow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             
             xmlns:iconControls="clr-namespace:WpfUI.UserControls.IconControls"

             
             xmlns:syncfusion="http://schemas.syncfusion.com/wpf"

             xmlns:edtDteqModels="clr-namespace:EDTLibrary.Models.DistributionEquipment;assembly=EDTLibrary"
             xmlns:edtLoadModels="clr-namespace:EDTLibrary.Models.Loads;assembly=EDTLibrary"
             
             xmlns:controls="clr-namespace:WpfUI.Controls"
             xmlns:Converters="clr-namespace:WpfUI.Converters"

             d:DesignHeight="750
             " d:DesignWidth="315"
             d:Padding="10"
             d:Background="AliceBlue"
             
             Background="Transparent"
             >

    <UserControl.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../../Stores/ToolTips.xaml"/>
                <!--<ResourceDictionary Source="../../../Styles/EdtStyle_Teal.xaml"/>-->

            </ResourceDictionary.MergedDictionaries>

            <BooleanToVisibilityConverter x:Key="BoolToVis" />
            <Converters:InvertableBooleanToVisibilityConverter x:Key="BoolToVisInvert"/>

            <x:Array xmlns:s="clr-namespace:System;assembly=mscorlib" x:Key="array" Type="{x:Type s:Int32}">
                <s:Int32>1</s:Int32>
                <s:Int32>2</s:Int32>
                <s:Int32>3</s:Int32>
                <s:Int32>4</s:Int32>
            </x:Array>

            <Style TargetType="TextBlock">
                <Setter Property="Margin" Value="0 3"/>
                <Setter Property="FontSize" Value="12"/>
            </Style>

            <Style TargetType="TextBox">
                <Setter Property="Margin" Value="0 3"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>


            <Style TargetType="CheckBox">
                <!--<Setter Property="Margin" Value="10 0 0 0"/>-->
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

                                    <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                <Setter Property="Padding" Value="3 1"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="Margin" Value="0 3"/>
            </Style>


            <Style TargetType="TextBlock" x:Key="textBoxMouseOver">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="Margin" Value="0 3"/>
                        <Setter Property="FontSize" Value="12"/>
                        <Setter Property="Height" Value="20"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>


    <controls:EdtGroupBox Header="Power Cable Properties"
                          Margin="1">
        <Grid >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Grid Grid.ColumnSpan="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="15"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Canvas Grid.Row="0" Grid.RowSpan="2"
                       Grid.Column="1"
                        HorizontalAlignment="Right">
                    <Image Source="../../../ResourceFiles/CableIcons/CableIcon.jpg"
                       Canvas.Top="-25"
                       UseLayoutRounding="True"
                       RenderOptions.BitmapScalingMode="HighQuality">
                        <Image.LayoutTransform>
                            <TransformGroup>
                                <RotateTransform Angle="135" />
                                <ScaleTransform ScaleX="0.13"/>
                                <ScaleTransform ScaleY="0.11"/>
                            </TransformGroup>
                        </Image.LayoutTransform>

                    </Image>
                </Canvas>

                <!--Lock-->
                <CheckBox  Grid.Row="0" Grid.RowSpan="2"
                       Grid.Column="0"
                       Width="25"
                           VerticalAlignment="Top"
                       HorizontalAlignment="Left"
                       Panel.ZIndex="1"
                       Template="{DynamicResource CheckBoxTemplate_LockIcon}"
                       IsChecked="{Binding PowerCable.IsCalculationLocked}"
                       Visibility="Visible"
                       ToolTipService.InitialShowDelay="250">
                    <CheckBox.Content>
                        <StackPanel Orientation="Vertical" Background="Transparent" Visibility="Collapsed">
                            <TextBlock Text="Calculation" />
                            <TextBlock Text="Lock"/>
                        </StackPanel>
                    </CheckBox.Content>
                    <CheckBox.ToolTip>
                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="Calculation Lock" FontWeight="SemiBold" Foreground="{StaticResource ToolTipTextBrush}"/>
                            <TextBlock Text="{StaticResource CalulationLock}" Foreground="{StaticResource ToolTipTextBrush}"/>
                        </StackPanel>
                    </CheckBox.ToolTip>
                </CheckBox>

                <TextBlock Grid.Row="1" Grid.ColumnSpan="3" 
                       Text="{Binding PowerCable.Tag}"
                       d:Text="Cable Tag"
                       FontSize="15"
                       FontWeight="Bold"
                       Margin="5"/>

                <!--Cable Type-->
                <TextBlock Text="Cable Type: " Grid.Row="2" Grid.Column="0"/>
                <ComboBox 
                      Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="2" 
                      Width="175" HorizontalAlignment="Left"
                      FontWeight="Bold" FontSize="12"
                      ItemsSource="{Binding Path=PowerCable.TypeList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"   
                      DisplayMemberPath="Type"
                      SelectedValuePath="Type"
                      SelectedItem="{Binding PowerCable.TypeModel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      Text="{Binding PowerCable.Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      IsEditable="False" VerticalAlignment="Center"/>

                <!--Installation Type-->
                <TextBlock Text="Installation Type" Grid.Row="6" Grid.Column="0" HorizontalAlignment="Left"/>
                <ComboBox  
                      Grid.Row="6" Grid.Column="2" Grid.ColumnSpan="2" HorizontalAlignment="Left"
                      Margin="0 3" Width="135"
                      FontWeight="Bold" FontSize="12"
                      ItemsSource="{Binding Path=DataContext.TypeManager.CableInstallationTypes ,
                                            RelativeSource={RelativeSource Mode=FindAncestor, 
                                            AncestorType={x:Type Window}}}"
                      SelectedValue="{Binding PowerCable.InstallationType}"
                      Text="{Binding PowerCable.InstallationType}"  d:Text="LadderTray"
                      IsEditable="False" VerticalAlignment="Center"/>


                <!--Size-->
                <TextBlock Text="Cable Size: " Grid.Row="8" Grid.Column="0"/>
                <ComboBox 
                      Grid.Row="8" Grid.Column="2" Grid.ColumnSpan="3" 
                      Width="50" HorizontalAlignment="Left"
                      VerticalAlignment="Center"
                      FontWeight="Bold" FontSize="12"
                      ItemsSource="{Binding Path=PowerCable.SizeList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"   
                      SelectedValue="{Binding PowerCable.Size, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      Text="{Binding PowerCable.Size, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      MaxDropDownHeight="auto"/>


                <!--Qty-->
                <TextBlock Text="Cable Qty: " Grid.Row="7" Grid.Column="0"/>
                <StackPanel Orientation="Horizontal" Grid.Row="7" Grid.Column="2" >
                    <!--Qty Parallel-->
                    <TextBox Text="{Binding PowerCable.QtyParallel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=False}"
                         Grid.Row="4" Grid.Column="2" Grid.ColumnSpan="1" 
                         FontWeight="Bold" Width="50" Background="White" 
                         TextAlignment="Center" HorizontalAlignment="Left"
                         BorderThickness="0.5"
                         d:Text="2"/>

                    <!--Per phase Label-->
                    <TextBlock 
                            Margin="0 5"
                            Text=" /ph" Grid.Row="4" Grid.Column="1"
                            FontWeight="SemiBold">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding PowerCable.Is1C}" Value="False">
                                        <Setter Property="Foreground" Value="Transparent"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding PowerCable.Is1C}" Value="True">
                                        <Setter Property="Foreground" Value="Black"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>

                <!--Derated Amps-->
                <TextBlock Text="Derated Amps: " Grid.Row="12" Grid.Column="0"/>
                <TextBlock Text="{Binding PowerCable.DeratedAmps, StringFormat={}{0:N0}  A, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                       Grid.Row="12" Grid.Column="2" FontWeight="Bold"
                       Margin="0 3"
                       d:Text="400" 
                       ToolTip="{Binding PowerCable.DeratedAmpsToolTip}"
                       ToolTipService.InitialShowDelay="50">

                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding PowerCable.IsValid}" Value="False">
                                    <Setter Property="Foreground" Value="#FFD40000"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>


                <TextBlock Text="Required Amps: " Grid.Row="13" Grid.Column="0"/>
                <TextBlock Text="{Binding PowerCable.RequiredAmps, StringFormat={}{0:N0}  A}" 
                       Grid.Row="13" Grid.Column="2" FontWeight="Bold"
                       d:Text="300"
                       ToolTip="{Binding PowerCable.RequiredAmpsToolTip}"
                       ToolTipService.InitialShowDelay="50"/>

                <!--Voltage Drop-->
                <TextBlock Text="Voltage Drop: " Grid.Row="15" Grid.Column="0"/>
                <StackPanel Orientation="Horizontal"
                        Grid.Row="15" Grid.Column="2" Grid.ColumnSpan="2">
                    <TextBlock Text="{Binding PowerCable.VoltageDrop, StringFormat={}{0:N1} V /}" 
                       Grid.Row="8" Grid.Column="2" FontWeight="Bold"
                       d:Text="5.2 V  / "
                       />

                    <TextBlock Text="{Binding PowerCable.VoltageDropPercentage, StringFormat={}{0:N2} %}" 
                       Grid.Row="8" Grid.Column="2" FontWeight="Bold"
                       d:Text="2.6 %"
                           Margin="5 3"
                       />
                </StackPanel>





                <!--Spacing-->
                <TextBlock Text="Spacing" Grid.Row="9" Grid.Column="0" HorizontalAlignment="Left"/>
                <ComboBox 
                      Grid.Row="9" Grid.Column="2" Width="50" HorizontalAlignment="Left"
                      FontWeight="Bold" FontSize="12" Padding="3 -1"
                      ItemsSource="{Binding Path=DataContext.TypeManager.CableSpacing, 
                                            RelativeSource={RelativeSource Mode=FindAncestor, 
                                            AncestorType={x:Type Window}}}"
                      SelectedValue="{Binding PowerCable.Spacing}"
                      Text="{Binding PowerCable.Spacing}"  d:Text="100"
                      IsEditable="False" VerticalAlignment="Center"/>

                <!--Indoor Outdoor-->
                <TextBlock Text="Outdoor" Grid.Row="10" Grid.Column="0" />
                <CheckBox IsChecked="{Binding PowerCable.IsOutdoor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                              Grid.Row="10" Grid.Column="2" FontWeight="Bold" HorizontalAlignment="Left"
                              Margin="0 5"/>
                <TextBlock Text="(exposed to sunlight)" Grid.Row="10" Grid.Column="2" 
                                Grid.ColumnSpan="2"
                                Margin="25 3"
                                FontStyle="Italic"/>
                <!--Derating-->
                <TextBlock Text="Derating" Grid.Row="11" Grid.Column="0"/>
                <TextBlock Text="{Binding PowerCable.Derating, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                       Grid.Row="11" Grid.Column="2" FontWeight="Bold"
                       d:Text="0.8"
                       ToolTip="{Binding PowerCable.DeratingToolTip}"
                       ToolTipService.InitialShowDelay="50"/>

                <!--Length-->
                <TextBlock Text="Length" Grid.Row="14" Grid.Column="0" />

                <StackPanel Orientation="Horizontal"
                        Grid.Row="14" Grid.Column="2"
                        Grid.ColumnSpan="2">

                    <syncfusion:DoubleTextBox Value="{Binding PowerCable.Length, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Grid.Row="8" Grid.Column="6" FontWeight="Bold"
                     Width="50"
                     HorizontalContentAlignment="Center"
                     Culture="en-US"
                     MinimumNumberDecimalDigits ="0"
                     MaximumNumberDecimalDigits ="1"
                     d:Text="0.8"
                     Visibility="Collapsed"/>

                    <TextBox Text="{Binding PowerCable.Length, Mode=TwoWay, UpdateSourceTrigger=Default}"
                     Grid.Row="8" Grid.Column="6" FontWeight="Bold"
                     Width="50"
                     HorizontalContentAlignment="Center"
                     d:Text="0.8" 
                     Visibility="Visible"
                     KeyUp="TextBox_KeyEnterUpdate"
                         />
                    <TextBlock Text="  meters"/>
                </StackPanel>


                <!--Sized Via-->
                <TextBlock Text="Sized via: " Grid.Row="16" Grid.Column="0"/>
                <StackPanel Orientation="Vertical" 
                        Grid.Row="16" Grid.Column="2"
                        HorizontalAlignment="Left"
                        Margin="0">
                    <TextBlock Text="{Binding PowerCable.AmpacityTable}" Grid.Row="4" Grid.Column="6" HorizontalAlignment="Left"
                           Height="20"
                           d:Text="TableD17N15Out" FontWeight="Bold" 
                           Style="{StaticResource textBoxMouseOver}"
                           Margin="0 3 0 -3"/>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Diagram " FontWeight="Bold"
                           Margin="0 -2"/>
                        <TextBlock Text="{Binding PowerCable.InstallationDiagram}"
                           d:Text="D8-1" FontWeight="Bold"
                           Margin="0 -2"/>
                    </StackPanel>
                </StackPanel>



            </Grid>


            <!--Sizing Buttons-->
            <StackPanel Orientation="Horizontal"
                        Grid.Row="1"
                        HorizontalAlignment="Center"
                        Margin="0 10 0 0"
                    >
                <Button Content="Auto-Size Single" 
                    Grid.Row="4"
                    HorizontalAlignment="Center"
                    Command="{Binding PowerCable.AutoSizeCommand}"   
                    ToolTipService.InitialShowDelay="50"
                    ToolTip="Auto-Sizes only this selected cable"/>

                <Button Content="Auto-Size All" 
                    Grid.Row="4"
                    HorizontalAlignment="Center"
                    Command="{Binding PowerCable.AutoSizeAllCommand}"   
                    ToolTipService.InitialShowDelay="50"
                    ToolTip="Auto-Sizes all cables in the selected branch circuit."/>
            </StackPanel>


            <!--Warning-->
            <Grid Grid.Row="4"
              Margin="5 5 0 5" 
              Visibility="{Binding PowerCable.IsValid, Converter={StaticResource BoolToVisInvert}, ConverterParameter=Inverted}">

                <iconControls:ErrorIcon 
                Height="16"
                VerticalAlignment="Top"
                HorizontalAlignment="Left"/>

                <TextBlock Text="{Binding PowerCable.IsInvalidMessage}"
                       Margin="0 20"
                       Grid.Row="1"
                       Foreground="#FFD40000"
                       TextWrapping="Wrap"
                       />
            </Grid>

        </Grid>
    </controls:EdtGroupBox>
</UserControl>