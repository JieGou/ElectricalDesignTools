<UserControl x:Class="WpfUI.Views.EqView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfUI.Views"
        xmlns:rules="clr-namespace:WpfUI.ValidationRules"
        xmlns:commands="clr-namespace:WpfUI.Commands"
        mc:Ignorable="d"
        d:Background="White" HorizontalAlignment="left">
    <UserControl.Resources>
        <CollectionViewSource x:Key="dteqList" Source="{Binding DteqList}"/>

        <Style TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
            Value="{Binding RelativeSource={RelativeSource Self},
                            Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid HorizontalAlignment="Left">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="10"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--NAVIGATION-->
        <StackPanel Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="1"
                    HorizontalAlignment="Center"
                    Height="35"
                    Background="Lavender" Width="237">
            <Button Name ="btnProjectSettings" Content="Project Settings" Height="27" 
                    Margin="10,0,10,0" Width="125" 
                    VerticalAlignment="Bottom"
                    Command="{Binding NavigateCommand}"/>

        </StackPanel>

        <!--LeftButtons-->
        <StackPanel Grid.Column="1" Grid.Row="2" Orientation="Vertical">

            <TextBox x:Name ="txtTag"
                         Text="{Binding DteqTagToAdd, 
                                        Mode=TwoWay, 
                                        UpdateSourceTrigger=PropertyChanged}"
                         Margin="10,50,10,10">
                <Validation.ErrorTemplate>
                    <ControlTemplate>
                        <!-- Align text box and error list vertically -->
                        <StackPanel Orientation="Vertical">
                            <AdornedElementPlaceholder x:Name="textBox"/>
                            <ItemsControl ItemsSource="{Binding}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding ErrorContent}" Foreground="Red"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                    </ControlTemplate>
                </Validation.ErrorTemplate>
            </TextBox>

            <Button Name ="btnAddDteq" Content="Add Dteq" Height="27" 
                        Margin="10,10,10,10" Width="125"
                        Command="{Binding Path=AddDteqCommand}"/>

            <ListBox Name="lstDteq" ItemsSource="{Binding DteqList, Mode=TwoWay}"
                         Height=" 100"
                         Margin="10,18,10,0"
                         DisplayMemberPath="Tag"/>



            <Button Name ="btnShowDteqOC" Content="Show Dteq" Height="27" Margin="10,18,10,0" Width="125"/>
            <Button Name ="btnShowLoadsOC" Content="Show Loads" Height="27" Margin="10,18,10,0" Width="125"/>
            <Button Name ="btnChangeLoadOC" Content="Change Load" Height="27" Margin="10,18,10,0" Width="125"/>

            <!--<Button Name ="addDtOLM" Content="Add Dteq to LM" Height="27" Margin="10,18,10,0" Width="125" Click="addDteqLM_Click"/>
                <Button Name ="addLM" Content="Add to LM" Height="27" Margin="10,18,10,0" Width="125" Click="addLM_Click"/>
                <Button Name ="ShowDteqLM" Content="Show LM Dteq" Height="27" Margin="10,18,10,0" Width="125" Click="SDLM_Click"/>
                <Button Name ="ShowLoadsLM" Content="Show LM Loads" Height="27" Margin="10,18,10,0" Width="125" Click="SLLM_Click"/>
                <Button Name ="ChangeLoadLM" Content="Change Load" Height="27" Margin="10,18,10,0" Width="125" Click="CLLM_Click"/>-->

        </StackPanel>

        <StackPanel Grid.Column="2" Grid.Row="2" Orientation="Vertical">

            <!--DTEQ-->
            <DataGrid x:Name="dgdDteq" 
                          ItemsSource="{Binding DteqList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          CanUserAddRows="False"
                          HorizontalAlignment="Left"
                          AutoGenerateColumns="False"
                          Height="200" 
                          Margin=" 10 10 10 10">
                <DataGrid.Columns>
                    <!--Basic-->
                    <DataGridTextColumn Header="Tag" x:Name="Tag" Binding="{Binding Path=Tag, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <!--Type to ComboBox-->
                    <DataGridTextColumn Header="Type" x:Name="Type" Binding="{Binding Path=Type, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <DataGridTextColumn Header="Description" x:Name="Description" MinWidth="50" Binding="{Binding Path=Description, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <DataGridComboBoxColumn Header="Fed From" ItemsSource="{Binding Source={StaticResource dteqList}}" DisplayMemberPath="Tag" SelectedValuePath="Tag" SelectedValueBinding="{Binding Path=FedFrom}"/>
                    <DataGridTextColumn Header="Voltage" x:Name="Voltage" Binding="{Binding Path=Voltage, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <DataGridTextColumn Header="Size" x:Name="Size" Binding="{Binding Path=Size, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <!--Type to ComboBox-->
                    <DataGridTextColumn Header="Unit" x:Name="Unit" Binding="{Binding Path=Unit, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <DataGridTextColumn Header="Line Voltage" x:Name="LineVoltageype"  Binding="{Binding Path=LineVoltage, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <DataGridTextColumn Header="Load Voltage" x:Name="LoadVoltage" Binding="{Binding Path=LoadVoltage, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <!--Loading-->
                    <DataGridTextColumn IsReadOnly="True" Header="FLA" x:Name="Fla" Binding="{Binding Path=Fla, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <DataGridTextColumn Header="Running Amps" x:Name="RunningAmps" Binding="{Binding Path=RunningAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <DataGridTextColumn Header="Conn kVA" x:Name="ConnectedKva" Binding="{Binding Path=ConnectedKva, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <DataGridTextColumn Header="Dem kVA" x:Name="DemandKva" Binding="{Binding Path=DemandKva, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <DataGridTextColumn Header="Dem kW" x:Name="DemandKw" Binding="{Binding Path=DemandKw, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <DataGridTextColumn Header="Dem kVAR" x:Name="DemandKvar" Binding="{Binding Path=DemandKvar, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <DataGridTextColumn Header=" PF " x:Name="PowerFactor" Binding="{Binding Path=PowerFactor, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <DataGridTextColumn Header="% Loaded" x:Name="PercentLoaded" Binding="{Binding Path=PercentLoaded, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

                    <!--OCPD-->
                    <DataGridTextColumn Header="OCPD" x:Name="PdType" Binding="{Binding Path=PdType, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <DataGridTextColumn Header="OCPD Trip" x:Name="PdSizeTrip" Binding="{Binding Path=PdSizeTrip, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <DataGridTextColumn Header="OCPD Frame" x:Name="PdSizeFrame" Binding="{Binding Path=PdSizeFrame, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <!--Cable-->
                    <DataGridTextColumn Header="Min Cable Amps" x:Name="MinCableAmps" Binding="{Binding Path=MinCableAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <DataGridTextColumn Header="Cable Qty" x:Name="CableQty" Binding="{Binding Path=CableQty, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>




                </DataGrid.Columns>
                <DataGrid.RowValidationRules>
                    <rules:InvalidFedFromRule ValidatesOnTargetUpdated="True" ValidationStep="CommittedValue"/>
                </DataGrid.RowValidationRules>
            </DataGrid>



            <!--ASSIGNED LOADS-->
            <DataGrid x:Name="dgdAssignedLoads" HorizontalAlignment="Left"
                          CanUserAddRows="False"
                          Height="200" 
                          Margin=" 10 10 10 10"
                          DataContext="{Binding ElementName=lstDteq}"
                          ItemsSource="{Binding Path=SelectedItem.AssignedLoads}"
                          AutoGenerateColumns="True">
                <DataGrid.Columns>
                    <!--//value it saves to-->
                </DataGrid.Columns>
            </DataGrid>

            <!--MASTER LOAD LIST-->
            <DataGrid x:Name="dgdMasterLoadList" HorizontalAlignment="Left"
                          CanUserAddRows="False"
                          Height="200" 
                          Margin=" 10 10 10 10"
                          ItemsSource="{Binding MasterLoadList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          AutoGenerateColumns="False">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Tag" Binding="{Binding Path=Tag}" MinWidth="50"/>
                    <DataGridComboBoxColumn Header="FedFrom" Width="75" 
                                                ItemsSource="{Binding Source={StaticResource dteqList}}"
                                                DisplayMemberPath="Tag" 
                                                SelectedValuePath="Tag" 
                                                SelectedValueBinding="{Binding Path=FedFrom}"/>
                    <!--//value it saves to-->
                </DataGrid.Columns>
            </DataGrid>

        </StackPanel>
    </Grid>
</UserControl>
