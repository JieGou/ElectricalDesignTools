<UserControl x:Class="WpfUI.Views.CableListView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfUI.Views"
        xmlns:rules="clr-namespace:WpfUI.ValidationRules"
        xmlns:commands="clr-namespace:WpfUI.Commands"
        mc:Ignorable="d"
        Background="Lavender">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--<ResourceDictionary Source="Styles/EDTTealStyle.xaml"/>-->
            </ResourceDictionary.MergedDictionaries>
            
            <!--Cell Padding-->
            <Style x:Key="ColumnElementStyle" TargetType="TextBlock">
                <Setter Property="Margin" Value="5,0,10,0" />
            </Style>

            <CollectionViewSource x:Key="dteqList" Source="{Binding DteqList}"/>

            <Style TargetType="TextBox">
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="ToolTip"
            Value="{Binding RelativeSource={RelativeSource Self},
                            Path=(Validation.Errors)[0].ErrorContent}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>        
    </UserControl.Resources>

    <Grid HorizontalAlignment="Left">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="10" />
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="10"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--NAVIGATION-->
        <Border Grid.Column="1" Grid.ColumnSpan="2" Background="Lavender"
                Grid.Row="1"
                Padding="10 10 10 10">

            <DockPanel Grid.Column="1" Grid.ColumnSpan="2"
                        Grid.Row="1"
                        HorizontalAlignment="Center"
                        Height="35"  Width="500"
                        Background="Lavender">

                <Button Name ="btnProjectSettings" Content="Project Settings" Height="27" 
                        Margin="10,0,10,0" Width="125" 
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left"
                        DockPanel.Dock="Left"
                        Command="{Binding NavigatePSCommand}"/>

                <Button Name ="btnCableList" Content="Cable List" Height="27" 
                        Margin="10,0,10,0" Width="125" 
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left"
                        DockPanel.Dock="Right"
                        Command="{Binding NavigateCableCommand}"/>

            </DockPanel>
        </Border>

        <!--LeftButtons-->
        <StackPanel Grid.Column="1" Grid.Row="2" Orientation="Vertical">

            <Button Name ="btnCreateCableList" Content="Create Cable List" Height="27" 
                        Margin="10,10,10,10" Width="125"
                        Command="{Binding Path=CreateCableList}"/>

            <Button Name ="btnShowDteqOC" Content="Show Dteq" Height="27" Width="125"/>
            <Button Name ="btnShowLoadsOC" Content="Show Loads" Height="27" Width="125"/>
            <Button Name ="btnChangeLoadOC" Content="Change Load" Height="27" Width="125"/>

        </StackPanel>

        <StackPanel Grid.Column="2" Grid.Row="2" Orientation="Vertical">

            <!--DTEQ-->
            <DataGrid x:Name="dgdDteq"
                      Margin="10 10 10 10"
                      ItemsSource="{Binding CableList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      CanUserAddRows="False"
                      HorizontalAlignment="Left"
                      AutoGenerateColumns="False"
                      Height="500">
                <DataGrid.Columns>
                    <!--Basic-->
                    <!--Textblock cell padding style in this.resources Move to ResDict-->
                    <DataGridTextColumn Header="TAG" x:Name="Tag" Binding="{Binding Path=Tag, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        ElementStyle="{StaticResource ColumnElementStyle}" />
                    <!--Type to ComboBox-->
                    <DataGridTextColumn Header="USAGE &#x0a;TYPE" x:Name="UsageType" Binding="{Binding Path=UsageType, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <DataGridTextColumn Header="TYPE" x:Name="Type" Binding="{Binding Path=Type, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <DataGridTextColumn Header="QTY in&#x0a;| |" x:Name="QtyParallel" Binding="{Binding Path=QtyParallel, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <DataGridTextColumn Header="QTY &#x0a;COND" x:Name="QtyConductors" MinWidth="50" Binding="{Binding Path=QtyConductors, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <DataGridTextColumn Header="Size" x:Name="Size" Binding="{Binding Path=Size, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <DataGridTextColumn Header="Design &#x0a;Amps" x:Name="DesignAmps" Binding="{Binding Path=DesignAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <DataGridTextColumn Header="Derated &#x0a;Amps" x:Name="DeratedAmps" Binding="{Binding Path=DeratedAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <DataGridTextColumn Header="Derating" x:Name="Derating" Binding="{Binding Path=Derating, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <DataGridTextColumn Header="Rated &#x0a;Amps" x:Name="RatedAmps" Binding="{Binding Path=RatedAmps, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <DataGridTextColumn Header="Rated &#x0a;Voltage" x:Name="RatedVoltage" Binding="{Binding Path=RatedVoltage, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <DataGridTextColumn Header="Insulation" x:Name="Insulation" Binding="{Binding Path=Insulation, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <DataGridTextColumn Header="From" x:Name="Source" Binding="{Binding Path=Source, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <DataGridTextColumn Header="To" x:Name="Destination" Binding="{Binding Path=Destination, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>



                </DataGrid.Columns>
                <DataGrid.RowValidationRules>
                    <!--<rules:InvalidFedFromRule ValidatesOnTargetUpdated="True" ValidationStep="CommittedValue"/>-->
                </DataGrid.RowValidationRules>
            </DataGrid>
           

        </StackPanel>
    </Grid>
</UserControl>
